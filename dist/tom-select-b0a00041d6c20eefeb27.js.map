{"version":3,"sources":["webpack://envision/../node_modules/tom-select/dist/js/tom-select.complete.js"],"names":["module","exports","forEvents","events","callback","split","forEach","event","MicroEvent","this","_events","fct","push","n","arguments","length","splice","indexOf","args","self","apply","MicroPlugin","Interface","plugins","name","fn","i","key","queue","names","settings","requested","loaded","Array","isArray","options","hasOwnProperty","require","shift","plugin","Error","loadPlugin","code_points","asciifold","str","normalize","replace","toLowerCase","generateDiacritics","latin_convert","diacritics","code_range","diacritic","String","fromCharCode","latin","toUpperCase","diacriticRegexPoints","regex","RegExp","getAttr","obj","getAttrNesting","scoreValue","value","token","weight","score","pos","search","string","escape_regex","propToArray","iterate","object","cmp","a","b","Sifter","items","query","respect_word_boundaries","weights","tokens","words","field_regex","Object","keys","map","join","word","field_match","field","match","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","_getSortFunction","sort_fld","sort_flds_count","multiplier","implicit_score","sort","sort_empty","sort_flds","multipliers","get_field","result","id","unshift","direction","optsUser","assign","fld_name","field_params","trim","tokenize","total","nesting","fn_sort","fn_score","item","filter","limit","slice","highlight","element","node","skip","nodeType","spannode","document","createElement","className","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","test","tagName","removeHighlight","el","elements","querySelectorAll","prototype","call","parent","firstChild","KEY_A","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","KEY_BACKSPACE","KEY_DELETE","KEY_TAB","KEY_SHORTCUT","navigator","userAgent","defaults","optgroups","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","closeAfterSelect","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","inputClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","escape_html","loadDebounce","delay","timeout","loading","Math","max","clearTimeout","setTimeout","loadedSearches","debounce_events","types","type","trigger","event_args","getSelection","input","start","selectionStart","selectionEnd","preventDefault","evt","stop","stopPropagation","addEvent","target","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","setAttribute","addSlashes","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","querySelector","textContent","settings_element","init_textbox","values","data_raw","JSON","parse","opt","_value","optionsMap","group_count","readData","dataset","json","addOption","group","arr","option_data","disabled","$option","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","init_select","getDom","jquery","HTMLElement","div","innerHTML","escapeQuery","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","cls","classList","add","removeClasses","remove","_classes","concat","Boolean","arg","parentMatch","selector","wrapper","contains","matches","getTail","list","isEmptyObject","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","attr","instance_i","TomSelect","input_arg","dir","super","control_input","dropdown","control","dropdown_content","order","tabIndex","is_select_tag","rtl","inputId","_destroy","sifter","tab_key","isOpen","isDisabled","isRequired","isInvalid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","hasOptions","currentResults","lastValue","caretPos","activeOption","activeItems","userOptions","renderCache","tomselect","window","getComputedStyle","getPropertyValue","required","setupOptions","initializePlugins","setupCallbacks","setupTemplates","setup","inputMode","classes_plugins","control_id","passive_event","passive","listboxId","append","role","haspopup","label","for","width","multiple","load","onOptionSelect","target_match","onItemSelect","onClick","e","onKeyDown","onKeyUp","onKeyPress","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","blur","inputState","win_scroll","removeEventListener","revertSettings","hidden","insertAdjacentElement","setValue","refreshState","updateOriginalInput","refreshItems","disable","on","onChange","registerOption","registerOptionGroup","templates","escape","callbacks","clearActiveItems","focus","isFull","pastedText","inputValue","splitInput","piece","createItem","character","keyCode","which","selectAll","close","open","next","getAdjacent","setActiveOption","prev","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","setActiveItem","deactivate","setCaret","parentElement","lastQuery","addItem","getOption","canLoad","loadCallback","bind","clearActiveOption","silent","clear","addItems","eventName","begin","end","swap","last","getLastActive","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","height_menu","height_item","y","clientHeight","scrollTop","offsetHeight","getBoundingClientRect","top","removeAttribute","controlChildren","setTextboxValue","getScoreFunction","getSearchOptions","calculateScore","triggerDropdown","j","k","groups_order","html","has_create_option","active","groups","results","active_before_hash","show_dropdown","min","opt_value","option_el","toggle","includes","createDocumentFragment","$order","group_options","group_html","tok","add_template","template","content","insertBefore","canCreate","active_index","selectable","dat","$id","hashed_id","clearCache","item_new","value_new","index_item","cache_items","cache_options","order_old","getItem","removeItem","all","buffer","x","isPending","wasFull","insertAtCaret","removeOption","output","caret","lock","created","unlock","refreshValidityState","checkValidity","invalid","opts","prepend","getValue","visibility","display","context","rect","scrollY","left","scrollX","selection","onDelete","pop","adjacent","nextElementSibling","new_pos","from","getElementsByClassName","off","templateName","when","method","new_fn","orig_method","result_new","define","changed","orig_onOptionSelect","UpdateCheckbox","checkbox","checked","hook","orig_render_option","rendered","title","button","$","sortable","orig_lock","orig_unlock","enable","$control","forcePlaceholderSize","ui","helper","overflow","each","headerClass","titleRowClass","labelClass","closeClass","header","close_link","tabindex","test_input","cssText","transfer_styles","style_name","resize","clientWidth","orig_deleteSelection","orig_keydown","index","previousSibling","nextSibling","orig_render_item","close_button","text","orig_canLoad","orig_clearActiveOption","orig_loadCallback","pagination","loading_more","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","clearOptions","no_more_results","scrollHeight","factory"],"mappings":";wFAMgEA,EAAOC,QAG/D,WAAe,aAgBtB,SAASC,EAAUC,EAAQC,GACzBD,EAAOE,MAAM,OAAOC,SAAQC,IAC1BH,EAASG,MAIb,MAAMC,EACJ,cACEC,KAAKC,QAAU,GAGjB,GAAGP,EAAQQ,GACTT,EAAUC,GAAQI,IAChBE,KAAKC,QAAQH,GAASE,KAAKC,QAAQH,IAAU,GAE7CE,KAAKC,QAAQH,GAAOK,KAAKD,MAI7B,IAAIR,EAAQQ,GACV,IAAIE,EAAIC,UAAUC,OAER,IAANF,EAKJX,EAAUC,GAAQI,IAChB,GAAU,IAANM,EAAS,cAAcJ,KAAKC,QAAQH,GACpCA,KAASE,KAAKC,SAAY,GAE9BD,KAAKC,QAAQH,GAAOS,OAAOP,KAAKC,QAAQH,GAAOU,QAAQN,GAAM,MAR7DF,KAAKC,QAAU,GAYnB,QAAQP,KAAWe,GACjB,IAAIC,EAAOV,KACXP,EAAUC,GAAQI,IAChB,GAAIA,KAASY,EAAKT,SAAY,EAE9B,IAAK,IAAIC,KAAOQ,EAAKT,QAAQH,GAC3BI,EAAIS,MAAMD,EAAMD,OAsBxB,SAASG,EAAYC,GAEnB,OADAA,EAAUC,QAAU,GACb,cAAoBD,EAOzB,cAAcE,EAAMC,GAClBH,EAAUC,QAAQC,GAAQ,CACxB,KAAQA,EACR,GAAMC,GAoBV,kBAAkBF,GAChB,IAAIG,EAAGb,EAAGc,EACNR,EAAOV,KACPmB,EAAQ,GAQZ,GAPAT,EAAKI,QAAU,CACbM,MAAO,GACPC,SAAU,GACVC,UAAW,GACXC,OAAQ,IAGNC,MAAMC,QAAQX,GAChB,IAAKG,EAAI,EAAGb,EAAIU,EAAQR,OAAQW,EAAIb,EAAGa,IACX,iBAAfH,EAAQG,GACjBE,EAAMhB,KAAKW,EAAQG,KAEnBP,EAAKI,QAAQO,SAASP,EAAQG,GAAGF,MAAQD,EAAQG,GAAGS,QACpDP,EAAMhB,KAAKW,EAAQG,GAAGF,YAGrB,GAAID,EACT,IAAKI,KAAOJ,EACNA,EAAQa,eAAeT,KACzBR,EAAKI,QAAQO,SAASH,GAAOJ,EAAQI,GACrCC,EAAMhB,KAAKe,IAKjB,KAAOC,EAAMb,QACXI,EAAKkB,QAAQT,EAAMU,SAIvB,WAAWd,GACT,IAAIL,EAAOV,KACPc,EAAUJ,EAAKI,QACfgB,EAASjB,EAAUC,QAAQC,GAE/B,IAAKF,EAAUC,QAAQa,eAAeZ,GACpC,MAAM,IAAIgB,MAAM,mBAAqBhB,EAAO,YAG9CD,EAAQQ,UAAUP,IAAQ,EAC1BD,EAAQS,OAAOR,GAAQe,EAAOd,GAAGL,MAAMD,EAAM,CAACA,EAAKI,QAAQO,SAASN,IAAS,KAC7ED,EAAQM,MAAMjB,KAAKY,GASrB,QAAQA,GACN,IAAIL,EAAOV,KACPc,EAAUJ,EAAKI,QAEnB,IAAKJ,EAAKI,QAAQS,OAAOI,eAAeZ,GAAO,CAC7C,GAAID,EAAQQ,UAAUP,GACpB,MAAM,IAAIgB,MAAM,oCAAsChB,EAAO,MAG/DL,EAAKsB,WAAWjB,GAGlB,OAAOD,EAAQS,OAAOR,KAa5B,IAAIkB,EAAc,CAAC,CAAC,GAAI,IAAK,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,KAAM,MAAO,CAAC,KAAM,MAAO,CAAC,KAAM,MAAO,CAAC,KAAM,MAAO,CAAC,KAAM,MAAO,CAAC,KAAM,MAAO,CAAC,KAAM,MAAO,CAAC,KAAM,MAAO,CAAC,KAAM,MAAO,CAAC,KAAM,MAAO,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,OAAQ,CAAC,MAAO,QAOjV,SAASC,EAAUC,GACjB,OAAOA,EAAIC,UAAU,OAAOC,QAAQ,mBAAoB,IAAID,UAAU,QAAQE,cAQhF,SAASC,IACP,IAAIC,EAAgB,CAClB,KAAM,IACN,KAAM,IACN,IAAK,KACL,IAAK,IACL,KAAM,IACN,MAAO,MAELC,EAAa,GA0BjB,OAxBAR,EAAYpC,SAAQ6C,IAClB,IAAK,IAAIzB,EAAIyB,EAAW,GAAIzB,GAAKyB,EAAW,GAAIzB,IAAK,CACnD,IAAI0B,EAAYC,OAAOC,aAAa5B,GAChC6B,EAAQH,EAAUP,UAAU,OAAOC,QAAQ,mBAAoB,IAAID,UAAU,QAE7EU,GAASH,IAKbG,EAAQA,EAAMR,cAEVQ,KAASN,IACXM,EAAQN,EAAcM,IAGlBA,KAASL,IACbA,EAAWK,GAASA,EAAQA,EAAMC,eAGpCN,EAAWK,IAAUH,OAIlBF,EAQT,IAAIA,EAAa,KACjB,SAASO,EAAqBC,GACT,OAAfR,IACFA,EAAaF,KAGf,IAAK,IAAIO,KAASL,EACZA,EAAWd,eAAemB,KAC5BG,EAAQA,EAAMZ,QAAQ,IAAIa,OAAOJ,EAAO,KAAM,IAAML,EAAWK,GAAS,MAI5E,OAAOG,EAaT,SAASE,EAAQC,EAAKrC,GACpB,GAAKqC,EACL,OAAOA,EAAIrC,GASb,SAASsC,EAAeD,EAAKrC,GAC3B,GAAKqC,EAAL,CAGA,IAFA,IAAIhC,EAAQL,EAAKnB,MAAM,KAEhBwB,EAAMd,SAAW8C,EAAMA,EAAIhC,EAAMS,YAExC,OAAOuB,GAUT,SAASE,EAAWC,EAAOC,EAAOC,GAChC,IAAIC,EAAOC,EACX,OAAKJ,GAGQ,KADbI,GADAJ,GAAgB,IACJK,OAAOJ,EAAMP,QACF,GACvBS,EAAQF,EAAMK,OAAOvD,OAASiD,EAAMjD,OACxB,IAARqD,IAAWD,GAAS,IACjBA,EAAQD,GANI,EAQrB,SAASK,EAAa3B,GACpB,OAAQA,EAAM,IAAIE,QAAQ,yBAA0B,QAOtD,SAAS0B,EAAYX,EAAKlC,GACxB,IAAIqC,EAAQH,EAAIlC,GAEZqC,IAAU/B,MAAMC,QAAQ8B,KAC1BH,EAAIlC,GAAO,CAACqC,IAehB,SAASS,EAAQC,EAAQtE,GACvB,GAAI6B,MAAMC,QAAQwC,GAChBA,EAAOpE,QAAQF,QAEf,IAAK,IAAIuB,KAAO+C,EACVA,EAAOtC,eAAeT,IACxBvB,EAASsE,EAAO/C,GAAMA,GAK9B,SAASgD,EAAIC,EAAGC,GACd,MAAiB,iBAAND,GAA+B,iBAANC,EAC3BD,EAAIC,EAAI,EAAID,EAAIC,GAAK,EAAI,GAGlCD,EAAIjC,EAAUiC,EAAI,IAAI7B,gBACtB8B,EAAIlC,EAAUkC,EAAI,IAAI9B,eACJ,EACd8B,EAAID,GAAW,EACZ,EAoBT,MAAME,EAUJ,YAAYC,EAAOjD,GACjBrB,KAAKsE,WAAQ,EACbtE,KAAKqB,cAAW,EAChBrB,KAAKsE,MAAQA,EACbtE,KAAKqB,SAAWA,GAAY,CAC1BoB,YAAY,GAShB,SAAS8B,EAAOC,EAAyBC,GACvC,IAAKF,IAAUA,EAAMjE,OAAQ,MAAO,GACpC,MAAMoE,EAAS,GACTC,EAAQJ,EAAM3E,MAAM,OAC1B,IAAIgF,EAiCJ,OA/BIH,IACFG,EAAc,IAAI1B,OAAO,KAAO2B,OAAOC,KAAKL,GAASM,IAAIjB,GAAckB,KAAK,KAAO,YAGrFL,EAAM9E,SAAQoF,IACZ,IAAIC,EACAC,EAAQ,KACRlC,EAAQ,KAER2B,IAAgBM,EAAcD,EAAKG,MAAMR,MAC3CO,EAAQD,EAAY,GACpBD,EAAOC,EAAY,IAGjBD,EAAK3E,OAAS,IAChB2C,EAAQa,EAAamB,GAEjBjF,KAAKqB,SAASoB,aAChBQ,EAAQD,EAAqBC,IAG3BuB,IAAyBvB,EAAQ,MAAQA,GAC7CA,EAAQ,IAAIC,OAAOD,EAAO,MAG5ByB,EAAOvE,KAAK,CACV0D,OAAQoB,EACRhC,MAAOA,EACPkC,MAAOA,OAGJT,EAWT,iBAAiBH,EAAO7C,GACtB,IAAIkC,EAAS5D,KAAKqF,cAAcd,EAAO7C,GACvC,OAAO1B,KAAKsF,kBAAkB1B,GAGhC,kBAAkBA,GAChB,MAAMc,EAASd,EAAOc,OAChBa,EAAcb,EAAOpE,OAE3B,IAAKiF,EACH,OAAO,WACL,OAAO,GAIX,MAAMC,EAAS5B,EAAOlC,QAAQ8D,OACxBf,EAAUb,EAAOa,QACjBgB,EAAcD,EAAOlF,OACrBoF,EAAY9B,EAAO8B,UAEzB,IAAKD,EACH,OAAO,WACL,OAAO,GAaX,MAAME,EACgB,IAAhBF,EACK,SAAUjC,EAAOoC,GACtB,MAAMT,EAAQK,EAAO,GAAGL,MACxB,OAAO7B,EAAWoC,EAAUE,EAAMT,GAAQ3B,EAAOiB,EAAQU,KAItD,SAAU3B,EAAOoC,GACtB,IAAIC,EAAM,EAEV,GAAIrC,EAAM2B,MAAO,CACf,MAAM5B,EAAQmC,EAAUE,EAAMpC,EAAM2B,QAE/B3B,EAAMP,OAASM,EAClBsC,GAAO,EAAIJ,EAEXI,GAAOvC,EAAWC,EAAOC,EAAO,QAGlCQ,EAAQS,GAAS,CAAChB,EAAQ0B,KACxBU,GAAOvC,EAAWoC,EAAUE,EAAMT,GAAQ3B,EAAOC,MAIrD,OAAOoC,EAAMJ,GAIjB,OAAoB,IAAhBF,EACK,SAAUK,GACf,OAAOD,EAAYjB,EAAO,GAAIkB,IAIC,QAA/BhC,EAAOlC,QAAQoE,YACV,SAAUF,GAKf,IAJA,IACIlC,EADAzC,EAAI,EAEJ4E,EAAM,EAEH5E,EAAIsE,EAAatE,IAAK,CAE3B,IADAyC,EAAQiC,EAAYjB,EAAOzD,GAAI2E,KAClB,EAAG,OAAO,EACvBC,GAAOnC,EAGT,OAAOmC,EAAMN,GAGR,SAAUK,GACf,IAAIC,EAAM,EAIV,OAHA7B,EAAQU,GAAQlB,IACdqC,GAAOF,EAAYnC,EAAOoC,MAErBC,EAAMN,GAYnB,gBAAgBhB,EAAO7C,GACrB,IAAIkC,EAAS5D,KAAKqF,cAAcd,EAAO7C,GACvC,OAAO1B,KAAK+F,iBAAiBnC,GAG/B,iBAAiBA,GACf,IAAI3C,EAAGb,EAAG4F,EAAUC,EAAiBC,EAAYC,EACjD,MAAMzF,EAAOV,KACP0B,EAAUkC,EAAOlC,QACjB0E,GAAQxC,EAAOW,OAAS7C,EAAQ2E,YAAc3E,EAAQ0E,KACtDE,EAAY,GACZC,EAAc,GAUdC,EAAY,SAAmBzF,EAAM0F,GACzC,MAAa,WAAT1F,EAA0B0F,EAAO/C,MAC9BE,EAAO8B,UAAUhF,EAAK4D,MAAMmC,EAAOC,IAAK3F,IAIjD,GAAIqF,EACF,IAAKnF,EAAI,EAAGb,EAAIgG,EAAK9F,OAAQW,EAAIb,EAAGa,KAC9B2C,EAAOW,OAA2B,WAAlB6B,EAAKnF,GAAGkE,QAC1BmB,EAAUnG,KAAKiG,EAAKnF,IAO1B,GAAI2C,EAAOW,MAAO,CAGhB,IAFA4B,GAAiB,EAEZlF,EAAI,EAAGb,EAAIkG,EAAUhG,OAAQW,EAAIb,EAAGa,IACvC,GAA2B,WAAvBqF,EAAUrF,GAAGkE,MAAoB,CACnCgB,GAAiB,EACjB,MAIAA,GACFG,EAAUK,QAAQ,CAChBxB,MAAO,SACPyB,UAAW,cAIf,IAAK3F,EAAI,EAAGb,EAAIkG,EAAUhG,OAAQW,EAAIb,EAAGa,IACvC,GAA2B,WAAvBqF,EAAUrF,GAAGkE,MAAoB,CACnCmB,EAAU/F,OAAOU,EAAG,GACpB,MAKN,IAAKA,EAAI,EAAGb,EAAIkG,EAAUhG,OAAQW,EAAIb,EAAGa,IACvCsF,EAAYpG,KAAgC,SAA3BmG,EAAUrF,GAAG2F,WAAwB,EAAI,GAM5D,OAFAX,EAAkBK,EAAUhG,QAIG,IAApB2F,GACTD,EAAWM,EAAU,GAAGnB,MACxBe,EAAaK,EAAY,GAClB,SAAUpC,EAAGC,GAClB,OAAO8B,EAAahC,EAAIsC,EAAUR,EAAU7B,GAAIqC,EAAUR,EAAU5B,MAG/D,SAAUD,EAAGC,GAClB,IAAInD,EAAGwF,EAAQtB,EAEf,IAAKlE,EAAI,EAAGA,EAAIgF,EAAiBhF,IAG/B,GAFAkE,EAAQmB,EAAUrF,GAAGkE,MACrBsB,EAASF,EAAYtF,GAAKiD,EAAIsC,EAAUrB,EAAOhB,GAAIqC,EAAUrB,EAAOf,IACxD,OAAOqC,EAGrB,OAAO,GAjBF,KA4BX,cAAclC,EAAOsC,GACnB,MAAMpC,EAAU,GAChB,IAAI/C,EAAUmD,OAAOiC,OAAO,GAAID,GAIhC,GAHA9C,EAAYrC,EAAS,QACrBqC,EAAYrC,EAAS,cAEjBA,EAAQ8D,OAAQ,CAGlB,GAFAzB,EAAYrC,EAAS,UAEjBF,MAAMC,QAAQC,EAAQ8D,SAAwC,iBAAtB9D,EAAQ8D,OAAO,GAAiB,CAC1E,IAAIA,EAAS,GACb9D,EAAQ8D,OAAO3F,SAAQkH,IACrBvB,EAAOrF,KAAK,CACVgF,MAAO4B,OAGXrF,EAAQ8D,OAASA,EAGnB9D,EAAQ8D,OAAO3F,SAAQmH,IACrBvC,EAAQuC,EAAa7B,OAAS,WAAY6B,EAAeA,EAAavD,OAAS,KAKnF,MAAO,CACL/B,QAASA,EACT6C,MAHFA,EAAQrC,EAAUqC,EAAQ,IAAIjC,cAAc2E,OAI1CvC,OAAQ1E,KAAKkH,SAAS3C,EAAO7C,EAAQ8C,wBAAyBC,GAC9D0C,MAAO,EACP7C,MAAO,GACPG,QAASA,EACTiB,UAAWhE,EAAQ0F,QAAU/D,EAAiBF,GAQlD,OAAOoB,EAAO7C,GACZ,IACIgC,EACAE,EACAyD,EACAC,EAJA5G,EAAOV,KAwCX,OAnCA4D,EAAS5D,KAAKqF,cAAcd,EAAO7C,GACnCA,EAAUkC,EAAOlC,QACjB6C,EAAQX,EAAOW,MAEf+C,EAAW5F,EAAQgC,OAAShD,EAAK4E,kBAAkB1B,GAE/CW,EAAMjE,OACR0D,EAAQtD,EAAK4D,OAAO,CAACiD,EAAMb,KACzBhD,EAAQ4D,EAASC,KAEM,IAAnB7F,EAAQ8F,QAAoB9D,EAAQ,IACtCE,EAAOU,MAAMnE,KAAK,CAChB,MAASuD,EACT,GAAMgD,OAKZ1C,EAAQtD,EAAK4D,OAAO,CAACiD,EAAMb,KACzB9C,EAAOU,MAAMnE,KAAK,CAChB,MAAS,EACT,GAAMuG,QAKZW,EAAU3G,EAAKqF,iBAAiBnC,KACnBA,EAAOU,MAAM8B,KAAKiB,GAE/BzD,EAAOuD,MAAQvD,EAAOU,MAAMhE,OAEC,iBAAlBoB,EAAQ+F,QACjB7D,EAAOU,MAAQV,EAAOU,MAAMoD,MAAM,EAAGhG,EAAQ+F,QAGxC7D,GAYX,SAAS+D,EAAUC,EAAS3E,GAC1B,GAAc,OAAVA,EAAJ,CAEA,GAAqB,iBAAVA,EAAoB,CAC7B,IAAKA,EAAM3C,OAAQ,OACnB2C,EAAQ,IAAIC,OAAOD,EAAO,MAGZ,SAAS0E,EAAUE,GACjC,IAAIC,EAAO,EAGX,GAAsB,IAAlBD,EAAKE,SAAgB,CACvB,IAAIpE,EAAMkE,EAAKjC,KAAKhC,OAAOX,GAE3B,GAAIU,GAAO,GAAKkE,EAAKjC,KAAKtF,OAAS,EAAG,CACpC,IAAI8E,EAAQyC,EAAKjC,KAAKR,MAAMnC,GACxB+E,EAAWC,SAASC,cAAc,QACtCF,EAASG,UAAY,YACrB,IAAIC,EAAYP,EAAKQ,UAAU1E,GAC/ByE,EAAUC,UAAUjD,EAAM,GAAG9E,QAC7B,IAAIgI,EAAcF,EAAUG,WAAU,GACtCP,EAASQ,YAAYF,GACrBF,EAAUK,WAAWC,aAAaV,EAAUI,GAC5CN,EAAO,QAIN,GAAsB,IAAlBD,EAAKE,UAAkBF,EAAKc,aAAe,kBAAkBC,KAAKf,EAAKgB,WAAgC,cAAnBhB,EAAKM,WAA8C,SAAjBN,EAAKgB,SAChI,IAAK,IAAI5H,EAAI,EAAGA,EAAI4G,EAAKc,WAAWrI,SAAUW,EAC5CA,GAAK0G,EAAUE,EAAKc,WAAW1H,IAIrC,OAAO6G,EAGTH,CAAUC,IAOZ,SAASkB,EAAgBC,GACvB,IAAIC,EAAWf,SAASgB,iBAAiB,kBACzCzH,MAAM0H,UAAUrJ,QAAQsJ,KAAKH,GAAU,SAAUD,EAAI9H,GACnD,IAAImI,EAASL,EAAGN,WAChBW,EAAOV,aAAaK,EAAGM,WAAYN,GACnCK,EAAOhH,eAIX,MAAMkH,EAAQ,GACRC,EAAa,GACbC,EAAU,GACVC,EAAW,GACXC,EAAS,GACTC,EAAY,GACZC,EAAW,GACXC,EAAgB,EAChBC,EAAa,GACbC,EAAU,EAEVC,EAD8B,oBAAdC,WAAoC,MAAMrB,KAAKqB,UAAUC,WACjD,UAAY,UAE1C,IAAIC,EAAW,CACbzI,QAAS,GACT0I,UAAW,GACXtJ,QAAS,GACTuJ,UAAW,IACXC,QAAS,KAETC,SAAS,EACT9H,YAAY,EACZ+H,OAAQ,KACRC,cAAc,EACdC,aAAc,KACd/C,WAAW,EACXgD,aAAa,EACbC,WAAY,KACZC,WAAY,GACZC,SAAU,KACVC,aAAc,KACdC,YAAY,EACZC,eAAe,EACfC,aAAa,EACbC,QAAS,KACTC,kBAAkB,EAClBC,kBAAkB,EAClBC,aAAc,IACdC,aAAc,UACdC,SAAU,KAEVC,cAAe,WACfC,WAAY,QACZC,WAAY,OACZC,cAAe,WACfC,mBAAoB,QACpBC,mBAAoB,QACpBC,mBAAmB,EACnBC,UAAW,SACXC,YAAa,CAAC,QACdC,kBAAmB,MACnBC,KAAM,KACNC,aAAc,aACdC,WAAY,WACZC,cAAe,cACfC,qBAAsB,sBACtBC,UAAW,OACXC,YAAa,SACbC,eAAgB,KAChBC,aAAc,KACdC,uBAAuB,EACvBC,YAAa,KACbC,gBAAiB,KACjBC,WAAY,SAAUxI,GACpB,OAAOA,EAAMjE,OAAS,GAsBxB0M,OAAQ,IAyBV,SAASC,EAAS1J,GAChB,OAAI,MAAOA,EAAgD,KACtC,kBAAVA,EAA4BA,EAAQ,IAAM,IAC9CA,EAAQ,GAOjB,SAAS2J,EAAY/K,GACnB,OAAQA,EAAM,IAAIE,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,UAOrG,SAAS8K,EAAanM,EAAIoM,GACxB,IAAIC,EACJ,OAAO,SAAU9J,EAAO5D,GACtB,IAAIe,EAAOV,KAEPqN,IACF3M,EAAK4M,QAAUC,KAAKC,IAAI9M,EAAK4M,QAAU,EAAG,IAG5CG,aAAaJ,GACbA,EAAUK,YAAW,WACnBL,EAAU,KACV3M,EAAKiN,eAAepK,IAAS,EAC7BvC,EAAGmI,KAAKzI,EAAM6C,EAAO5D,KACpByN,IASP,SAASQ,EAAgBlN,EAAMmN,EAAO7M,GACpC,IAAI8M,EACAC,EAAUrN,EAAKqN,QACfC,EAAa,GAgBjB,IAAKF,KAdLpN,EAAKqN,QAAU,WACb,IAAID,EAAOzN,UAAU,GAErB,IAA6B,IAAzBwN,EAAMrN,QAAQsN,GAGhB,OAAOC,EAAQpN,MAAMD,EAAML,WAF3B2N,EAAWF,GAAQzN,WAOvBW,EAAGL,MAAMD,EAAM,IACfA,EAAKqN,QAAUA,EAEFC,EACXD,EAAQpN,MAAMD,EAAMsN,EAAWF,IAWnC,SAASG,EAAaC,GACpB,MAAO,CACLC,MAAOD,EAAME,eACb9N,OAAQ4N,EAAMG,aAAeH,EAAME,gBAQvC,SAASE,EAAeC,EAAKC,GAAO,GAC9BD,IACFA,EAAID,iBAEAE,GACFD,EAAIE,mBASV,SAASC,EAASC,EAAQb,EAAMnO,EAAU+B,GACxCiN,EAAOC,iBAAiBd,EAAMnO,EAAU+B,GAS1C,SAASmN,EAAUC,EAAUP,GAC3B,QAAKA,KAIAA,EAAIO,IAMK,IAFDP,EAAIQ,OAAS,EAAI,IAAMR,EAAIS,QAAU,EAAI,IAAMT,EAAIU,SAAW,EAAI,IAAMV,EAAIW,QAAU,EAAI,GAczG,SAASC,EAAMpG,EAAIrC,GACjB,MAAM0I,EAAcrG,EAAGsG,aAAa,MAEpC,OAAID,IAIJrG,EAAGuG,aAAa,KAAM5I,GACfA,GAOT,SAAS6I,EAAWpN,GAClB,OAAOA,EAAIE,QAAQ,MAAO,QAAQA,QAAQ,KAAM,OAAOA,QAAQ,KAAM,OAGvE,SAASmN,EAAYtB,EAAOuB,GAC1B,IAAIpO,EAAWwD,OAAOiC,OAAO,GAAIqD,EAAUsF,GACvCC,EAAYrO,EAASmK,SACrBmE,EAActO,EAASsK,WACvBiE,EAAcvO,EAASqK,WACvBmE,EAAiBxO,EAASuK,cAC1BkE,EAAiBzO,EAASoK,cAC1BsE,EAAuB1O,EAASwK,mBAChCmE,EAAuB3O,EAASyK,mBAChCmE,EAAW/B,EAAMrF,QAAQvG,cACzBuK,EAAcqB,EAAMmB,aAAa,gBAAkBnB,EAAMmB,aAAa,oBAE1E,IAAKxC,IAAgBxL,EAAS+J,iBAAkB,CAC9C,IAAI8E,EAAShC,EAAMiC,cAAc,oBAE7BD,IACFrD,EAAcqD,EAAOE,aAIzB,IAAIC,EAAmB,CACrBxD,YAAaA,EACbnL,QAAS,GACT0I,UAAW,GACX9F,MAAO,GACPwG,SAAU,MA8FRwF,EAAe,KACjB,IAAIC,EAAQL,EACRM,EAAWtC,EAAMmB,aAAaK,GAElC,GAAKc,EAaE,CACLH,EAAiB3O,QAAU+O,KAAKC,MAAMF,GAEtC,IAAK,MAAMG,KAAON,EAAiB3O,QACjC2O,EAAiB/L,MAAMnE,KAAKwQ,EAAIf,QAjBrB,CACb,IAAIrM,EAAQ2K,EAAM3K,MAAM0D,QAAU,GAClC,IAAK5F,EAAS+J,mBAAqB7H,EAAMjD,OAAQ,OACjDiQ,EAAShN,EAAM3D,MAAMyB,EAASgJ,WAE9B,IAAK,MAAMuG,KAAUL,GACnBL,EAAS,IACFP,GAAeiB,EACtBV,EAAON,GAAegB,EACtBP,EAAiB3O,QAAQvB,KAAK+P,GAGhCG,EAAiB/L,MAAQiM,IAgB7B,MANiB,WAAbN,EAjHc,MAChB,IAAIpH,EACAnH,EAAU2O,EAAiB3O,QAC3BmP,EAAa,GACbC,EAAc,EAEdC,EAAWhI,IACb,IAAInD,EAAOf,OAAOiC,OAAO,GAAIiC,EAAGiI,SAE5BC,EAAOvB,GAAa9J,EAAK8J,GAM7B,MAJoB,iBAATuB,GAAqBA,EAAK3Q,SACnCsF,EAAOf,OAAOiC,OAAOlB,EAAM6K,KAAKC,MAAMO,KAGjCrL,GAGLsL,EAAY,CAAChB,EAAQiB,KACvB,IAAI5N,EAAQ0J,EAASiD,EAAO3M,OAC5B,GAAKA,GAAUlC,EAAS+J,iBAKxB,GAAIyF,EAAWlP,eAAe4B,IAC5B,GAAI4N,EAAO,CACT,IAAIC,EAAMP,EAAWtN,GAAOuM,GAEvBsB,EAEO5P,MAAMC,QAAQ2P,GAGxBA,EAAIjR,KAAKgR,GAFTN,EAAWtN,GAAOuM,GAAkB,CAACsB,EAAKD,GAF1CN,EAAWtN,GAAOuM,GAAkBqB,OAL1C,CAgBA,IAAIE,EAAcN,EAASb,GAC3BmB,EAAY1B,GAAe0B,EAAY1B,IAAgBO,EAAOE,YAC9DiB,EAAYzB,GAAeyB,EAAYzB,IAAgBrM,EACvD8N,EAAYxB,GAAkBwB,EAAYxB,IAAmBK,EAAOoB,SACpED,EAAYvB,GAAkBuB,EAAYvB,IAAmBqB,EAC7DE,EAAYE,QAAUrB,EACtBW,EAAWtN,GAAS8N,EACpB3P,EAAQvB,KAAKkR,GAETnB,EAAOsB,UACTnB,EAAiB/L,MAAMnE,KAAKoD,KAI5BkO,EAAWC,IACb,IAAIhL,EAAIiL,GACRA,EAAgBZ,EAASW,IACX3B,GAAwB4B,EAAc5B,IAAyB2B,EAASrC,aAAa,UAAY,GAC/GsC,EAAc3B,GAAwB2B,EAAc3B,IAAyBc,IAC7Ea,EAAc9B,GAAkB8B,EAAc9B,IAAmB6B,EAASJ,SAC1EjB,EAAiBjG,UAAUjK,KAAKwR,GAChCjL,EAAKiL,EAAc3B,GAEnB,IAAK,MAAME,KAAUwB,EAASE,SAC5BV,EAAUhB,EAAQxJ,IAItB2J,EAAiBvF,SAAWoD,EAAM2D,aAAa,YAAc,KAAO,EAEpE,IAAK,MAAMC,KAAS5D,EAAM0D,SAGR,cAFhB/I,EAAUiJ,EAAMjJ,QAAQvG,eAGtBmP,EAASK,GACY,WAAZjJ,GACTqI,EAAUY,IAqCdC,GAEAzB,IAGKzL,OAAOiC,OAAO,GAAIqD,EAAUkG,EAAkBZ,GASvD,SAASuC,EAAOzN,GACd,GAAIA,EAAM0N,OACR,OAAO1N,EAAM,GAGf,GAAIA,aAAiB2N,YACnB,OAAO3N,EAGT,GAAIA,EAAM/D,QAAQ,MAAQ,EAAG,CAC3B,IAAI2R,EAAMlK,SAASC,cAAc,OAGjC,OAFAiK,EAAIC,UAAY7N,EAAM0C,OAEfkL,EAAI9I,WAGb,OAAOpB,SAASkI,cAAc5L,GAEhC,SAAS8N,EAAY9N,GACnB,OAAOA,EAAMlC,QAAQ,UAAW,QAOlC,SAASiQ,EAAaC,EAAQC,GAC5B,IAAI1S,EAAQmI,SAASwK,YAAY,cACjC3S,EAAM4S,UAAUF,GAAY,GAAM,GAClCD,EAAOI,cAAc7S,GAOvB,SAAS8S,EAASL,EAAQM,GACxBhO,OAAOiC,OAAOyL,EAAOO,MAAOD,GAO9B,SAASE,EAAWC,KAAUC,GAC5B,IAAIC,EAAeC,EAAaF,IAChCD,EAAQI,EAAYJ,IACdjO,KAAIgE,IACRmK,EAAanO,KAAIsO,IACftK,EAAGuK,UAAUC,IAAIF,SASvB,SAASG,EAAcR,KAAUC,GAC/B,IAAIC,EAAeC,EAAaF,IAChCD,EAAQI,EAAYJ,IACdjO,KAAIgE,IACRmK,EAAanO,KAAIsO,IACftK,EAAGuK,UAAUG,OAAOJ,SAS1B,SAASF,EAAa1S,GACpB,IAAIwS,EAAU,GAEd,IAAK,IAAIS,KAAYjT,EACK,iBAAbiT,IACTA,EAAWA,EAASzM,OAAOrH,MAAM,sBAG/B4B,MAAMC,QAAQiS,KAChBT,EAAUA,EAAQU,OAAOD,IAI7B,OAAOT,EAAQzL,OAAOoM,SAOxB,SAASR,EAAYS,GAKnB,OAJKrS,MAAMC,QAAQoS,KACjBA,EAAM,CAACA,IAGFA,EAQT,SAASC,EAAYnF,EAAQoF,EAAUC,GACrC,IAAIA,GAAYA,EAAQC,SAAStF,GAIjC,KAAOA,GAAUA,EAAOuF,SAAS,CAC/B,GAAIvF,EAAOuF,QAAQH,GACjB,OAAOpF,EAGTA,EAASA,EAAOlG,YAWpB,SAAS0L,EAAQC,EAAMxN,GACrB,OAAIA,EAAY,EACPwN,EAAKA,EAAK9T,OAAS,GAGrB8T,EAAK,GAOd,SAASC,EAAcjR,GACrB,OAAmC,IAA5ByB,OAAOC,KAAK1B,GAAK9C,OAO1B,SAASgU,EAAUvL,EAAIwL,GACrB,IAAKxL,EAAI,OAAQ,EACjBwL,EAAUA,GAAWxL,EAAGyL,SAGxB,IAFA,IAAIvT,EAAI,EAED8H,EAAKA,EAAG0L,wBACT1L,EAAGmL,QAAQK,IACbtT,IAIJ,OAAOA,EAOT,SAASyT,GAAQ3L,EAAI4L,GACnB,IAAK,MAAMC,KAAQD,EACjB5L,EAAGuG,aAAasF,EAAMD,EAAMC,IAIhC,IAAIC,GAAa,EACjB,MAAMC,WAAkBlU,EAAYb,IAClC,YAAYgV,EAAW1T,GA2CrB,IAAI2T,EA1CJC,QACAjV,KAAKkV,mBAAgB,EACrBlV,KAAKgU,aAAU,EACfhU,KAAKmV,cAAW,EAChBnV,KAAKoV,aAAU,EACfpV,KAAKqV,sBAAmB,EACxBrV,KAAKsV,MAAQ,EACbtV,KAAKqB,cAAW,EAChBrB,KAAKkO,WAAQ,EACblO,KAAKuV,cAAW,EAChBvV,KAAKwV,mBAAgB,EACrBxV,KAAKyV,SAAM,EACXzV,KAAK0V,aAAU,EACf1V,KAAK2V,cAAW,EAChB3V,KAAK4V,YAAS,EACd5V,KAAK6V,SAAU,EACf7V,KAAK8V,QAAS,EACd9V,KAAK+V,YAAa,EAClB/V,KAAKgW,gBAAa,EAClBhW,KAAKiW,WAAY,EACjBjW,KAAKkW,UAAW,EAChBlW,KAAKmW,WAAY,EACjBnW,KAAKoW,eAAgB,EACrBpW,KAAKqW,SAAU,EACfrW,KAAKsW,aAAc,EACnBtW,KAAKuW,YAAa,EAClBvW,KAAKwW,eAAiB,KACtBxW,KAAKyW,UAAY,GACjBzW,KAAK0W,SAAW,EAChB1W,KAAKsN,QAAU,EACftN,KAAK2N,eAAiB,GACtB3N,KAAK2W,aAAe,KACpB3W,KAAK4W,YAAc,GACnB5W,KAAKoK,UAAY,GACjBpK,KAAK0B,QAAU,GACf1B,KAAK6W,YAAc,GACnB7W,KAAKsE,MAAQ,GACbtE,KAAK8W,YAAc,CACjB,KAAQ,GACR,OAAU,IAEZjC,KAEA,IAAI3G,EAAQ8D,EAAO+C,GAEnB,GAAI7G,EAAM6I,UACR,MAAM,IAAIhV,MAAM,kDAGlBmM,EAAM6I,UAAY/W,KAGlBgV,GADoBgC,OAAOC,kBAAoBD,OAAOC,iBAAiB/I,EAAO,OAC1DgJ,iBAAiB,aAErClX,KAAKqB,SAAWmO,EAAYtB,EAAO7M,GACnCrB,KAAKkO,MAAQA,EACblO,KAAKuV,SAAWrH,EAAMqH,UAAY,EAClCvV,KAAKwV,cAAgD,WAAhCtH,EAAMrF,QAAQvG,cACnCtC,KAAKyV,IAAM,OAAO7M,KAAKoM,GACvBhV,KAAK0V,QAAUvG,EAAMjB,EAAO,aAAe2G,IAC3C7U,KAAKgW,WAAa9H,EAAMiJ,SAExBnX,KAAK4V,OAAS,IAAIvR,EAAOrE,KAAK0B,QAAS,CACrCe,WAAYzC,KAAKqB,SAASoB,aAE5BzC,KAAKoX,aAAapX,KAAKqB,SAASK,QAAS1B,KAAKqB,SAAS+I,kBAChDpK,KAAKqB,SAAS+I,iBACdpK,KAAKqB,SAASK,QAErB1B,KAAKqB,SAAS8K,KAAOnM,KAAKqB,SAAS8K,OAAoC,IAA3BnM,KAAKqB,SAASyJ,SAAiB,SAAW,SAE5C,kBAA/B9K,KAAKqB,SAAS0J,eACvB/K,KAAKqB,SAAS0J,aAAsC,UAAvB/K,KAAKqB,SAAS8K,MAGA,kBAAlCnM,KAAKqB,SAASyL,kBACvB9M,KAAKqB,SAASyL,gBAAyC,UAAvB9M,KAAKqB,SAAS8K,MAIhD,IAAI3E,EAASxH,KAAKqB,SAASqJ,aAEL,mBAAXlD,IACa,iBAAXA,IACTA,EAAS,IAAItE,OAAOsE,IAGlBA,aAAkBtE,OACpBlD,KAAKqB,SAASqJ,aAAewD,GAAS1G,EAAOoB,KAAKsF,GAElDlO,KAAKqB,SAASqJ,aAAe,KAAM,GAIvC1K,KAAKqX,kBAAkBrX,KAAKqB,SAASP,SACrCd,KAAKsX,iBACLtX,KAAKuX,iBACLvX,KAAKwX,QAUP,QACE,IAEIxD,EACAoB,EACAF,EACAC,EACAE,EACAoC,EACAxE,EACAyE,EAEAC,EAXAjX,EAAOV,KACPqB,EAAWX,EAAKW,SAShB6M,EAAQxN,EAAKwN,MAEjB,MAAM0J,EAAgB,CACpBC,SAAS,GAELC,EAAYpX,EAAKgV,QAAU,eAejC,GAdA+B,EAAY/W,EAAKW,SAAS8K,KAC1B8G,EAAU/E,EAAMmB,aAAa,UAAY,GAEzC0D,EADAiB,EAAUhC,EAAO,SACG3Q,EAAS+K,aAAc6G,EAASwE,GAEpD1E,EADAqC,EAAUpD,EAAO,uBACG3Q,EAASgL,YAC7B2H,EAAQ+D,OAAO3C,GAEfrC,EADAoC,EAAWzU,EAAKsM,OAAO,YACF3L,EAASiL,cAAemL,GAE7C1E,EADAsC,EAAmBrD,EAAO,2BAA2B8F,qBACxBzW,EAASkL,sBACtC4I,EAAS4C,OAAO1C,GAChBrD,EAAO3Q,EAASqL,gBAAkBsH,GAASxL,YAAY2M,GAEnD9T,EAASsL,aACXuI,EAAgBlD,EAAO3Q,EAASsL,kBAC3B,CACLuI,EAAgBlD,EAAO,qDAEvB,IAAI2C,EAAQ,CAAC,cAAe,iBAAkB,gBAE9C,IAAK,MAAMC,KAAQD,EACbzG,EAAMmB,aAAauF,IACrBF,GAAQQ,EAAe,CACrB,CAACN,GAAO1G,EAAMmB,aAAauF,KAM9BvT,EAASsL,eACZuI,EAAcK,SAAWrH,EAAMoD,UAAY,EAAI5Q,EAAK6U,SACpDH,EAAQ5M,YAAY0M,IAGtBR,GAAQQ,EAAe,CACrB8C,KAAM,WACNC,SAAU,UACV,gBAAiB,QACjB,gBAAiBH,IAEnBH,EAAaxI,EAAM+F,EAAexU,EAAKgV,QAAU,gBACjD,IAAInR,EAAQ,cAAgB8N,EAAY3R,EAAKgV,SAAW,KACpDwC,EAAQjQ,SAASkI,cAAc5L,GAE/B2T,IACFxD,GAAQwD,EAAO,CACbC,IAAKR,IAGPjD,GAAQW,EAAkB,CACxB,kBAFalG,EAAM+I,EAAOxX,EAAKgV,QAAU,gBAMzChV,EAAKW,SAASuL,uBAChBmG,EAAWoC,EAAUlC,GAGvBe,EAAQlB,MAAMsF,MAAQlK,EAAM4E,MAAMsF,MAE9B1X,EAAKI,QAAQM,MAAMd,SACrBoX,EAAkB,UAAYhX,EAAKI,QAAQM,MAAM4D,KAAK,YACtD+N,EAAW,CAACiB,EAASmB,GAAWuC,KAGP,OAAtBrW,EAASyJ,UAAqBzJ,EAASyJ,SAAW,IAAMpK,EAAK8U,eAChEd,GAAQxG,EAAO,CACbmK,SAAU,aAIV3X,EAAKW,SAASwL,aAChB6H,GAAQQ,EAAe,CACrBrI,YAAaxL,EAASwL,eAKrBnM,EAAKW,SAASiJ,SAAW5J,EAAKW,SAASgJ,YAC1C3J,EAAKW,SAASiJ,QAAU,IAAIpH,OAAO,OAASY,EAAapD,EAAKW,SAASgJ,WAAa,UAKlFrK,KAAKqB,SAASiX,MAAQtY,KAAKqB,SAASiK,eACtCtL,KAAKqB,SAASiX,KAAOnL,EAAanN,KAAKqB,SAASiX,KAAMtY,KAAKqB,SAASiK,eAGtE5K,EAAK0U,QAAUA,EACf1U,EAAKwU,cAAgBA,EACrBxU,EAAKsT,QAAUA,EACftT,EAAKyU,SAAWA,EAChBzU,EAAK2U,iBAAmBA,EACxB3U,EAAKwU,cAAcpH,KAAOI,EAAMJ,KAEhCY,EAASyG,EAAU,SAAS5G,IAC1B,MAAM2B,EAAS4D,EAAYvF,EAAII,OAAQ,qBAEnCuB,GACFxP,EAAK6X,eAAehK,EAAK2B,MAG7BxB,EAAS0G,EAAS,SAAS7G,IACzB,IAAIiK,EAAe1E,EAAYvF,EAAII,OAAQ,IAAMjO,EAAKW,SAASmL,UAAW4I,GAEtEoD,GAAgB9X,EAAK+X,aAAalK,EAAKiK,IAKhB,IAAvBtD,EAAc3R,OAIlB7C,EAAKgY,QAAQnK,MAKfG,EAASwG,EAAe,aAAayD,IACP,KAAxBzD,EAAc3R,OAChBoV,EAAElK,qBAGNC,EAASwG,EAAe,WAAWyD,GAAKjY,EAAKkY,UAAUD,KACvDjK,EAASwG,EAAe,SAASyD,GAAKjY,EAAKmY,QAAQF,KACnDjK,EAASwG,EAAe,YAAYyD,GAAKjY,EAAKoY,WAAWH,KACzDjK,EAASwG,EAAe,UAAU,IAAMxU,EAAKqY,oBAAoBnB,GACjElJ,EAASwG,EAAe,QAAQyD,GAAKjY,EAAKsY,OAAOL,KACjDjK,EAASwG,EAAe,SAASyD,GAAKjY,EAAKuY,QAAQN,KACnDjK,EAASwG,EAAe,SAASyD,GAAKjY,EAAKwY,QAAQP,KAEnD,MAAMQ,EAAgBR,IAGpB,IAAK3E,EAAQC,SAAS0E,EAAEhK,UAAYwG,EAASlB,SAAS0E,EAAEhK,QAMtD,OALIjO,EAAKyV,WACPzV,EAAK0Y,YAGP1Y,EAAK2Y,aAKP/K,EAAeqK,GAAG,IAGpB,IAAIW,EAAa,KACX5Y,EAAKoV,QACPpV,EAAKqY,oBAITrK,EAASzG,SAAU,YAAakR,GAChCzK,EAASsI,OAAQ,QAASsC,EAAY1B,GACtClJ,EAASsI,OAAQ,SAAUsC,EAAY1B,GAEvClX,EAAKiV,SAAW,KACd1N,SAASsR,oBAAoB,YAAaJ,GAC1CnC,OAAOuC,oBAAoB,QAASD,GACpCtC,OAAOuC,oBAAoB,SAAUD,IAKvCtZ,KAAKwZ,eAAiB,CACpBpH,UAAWlE,EAAMkE,UACjBmD,SAAUrH,EAAMqH,UAElBrH,EAAMqH,UAAY,EAClBb,GAAQxG,EAAO,CACbuL,OAAQ,WAEVvL,EAAMwL,sBAAsB,WAAYhZ,EAAKsT,SAC7CtT,EAAKiZ,SAAStY,EAASiD,cAChBjD,EAASiD,MAChBoK,EAASR,EAAO,WAAWyK,IACzBrK,EAAeqK,GAEVjY,EAAKuV,YACRvV,EAAKuV,WAAY,EACjBvV,EAAKkZ,mBAGTlZ,EAAKmZ,sBACLnZ,EAAKoZ,eACLpZ,EAAKkZ,eACLlZ,EAAK2Y,aACL3Y,EAAK2V,SAAU,EAEXnI,EAAMoD,UACR5Q,EAAKqZ,UAGPrZ,EAAKsZ,GAAG,SAAUha,KAAKia,UACvBlH,EAAW7E,EAAO,eAClBxN,EAAKqN,QAAQ,eAEY,IAArB1M,EAAS8J,SACXzK,EAAK4X,KAAK,IASd,aAAa5W,EAAU,GAAI0I,EAAY,IAErC,IAAK,MAAM8F,KAAUxO,EACnB1B,KAAKka,eAAehK,GAItB,IAAK,MAAMwB,KAAYtH,EACrBpK,KAAKma,oBAAoBzI,GAQ7B,iBACE,IAAIhR,EAAOV,KACP2P,EAAcjP,EAAKW,SAASsK,WAC5BmE,EAAiBpP,EAAKW,SAASwK,mBAC/BuO,EAAY,CACd,SAAY,CAACxU,EAAMyU,KACjB,IAAI3I,EAAWzJ,SAASC,cAAc,OAGtC,OAFAwJ,EAASvJ,UAAY,WACrBuJ,EAASlJ,YAAY5C,EAAKlE,SACnBgQ,GAET,gBAAmB,CAAC9L,EAAMyU,IACjB,gCAAkCA,EAAOzU,EAAKkK,IAAmB,SAE1E,OAAU,CAAClK,EAAMyU,IACR,QAAUA,EAAOzU,EAAK+J,IAAgB,SAE/C,KAAQ,CAAC/J,EAAMyU,IACN,QAAUA,EAAOzU,EAAK+J,IAAgB,SAE/C,cAAiB,CAAC/J,EAAMyU,IACf,mCAAqCA,EAAOzU,EAAKsI,OAAS,0BAEnE,WAAc,CAACtI,EAAMyU,IACZ,iDAET,QAAW,CAACzU,EAAMyU,IACT,8BAET,YAAe,OACf,SAAY,IACH,eAGX3Z,EAAKW,SAAS2L,OAASnI,OAAOiC,OAAO,GAAIsT,EAAW1Z,EAAKW,SAAS2L,QAQpE,iBACE,IAAI9L,EAAKF,EACLsZ,EAAY,CACd,WAAc,eACd,OAAU,WACV,SAAY,YACZ,YAAe,eACf,MAAS,UACT,WAAc,cACd,cAAiB,iBACjB,aAAgB,gBAChB,aAAgB,mBAChB,gBAAmB,sBACnB,eAAkB,qBAClB,cAAiB,iBACjB,eAAkB,kBAClB,KAAQ,SACR,KAAQ,SACR,MAAS,UACT,KAAQ,UAGV,IAAKpZ,KAAOoZ,GACVtZ,EAAKhB,KAAKqB,SAASiZ,EAAUpZ,MACrBlB,KAAKga,GAAG9Y,EAAKF,GAUzB,QAAQ2X,GACN,IAAIjY,EAAOV,KAEX,GAAIU,EAAKkW,YAAYtW,OAAS,EAG5B,OAFAI,EAAK6Z,wBACL7Z,EAAK8Z,QAIH9Z,EAAKyV,WAAazV,EAAKoV,OACzBpV,EAAK0Y,OAEL1Y,EAAK8Z,QAST,YAAY7B,IAQZ,WACErG,EAAatS,KAAKkO,MAAO,SACzBoE,EAAatS,KAAKkO,MAAO,UAQ3B,QAAQyK,GACN,IAAIjY,EAAOV,KAEPU,EAAK+Z,UAAY/Z,EAAK0V,eAAiB1V,EAAKwV,SAC9C5H,EAAeqK,GAMbjY,EAAKW,SAASiJ,SAEhBoD,YAAW,KACT,IAAIgN,EAAaha,EAAKia,aAEtB,GAAKD,EAAWtV,MAAM1E,EAAKW,SAASiJ,SAApC,CAIA,IAAIsQ,EAAaF,EAAWzT,OAAOrH,MAAMc,EAAKW,SAASiJ,SAEvD,IAAK,MAAMuQ,KAASD,EAClBla,EAAKoa,WAAWD,MAEjB,GASP,WAAWlC,GACT,IAAIjY,EAAOV,KAEX,IAAIU,EAAKwV,SAAT,CAKA,IAAI6E,EAAYnY,OAAOC,aAAa8V,EAAEqC,SAAWrC,EAAEsC,OAEnD,OAAIva,EAAKW,SAASmJ,QAAiC,UAAvB9J,EAAKW,SAAS8K,MAAoB4O,IAAcra,EAAKW,SAASgJ,WACxF3J,EAAKoa,kBACLxM,EAAeqK,SAFjB,EANErK,EAAeqK,GAkBnB,UAAUA,GACR,IAAIjY,EAAOV,KAEX,GAAIU,EAAKwV,SACHyC,EAAEqC,UAAYjR,GAChBuE,EAAeqK,OAFnB,CAQA,OAAQA,EAAEqC,SAER,KAAK1R,EACH,GAAIuF,EAAU7E,EAAc2O,GAE1B,YADAjY,EAAKwa,YAIP,MAGF,KAAK1R,EAOH,OANI9I,EAAKoV,SACPxH,EAAeqK,GAAG,GAClBjY,EAAKya,cAGPza,EAAK6Z,mBAIP,KAAK3Q,EACH,IAAKlJ,EAAKoV,QAAUpV,EAAK6V,WACvB7V,EAAK0a,YACA,GAAI1a,EAAKiW,aAAc,CAC5B,IAAI0E,EAAO3a,EAAK4a,YAAY5a,EAAKiW,aAAc,GAC3C0E,GAAM3a,EAAK6a,gBAAgBF,GAIjC,YADA/M,EAAeqK,GAIjB,KAAKjP,EACH,GAAIhJ,EAAKiW,aAAc,CACrB,IAAI6E,EAAO9a,EAAK4a,YAAY5a,EAAKiW,cAAe,GAC5C6E,GAAM9a,EAAK6a,gBAAgBC,GAIjC,YADAlN,EAAeqK,GAIjB,KAAKpP,EAQH,YAPI7I,EAAKoV,QAAUpV,EAAKiW,cACtBjW,EAAK6X,eAAeI,EAAGjY,EAAKiW,cAC5BrI,EAAeqK,IACNjY,EAAKW,SAASmJ,QAAU9J,EAAKoa,cACtCxM,EAAeqK,IAMnB,KAAKlP,EAEH,YADA/I,EAAK+a,kBAAkB,EAAG9C,GAI5B,KAAKhP,EAEH,YADAjJ,EAAK+a,iBAAiB,EAAG9C,GAI3B,KAAK5O,EAgBH,YAfIrJ,EAAKW,SAAS6J,cACZxK,EAAKoV,QAAUpV,EAAKiW,eACtBjW,EAAKmV,SAAU,EACfnV,EAAK6X,eAAeI,EAAGjY,EAAKiW,cAG5BrI,EAAeqK,GACfjY,EAAKmV,SAAU,GAGbnV,EAAKW,SAASmJ,QAAU9J,EAAKoa,cAC/BxM,EAAeqK,KAOrB,KAAK9O,EACL,KAAKC,EAEH,YADApJ,EAAKgb,gBAAgB/C,GAKrBjY,EAAK0V,gBAAkBvH,EAAU7E,EAAc2O,IACjDrK,EAAeqK,IASnB,QAAQA,GACN,IAAIjY,EAAOV,KAEX,GAAIU,EAAKwV,SACP5H,EAAeqK,OADjB,CAKA,IAAIpV,EAAQ7C,EAAKia,aAEbja,EAAK+V,YAAclT,IACrB7C,EAAK+V,UAAYlT,EAEb7C,EAAKW,SAAS0L,WAAW5D,KAAKzI,EAAM6C,IACtC7C,EAAK4X,KAAK/U,GAGZ7C,EAAKib,iBACLjb,EAAKqN,QAAQ,OAAQxK,KASzB,QAAQoV,GACN,IAAIjY,EAAOV,KACP4b,EAAalb,EAAKyV,UAEtB,GAAIzV,EAAKqV,WAGP,OAFArV,EAAK0Y,YACL9K,EAAeqK,GAIbjY,EAAK4V,cACT5V,EAAKyV,WAAY,EACa,UAA1BzV,EAAKW,SAAS8J,SAAqBzK,EAAK4X,KAAK,IAC5CsD,GAAYlb,EAAKqN,QAAQ,SAEzBrN,EAAKkW,YAAYtW,SACpBI,EAAKmb,YACLnb,EAAKob,gBACLpb,EAAKib,iBAAiBjb,EAAKW,SAASsJ,cAGtCjK,EAAKkZ,gBAQP,OAAOjB,GACL,IAAIjY,EAAOV,KACX,GAAKU,EAAKyV,UAAV,CACAzV,EAAKyV,WAAY,EACjBzV,EAAK4V,aAAc,EAEnB,IAAIyF,EAAa,KACfrb,EAAKya,QACLza,EAAKob,gBACLpb,EAAKsb,SAAStb,EAAK4D,MAAMhE,QACzBI,EAAKqN,QAAQ,SAGXrN,EAAKW,SAASmJ,QAAU9J,EAAKW,SAASoJ,aACxC/J,EAAKoa,WAAW,MAAM,EAAOiB,GAE7BA,KAUJ,eAAexN,EAAK2B,GAClB,IAAI3M,EACA7C,EAAOV,KAENkQ,IAKDA,EAAO+L,eAAiB/L,EAAO+L,cAAc/H,QAAQ,qBAIrDhE,EAAOoD,UAAUW,SAAS,UAC5BvT,EAAKoa,WAAW,MAAM,GAAM,KACtBpa,EAAKW,SAASgK,kBAChB3K,EAAKya,gBAMY,KAFrB5X,EAAQ2M,EAAOc,QAAQzN,SAGrB7C,EAAKwb,UAAY,KACjBxb,EAAKyb,QAAQ5Y,GAET7C,EAAKW,SAASgK,iBAChB3K,EAAKya,SACKza,EAAKW,SAAS0J,cAAgBwD,EAAIT,MAAQ,QAAQlF,KAAK2F,EAAIT,OACrEpN,EAAK6a,gBAAgB7a,EAAK0b,UAAU7Y,OAY5C,aAAagL,EAAKhH,GAChB,IAAI7G,EAAOV,KAEX,OAAKU,EAAKwV,UAAmC,UAAvBxV,EAAKW,SAAS8K,OAClCmC,EAAeC,GACf7N,EAAKob,cAAcvU,EAAMgH,IAClB,GAuBX,QAAQhL,GACN,QAAKvD,KAAKqB,SAASiX,OACftY,KAAK2N,eAAehM,eAAe4B,GASzC,KAAKA,GACH,MAAM7C,EAAOV,KACb,IAAKU,EAAK2b,QAAQ9Y,GAAQ,OAC1BwP,EAAWrS,EAAKsT,QAAStT,EAAKW,SAASkK,cACvC7K,EAAK4M,UACL,MAAM3N,EAAWe,EAAK4b,aAAaC,KAAK7b,EAAM6C,GAC9C7C,EAAKW,SAASiX,KAAKnP,KAAKzI,EAAM6C,EAAO5D,GAQvC,aAAa4D,EAAO7B,EAAS0I,GAC3B,MAAM1J,EAAOV,KACbU,EAAK4M,QAAUC,KAAKC,IAAI9M,EAAK4M,QAAU,EAAG,GAC1C5M,EAAKwb,UAAY,KACjBxb,EAAK8b,oBAEL9b,EAAK0W,aAAa1V,EAAS0I,GAC3B1J,EAAKib,eAAejb,EAAKyV,YAAczV,EAAK0V,eAEvC1V,EAAK4M,SACRkG,EAAc9S,EAAKsT,QAAStT,EAAKW,SAASkK,cAG5C7K,EAAKqN,QAAQ,OAAQrM,EAAS0I,GAQhC,gBAAgB7G,EAAQ,IACtB,IAAI2K,EAAQlO,KAAKkV,cACHhH,EAAM3K,QAAUA,IAG5B2K,EAAM3K,MAAQA,EACd+O,EAAapE,EAAO,UACpBlO,KAAKyW,UAAYlT,GAYrB,WACE,OAAIvD,KAAKwV,eAAiBxV,KAAKkO,MAAM2D,aAAa,YACzC7R,KAAKsE,MAGPtE,KAAKsE,MAAMU,KAAKhF,KAAKqB,SAASgJ,WAQvC,SAAS9G,EAAOkZ,GAEd7O,EAAgB5N,KADHyc,EAAS,GAAK,CAAC,WACE,KAC5Bzc,KAAK0c,MAAMD,GACXzc,KAAK2c,SAASpZ,EAAOkZ,MASzB,YAAYlZ,GACI,IAAVA,IAAaA,EAAQ,MAEzBvD,KAAKqB,SAASyJ,SAAWvH,EACzBvD,KAAK4Z,eAQP,cAAcrS,EAAMoR,GAClB,IACIiE,EACA3b,EAAG4b,EAAOC,EAAKC,EACfC,EAHAtc,EAAOV,KAIX,GAA2B,WAAvBU,EAAKW,SAAS8K,KAAlB,CAEA,IAAK5E,EAOH,OANA7G,EAAK6Z,wBAED7Z,EAAKyV,WACPzV,EAAKmb,aAST,GAAkB,WAFlBe,EAAYjE,GAAKA,EAAE7K,KAAKxL,gBAEKuM,EAAU,WAAY8J,IAAMjY,EAAKkW,YAAYtW,OAAQ,CAWhF,IAVA0c,EAAOtc,EAAKuc,iBACZJ,EAAQrb,MAAM0H,UAAU1I,QAAQ2I,KAAKzI,EAAK0U,QAAQxD,SAAUoL,KAC5DF,EAAMtb,MAAM0H,UAAU1I,QAAQ2I,KAAKzI,EAAK0U,QAAQxD,SAAUrK,MAGxDwV,EAAOF,EACPA,EAAQC,EACRA,EAAMC,GAGH9b,EAAI4b,EAAO5b,GAAK6b,EAAK7b,IACxBsG,EAAO7G,EAAK0U,QAAQxD,SAAS3Q,IAEW,IAApCP,EAAKkW,YAAYpW,QAAQ+G,IAC3B7G,EAAKwc,mBAAmB3V,GAI5B+G,EAAeqK,OACQ,UAAdiE,GAAyB/N,EAAU7E,EAAc2O,IAAoB,YAAdiE,GAA2B/N,EAAU,WAAY8J,GAC7GpR,EAAK+L,UAAUW,SAAS,UAC1BvT,EAAKyc,iBAAiB5V,GAEtB7G,EAAKwc,mBAAmB3V,IAG1B7G,EAAK6Z,mBACL7Z,EAAKwc,mBAAmB3V,IAI1B7G,EAAK0c,YAEA1c,EAAKyV,WACRzV,EAAK8Z,SAST,mBAAmBjT,GACjB,IAAI8V,EAAcrd,KAAKoV,QAAQjF,cAAc,gBACzCkN,GAAa7J,EAAc6J,EAAa,eAC5CtK,EAAWxL,EAAM,uBAEsB,GAAnCvH,KAAK4W,YAAYpW,QAAQ+G,IAC3BvH,KAAK4W,YAAYzW,KAAKoH,GAS1B,iBAAiBA,GACf,IAAI+V,EAAMtd,KAAK4W,YAAYpW,QAAQ+G,GACnCvH,KAAK4W,YAAYrW,OAAO+c,EAAK,GAC7B9J,EAAcjM,EAAM,UAQtB,mBACEiM,EAAcxT,KAAK4W,YAAa,UAChC5W,KAAK4W,YAAc,GASrB,gBAAgB1G,GACd,IAAIqN,EAAaC,EAAaC,EAE9B,GAAIvN,IAAWlQ,KAAK2W,aAClB,OAIF,GADA3W,KAAKwc,qBACAtM,EAAQ,OACblQ,KAAK2W,aAAezG,EACpBwE,GAAQ1U,KAAKkV,cAAe,CAC1B,wBAAyBhF,EAAOb,aAAa,QAE/CqF,GAAQxE,EAAQ,CACd,gBAAiB,SAEnB6C,EAAW7C,EAAQ,UACnBqN,EAAcvd,KAAKqV,iBAAiBqI,aACpC,IAAIC,EAAY3d,KAAKqV,iBAAiBsI,WAAa,EACnDH,EAAcxd,KAAK2W,aAAaiH,cAChCH,EAAIzd,KAAK2W,aAAakH,wBAAwBC,IAAM9d,KAAKqV,iBAAiBwI,wBAAwBC,IAAMH,GAEhGH,EAAcD,EAAcI,EAClC3d,KAAKqV,iBAAiBsI,UAAYF,EAAIF,EAAcC,EAC3CC,EAAIE,IACb3d,KAAKqV,iBAAiBsI,UAAYF,GAStC,oBACMzd,KAAK2W,eACPnD,EAAcxT,KAAK2W,aAAc,UACjC3W,KAAK2W,aAAaoH,gBAAgB,kBAGpC/d,KAAK2W,aAAe,KACpB3W,KAAKkV,cAAc6I,gBAAgB,yBAOrC,YAC6B,WAAvB/d,KAAKqB,SAAS8K,OAClBnM,KAAK4W,YAAc5W,KAAKge,kBAEpBhe,KAAK4W,YAAYtW,SACnByS,EAAW/S,KAAK4W,YAAa,UAC7B5W,KAAKod,YACLpd,KAAKmb,SAGPnb,KAAKwa,SAQP,aACE,IAAI9Z,EAAOV,KACPU,EAAKW,SAASsL,eAEdjM,EAAKkW,YAAYtW,OAAS,IAAMI,EAAKyV,WAAanW,KAAKqB,SAASyL,iBAAmBpM,EAAK4D,MAAMhE,OAAS,GACzGI,EAAKud,kBACLvd,EAAK0V,eAAgB,EACrBrD,EAAWrS,EAAKsT,QAAS,kBAEzBtT,EAAK0V,eAAgB,EACrB5C,EAAc9S,EAAKsT,QAAS,kBAUhC,YACEhU,KAAKqZ,aAQP,YACErZ,KAAKqZ,aAOP,aACE,OAAOrZ,KAAKkV,cAAc3R,MAAM0D,OAOlC,QACE,IAAIvG,EAAOV,KACPU,EAAKqV,aACTrV,EAAK4V,aAAc,EACnB5V,EAAKwU,cAAcsF,QACnB9M,YAAW,KACThN,EAAK4V,aAAc,EACnB5V,EAAKuY,YACJ,IAQL,OACEjZ,KAAKkV,cAAckE,OACnBpZ,KAAKgZ,OAAO,MAWd,iBAAiBzU,GACf,OAAOvE,KAAK4V,OAAOsI,iBAAiB3Z,EAAOvE,KAAKme,oBAWlD,mBACE,IAAI9c,EAAWrB,KAAKqB,SAChB+E,EAAO/E,EAAS2K,UAQpB,MANkC,iBAAvB3K,EAAS2K,YAClB5F,EAAO,CAAC,CACNjB,MAAO9D,EAAS2K,aAIb,CACLxG,OAAQnE,EAAS4K,YACjBnG,YAAazE,EAAS6K,kBACtB9F,KAAMA,EACNgB,QAAS/F,EAAS+F,SAUtB,OAAO7C,GACL,IAAItD,EAAGwF,EAAQ2X,EACX1d,EAAOV,KACPqB,EAAWX,EAAKW,SAChBK,EAAU1B,KAAKme,mBAEnB,GAAI9c,EAASqC,OAGmB,mBAF9B0a,EAAiB1d,EAAKW,SAASqC,MAAMyF,KAAKzI,EAAM6D,IAG9C,MAAM,IAAIxC,MAAM,yEAgBpB,GAXIwC,IAAU7D,EAAKwb,WACjBxb,EAAKwb,UAAY3X,EACjBkC,EAAS/F,EAAKkV,OAAOhS,OAAOW,EAAOM,OAAOiC,OAAOpF,EAAS,CACxDgC,MAAO0a,KAET1d,EAAK8V,eAAiB/P,GAEtBA,EAAS5B,OAAOiC,OAAO,GAAIpG,EAAK8V,gBAI9BnV,EAAS0J,aACX,IAAK9J,EAAIwF,EAAOnC,MAAMhE,OAAS,EAAGW,GAAK,EAAGA,KACkB,IAAtDP,EAAK4D,MAAM9D,QAAQyM,EAASxG,EAAOnC,MAAMrD,GAAGyF,MAC9CD,EAAOnC,MAAM/D,OAAOU,EAAG,GAK7B,OAAOwF,EAST,eAAe4X,GAAkB,GAC/B,IAAIpd,EAAGqd,EAAGC,EAAGne,EAAGoe,EAAc9M,EAAUtH,EAAWqU,EAAMC,EACrDC,EAAQnU,EACRoU,EACAle,EAAOV,KACPuE,EAAQ7D,EAAKia,aACbkE,EAAUne,EAAKkD,OAAOW,GACtBua,EAAqBpe,EAAKiW,cAAgB1J,EAASvM,EAAKiW,aAAa3F,QAAQzN,OAC7Ewb,EAAgBre,EAAKW,SAASuJ,aAAc,EAgBhD,IAdAxK,EAAIye,EAAQva,MAAMhE,OAEsB,iBAA7BI,EAAKW,SAASwJ,aACvBzK,EAAImN,KAAKyR,IAAI5e,EAAGM,EAAKW,SAASwJ,aAG5BzK,EAAI,IACN2e,GAAgB,GAIlBH,EAAS,GACTJ,EAAe,GAEVvd,EAAI,EAAGA,EAAIb,EAAGa,IAAK,CAEtB,IAAIiP,EAASxP,EAAKgB,QAAQmd,EAAQva,MAAMrD,GAAGyF,IACvCuY,EAAYhS,EAASiD,EAAOxP,EAAKW,SAASqK,aAC1CwT,EAAYxe,EAAK0b,UAAU6C,GAc/B,IAZKC,IACHA,EAAYxe,EAAKsM,OAAO,SAAUkD,IAI/BxP,EAAKW,SAAS0J,cACjBmU,EAAU5L,UAAU6L,OAAO,WAAYze,EAAK4D,MAAM8a,SAASH,IAG7DvN,EAAWxB,EAAOxP,EAAKW,SAASoK,gBAAkB,GAG7C6S,EAAI,EAAGC,GAFZnU,EAAY5I,MAAMC,QAAQiQ,GAAYA,EAAW,CAACA,KAErBtH,EAAU9J,OAAQge,EAAIC,EAAGD,IACpD5M,EAAWtH,EAAUkU,GAEhB5d,EAAK0J,UAAUzI,eAAe+P,KACjCA,EAAW,IAGRkN,EAAOjd,eAAe+P,KACzBkN,EAAOlN,GAAYzJ,SAASoX,yBAC5Bb,EAAare,KAAKuR,IAIhB4M,EAAI,IACNY,EAAYA,EAAU3W,WAAU,GAChCiL,EAAc0L,EAAW,UACzBA,EAAUnB,gBAAgB,kBAG5Ba,EAAOlN,GAAUlJ,YAAY0W,GAgBjC,IAAKxN,KAXD1R,KAAKqB,SAAS0K,mBAChByS,EAAapY,MAAK,CAACjC,EAAGC,KACN1D,EAAK0J,UAAUjG,IAAMzD,EAAK0J,UAAUjG,GAAGmb,QAAU,IACjD5e,EAAK0J,UAAUhG,IAAM1D,EAAK0J,UAAUhG,GAAGkb,QAAU,KAMnEb,EAAOxW,SAASoX,yBAECb,GACf,GAAI9d,EAAK0J,UAAUzI,eAAe+P,IAAakN,EAAOlN,GAAUE,SAAStR,OAAQ,CAC/E,IAAIif,EAAgBtX,SAASoX,yBAC7BE,EAAcxH,OAAOrX,EAAKsM,OAAO,kBAAmBtM,EAAK0J,UAAUsH,KACnE6N,EAAcxH,OAAO6G,EAAOlN,IAC5B,IAAI8N,EAAa9e,EAAKsM,OAAO,WAAY,CACvCmE,MAAOzQ,EAAK0J,UAAUsH,GACtBhQ,QAAS6d,IAEXd,EAAK1G,OAAOyH,QAEZf,EAAK1G,OAAO6G,EAAOlN,IAOvB,GAHAhR,EAAK2U,iBAAiBjD,UAAY,GAClC1R,EAAK2U,iBAAiB0C,OAAO0G,GAEzB/d,EAAKW,SAASsG,YAChBmB,EAAgBpI,EAAK2U,kBAEjBwJ,EAAQta,MAAMjE,QAAUue,EAAQna,OAAOpE,QACzC,IAAK,MAAMmf,KAAOZ,EAAQna,OACxBiD,EAAUjH,EAAK2U,iBAAkBoK,EAAIxc,OAM3C,IAAIyc,EAAeC,IACjB,IAAIC,EAAUlf,EAAKsM,OAAO2S,EAAU,CAClCzR,MAAO3J,IAQT,OALIqb,IACFb,GAAgB,EAChBre,EAAK2U,iBAAiBwK,aAAaD,EAASlf,EAAK2U,iBAAiBhM,aAG7DuW,GAsBT,GAlBKlf,EAAKW,SAAS0L,WAAW5D,KAAKzI,EAAM6D,GAE9B7D,EAAK4M,QACdoS,EAAa,WACqB,IAAzBb,EAAQva,MAAMhE,QACvBof,EAAa,cAJbA,EAAa,gBAQfhB,EAAoBhe,EAAKof,UAAUvb,MAGjCiG,EAASkV,EAAa,kBAIxBhf,EAAK6V,WAAasI,EAAQva,MAAMhE,OAAS,GAAKoe,EAE1CK,EAAe,CACjB,GAAIF,EAAQva,MAAMhE,OAAS,GAOzB,KANAqe,EAASG,GAAsBpe,EAAK0b,UAAU0C,KAER,WAAvBpe,EAAKW,SAAS8K,MAAqBzL,EAAK4D,MAAMhE,SAC3Dqe,EAASje,EAAK0b,UAAU1b,EAAK4D,MAAM,MAGhCqa,IAAWje,EAAK2U,iBAAiBpB,SAAS0K,GAAS,CACtD,IAAIoB,EAAe,EAEfvV,IAAW9J,EAAKW,SAAS4J,gBAC3B8U,EAAe,GAGjBpB,EAASje,EAAKsf,aAAaD,SAG7BpB,EAASnU,EAGX9J,EAAK6a,gBAAgBoD,GAEjBN,IAAoB3d,EAAKoV,QAC3BpV,EAAK0a,YAGP1a,EAAK8b,oBAED6B,GAAmB3d,EAAKoV,QAC1BpV,EAAKya,OAAM,GAUjB,aACE,OAAOnb,KAAKqV,iBAAiBpM,iBAAiB,qBAehD,UAAUrD,GACR,IAAIrC,EACA7C,EAAOV,KAEX,GAAIwB,MAAMC,QAAQmE,GAChB,IAAK,MAAMqa,KAAOra,EAChBlF,EAAKwQ,UAAU+O,QAMf1c,EAAQ7C,EAAKwZ,eAAetU,MAC9BlF,EAAKmW,YAAYtT,IAAS,EAC1B7C,EAAKwb,UAAY,KACjBxb,EAAKqN,QAAQ,aAAcxK,EAAOqC,IAStC,eAAeA,GACb,IAAI1E,EAAM+L,EAASrH,EAAK5F,KAAKqB,SAASqK,aACtC,OAAY,OAARxK,IAAgBlB,KAAK0B,QAAQC,eAAeT,KAChD0E,EAAK0Z,OAAS1Z,EAAK0Z,UAAYtf,KAAKsV,MACpC1P,EAAKsa,IAAMlgB,KAAK0V,QAAU,QAAU9P,EAAK0Z,OACzCtf,KAAK0B,QAAQR,GAAO0E,EACb1E,GAST,oBAAoB0E,GAClB,IAAI1E,EAAM+L,EAASrH,EAAK5F,KAAKqB,SAASyK,qBACtC,OAAY,OAAR5K,IACJ0E,EAAK0Z,OAAS1Z,EAAK0Z,UAAYtf,KAAKsV,MACpCtV,KAAKoK,UAAUlJ,GAAO0E,EACf1E,GAST,eAAewF,EAAId,GACjB,IAAIua,EACJva,EAAK5F,KAAKqB,SAASyK,oBAAsBpF,GAErCyZ,EAAYngB,KAAKma,oBAAoBvU,KACvC5F,KAAK+N,QAAQ,eAAgBoS,EAAWva,GAS5C,kBAAkBc,GACZ1G,KAAKoK,UAAUzI,eAAe+E,YACzB1G,KAAKoK,UAAU1D,GACtB1G,KAAKogB,aACLpgB,KAAK+N,QAAQ,kBAAmBrH,IAQpC,oBACE1G,KAAKoK,UAAY,GACjBpK,KAAKogB,aACLpgB,KAAK+N,QAAQ,kBAUf,aAAaxK,EAAOqC,GAClB,IACI2B,EAAM8Y,EACNC,EAAWC,EAAYC,EAAaC,EAAeC,EAFnDhgB,EAAOV,KAMX,GAHAuD,EAAQ0J,EAAS1J,GACjB+c,EAAYrT,EAASrH,EAAKlF,EAAKW,SAASqK,aAE1B,OAAVnI,GACC7C,EAAKgB,QAAQC,eAAe4B,GAAjC,CACA,GAAyB,iBAAd+c,EAAwB,MAAM,IAAIve,MAAM,oCACnD2e,EAAYhgB,EAAKgB,QAAQ6B,GAAO+b,OAE5BgB,IAAc/c,WACT7C,EAAKgB,QAAQ6B,IAGA,KAFpBgd,EAAa7f,EAAK4D,MAAM9D,QAAQ+C,KAG9B7C,EAAK4D,MAAM/D,OAAOggB,EAAY,EAAGD,IAIrC1a,EAAK0Z,OAAS1Z,EAAK0Z,QAAUoB,EAC7BhgB,EAAKgB,QAAQ4e,GAAa1a,EAE1B4a,EAAc9f,EAAKoW,YAAkB,KACrC2J,EAAgB/f,EAAKoW,YAAoB,OAErC0J,WACKA,EAAYjd,UACZid,EAAYF,IAGjBG,WACKA,EAAcld,UACdkd,EAAcH,KAIgB,IAAnC5f,EAAK4D,MAAM9D,QAAQ8f,KACrB/Y,EAAO7G,EAAKigB,QAAQpd,GACpB8c,EAAW3f,EAAKsM,OAAO,OAAQpH,GAC3B2B,EAAK+L,UAAUW,SAAS,WAAWlB,EAAWsN,EAAU,UAC5D9Y,EAAKkB,WAAWoX,aAAaQ,EAAU9Y,GACvCA,EAAKkM,UAIP/S,EAAKwb,UAAY,KAEbxb,EAAKoV,QACPpV,EAAKib,gBAAe,IASxB,aAAapY,EAAOkZ,GAClB,IAAI/b,EAAOV,KACXuD,EAAQ0J,EAAS1J,GACjB,IAAIid,EAAc9f,EAAKoW,YAAkB,KACrC2J,EAAgB/f,EAAKoW,YAAoB,OACzC0J,UAAoBA,EAAYjd,GAChCkd,UAAsBA,EAAcld,UACjC7C,EAAKmW,YAAYtT,UACjB7C,EAAKgB,QAAQ6B,GACpB7C,EAAKwb,UAAY,KACjBxb,EAAKqN,QAAQ,gBAAiBxK,GAC9B7C,EAAKkgB,WAAWrd,EAAOkZ,GAOzB,eACEzc,KAAK2N,eAAiB,GACtB3N,KAAK6W,YAAc,GACnB7W,KAAKogB,aACL,IAAI5O,EAAW,GAEf,IAAK,IAAItQ,KAAOlB,KAAK0B,QACf1B,KAAK0B,QAAQC,eAAeT,IAAQlB,KAAKsE,MAAM9D,QAAQU,IAAQ,IACjEsQ,EAAStQ,GAAOlB,KAAK0B,QAAQR,IAIjClB,KAAK0B,QAAU1B,KAAK4V,OAAOtR,MAAQkN,EACnCxR,KAAKkc,UAAY,KACjBlc,KAAK+N,QAAQ,gBAUf,UAAUxK,GAGR,GAFAA,EAAQ0J,EAAS1J,GAEN,CACT,MAAM2M,EAASlQ,KAAKqV,iBAAiBlF,cAAc,iCAAiCZ,EAAWhM,QAE/F,GAAI2M,EACF,OAAOA,EAIX,GAAIlQ,KAAK8W,YAAoB,OAAEnV,eAAe4B,GAC5C,OAAOvD,KAAK8W,YAAoB,OAAEvT,GAUtC,YAAY2M,EAAQtJ,EAAWkH,EAAO,UACpC,IACI+S,EADAngB,EAAOV,KAGX,GAAKkQ,EAAL,CAKE2Q,EADU,QAAR/S,EACIpN,EAAKsd,kBAELtd,EAAK2U,iBAAiBpM,iBAAiB,qBAG/C,IAAK,IAAIhI,EAAI,EAAGA,EAAI4f,EAAIvgB,OAAQW,IAC9B,GAAI4f,EAAI5f,IAAMiP,EAId,OAAItJ,EAAY,EACPia,EAAI5f,EAAI,GAGV4f,EAAI5f,EAAI,IAUnB,QAAQsC,GAGN,GAFAA,EAAQ0J,EAAS1J,GAIf,OADAA,EAAQgM,EAAWhM,GACZvD,KAAKoV,QAAQjF,cAAc,gBAAgB5M,OAUtD,SAASgN,EAAQkM,GACf,IAAI/b,EAAOV,KACXU,EAAKogB,OAAS7Y,SAASoX,yBAEvB,IAAK,MAAMvN,KAASpR,EAAK0U,QAAQxD,SAC/BlR,EAAKogB,OAAOtY,YAAYsJ,GAG1B,IAAIxN,EAAQ9C,MAAMC,QAAQ8O,GAAUA,EAAS,CAACA,GAG9C,IAAK,IAAItP,EAAI,EAAGb,GAFhBkE,EAAQA,EAAMkD,QAAOuZ,IAAgC,IAA3BrgB,EAAK4D,MAAM9D,QAAQugB,MAEnBzgB,OAAQW,EAAIb,EAAGa,IACvCP,EAAKsgB,UAAY/f,EAAIb,EAAI,EACzBM,EAAKyb,QAAQ7X,EAAMrD,GAAIwb,GAGzB,IAAIrH,EAAU1U,EAAK0U,QACnBA,EAAQyK,aAAanf,EAAKogB,OAAQ1L,EAAQ/L,YAC1C3I,EAAKogB,OAAS,KAShB,QAAQvd,EAAOkZ,GAEb7O,EAAgB5N,KADHyc,EAAS,GAAK,CAAC,WACE,KAC5B,IAAIlV,EAGA0Z,EAFAvgB,EAAOV,KACPyX,EAAY/W,EAAKW,SAAS8K,KAI9B,GAFA5I,EAAQ0J,EAAS1J,KAEkB,IAA/B7C,EAAK4D,MAAM9D,QAAQ+C,KACH,WAAdkU,GACF/W,EAAKya,QAGW,WAAd1D,GAA2B/W,EAAKW,SAAS2J,cAK1CtK,EAAKgB,QAAQC,eAAe4B,KACf,WAAdkU,GAAwB/W,EAAKgc,MAAMD,GACrB,UAAdhF,IAAyB/W,EAAK+Z,UAAlC,CAYA,GAXAlT,EAAO7G,EAAKsM,OAAO,OAAQtM,EAAKgB,QAAQ6B,IAEpC7C,EAAK0U,QAAQnB,SAAS1M,KAExBA,EAAOA,EAAKgB,WAAU,IAGxB0Y,EAAUvgB,EAAK+Z,SACf/Z,EAAK4D,MAAM/D,OAAOG,EAAKgW,SAAU,EAAGnT,GACpC7C,EAAKwgB,cAAc3Z,GAEf7G,EAAK2V,QAAS,CAChB,IAAI3U,EAAUhB,EAAKsf,aAEnB,IAAKtf,EAAKsgB,UAAW,CACnB,IAAI9Q,EAASxP,EAAK0b,UAAU7Y,GACxB8X,EAAO3a,EAAK4a,YAAYpL,EAAQ,GACpCxP,EAAKib,eAAejb,EAAKyV,WAA2B,WAAdsB,GAElC4D,GACF3a,EAAK6a,gBAAgBF,IAKpB3Z,EAAQpB,QAAUI,EAAK+Z,SAC1B/Z,EAAKya,QACKza,EAAKsgB,WACftgB,EAAKqY,mBAGPrY,EAAKqN,QAAQ,WAAYxK,EAAOgE,GAE3B7G,EAAKsgB,WACRtgB,EAAKmZ,oBAAoB,CACvB4C,OAAQA,MAKT/b,EAAKsgB,YAAcC,GAAWvgB,EAAK+Z,WACtC/Z,EAAKkZ,mBAWX,WAAWrW,EAAOkZ,GAChB,IAAIxb,EACAqc,EACA5c,EAAOV,KACPuH,EAAO7G,EAAKigB,QAAQpd,GACnBgE,IACLhE,EAAQ0J,EAAS1F,EAAKyJ,QAAQzN,QAGnB,KAFXtC,EAAIP,EAAK4D,MAAM9D,QAAQ+C,MAGrBgE,EAAKkM,SAEDlM,EAAK+L,UAAUW,SAAS,YAC1BqJ,EAAM5c,EAAKkW,YAAYpW,QAAQ+G,GAC/B7G,EAAKkW,YAAYrW,OAAO+c,EAAK,GAC7B9J,EAAcjM,EAAM,WAGtB7G,EAAK4D,MAAM/D,OAAOU,EAAG,GACrBP,EAAKwb,UAAY,MAEZxb,EAAKW,SAASkJ,SAAW7J,EAAKmW,YAAYlV,eAAe4B,IAC5D7C,EAAKygB,aAAa5d,EAAOkZ,GAGvBxb,EAAIP,EAAKgW,UACXhW,EAAKsb,SAAStb,EAAKgW,SAAW,GAGhChW,EAAKmZ,oBAAoB,CACvB4C,OAAQA,IAEV/b,EAAKkZ,eACLlZ,EAAKqY,mBACLrY,EAAKqN,QAAQ,cAAexK,EAAOgE,KAcvC,WAAW2G,EAAOmQ,GAAkB,EAAM1e,GACxC,IAEIyhB,EAFA1gB,EAAOV,KACPqhB,EAAQ3gB,EAAKgW,SAKjB,GAHAxI,EAAQA,GAASxN,EAAKia,aACE,mBAAbhb,IAAyBA,EAAW,SAE1Ce,EAAKof,UAAU5R,GAElB,OADAvO,KACO,EAGTe,EAAK4gB,OACL,IAAIC,GAAU,EAEV/W,EAAS5E,IAEX,GADAlF,EAAK8gB,UACA5b,GAAwB,iBAATA,EAAmB,OAAOjG,IAC9C,IAAI4D,EAAQ0J,EAASrH,EAAKlF,EAAKW,SAASqK,aAExC,GAAqB,iBAAVnI,EACT,OAAO5D,IAGTe,EAAKud,kBACLvd,EAAKwQ,UAAUtL,GACflF,EAAKsb,SAASqF,GACd3gB,EAAKyb,QAAQ5Y,GACb7C,EAAKib,eAAe0C,GAA0C,WAAvB3d,EAAKW,SAAS8K,MACrDxM,EAASiG,GACT2b,GAAU,GAgBZ,OAZEH,EADkC,mBAAzB1gB,EAAKW,SAASmJ,OACd9J,EAAKW,SAASmJ,OAAOrB,KAAKnJ,KAAMkO,EAAO1D,GAEvC,CACP,CAAC9J,EAAKW,SAASsK,YAAauC,EAC5B,CAACxN,EAAKW,SAASqK,YAAawC,GAI3BqT,GACH/W,EAAO4W,IAGF,EAOT,eACE,IAAI1gB,EAAOV,KACXU,EAAKwb,UAAY,KAEbxb,EAAK2V,SACP3V,EAAKic,SAASjc,EAAK4D,OAGrB5D,EAAKmZ,sBACLnZ,EAAKkZ,eAQP,eACE,IAAIlZ,EAAOV,KACXU,EAAK+gB,uBACL,IAAIhH,EAAS/Z,EAAK+Z,SACdvE,EAAWxV,EAAKwV,SACpBxV,EAAKsT,QAAQV,UAAU6L,OAAO,MAAOze,EAAK+U,KAC1C,IAAInC,EAAY5S,EAAK0U,QAAQ9B,UAC7BA,EAAU6L,OAAO,QAASze,EAAKyV,WAC/B7C,EAAU6L,OAAO,WAAYze,EAAKqV,YAClCzC,EAAU6L,OAAO,WAAYze,EAAKsV,YAClC1C,EAAU6L,OAAO,UAAWze,EAAKuV,WACjC3C,EAAU6L,OAAO,SAAUjJ,GAC3B5C,EAAU6L,OAAO,OAAQ1E,GACzBnH,EAAU6L,OAAO,YAAa1E,GAC9BnH,EAAU6L,OAAO,eAAgBze,EAAKyV,YAAczV,EAAK0V,eACzD9C,EAAU6L,OAAO,kBAAmBze,EAAKoV,QACzCxC,EAAU6L,OAAO,cAAe9K,EAAc3T,EAAKgB,UACnD4R,EAAU6L,OAAO,YAAaze,EAAK4D,MAAMhE,OAAS,GAYpD,uBACE,IAAII,EAAOV,KAEX,GAAKU,EAAKwN,MAAMwT,cAAhB,CAKI1hB,KAAKgW,aACPtV,EAAKwN,MAAMiJ,UAAW,GAGxB,IAAIwK,GAAWjhB,EAAKwN,MAAMwT,gBAC1BhhB,EAAKuV,UAAY0L,EACjBjhB,EAAKwU,cAAciC,SAAWwK,EAE1B3hB,KAAKgW,aACPtV,EAAKwN,MAAMiJ,UAAYwK,IAW3B,SACE,OAAkC,OAA3B3hB,KAAKqB,SAASyJ,UAAqB9K,KAAKsE,MAAMhE,QAAUN,KAAKqB,SAASyJ,SAS/E,oBAAoB8W,EAAO,IACzB,IAAI3gB,EACAsC,EAEA7C,EAAOV,KAEX,GAAIU,EAAK8U,cASP,IAPA9U,EAAKwN,MAAMjF,iBAAiB,oBAAoBpJ,SAAQqQ,KACb,GAArCxP,EAAK4D,MAAM9D,QAAQ0P,EAAO3M,SAC5B2M,EAAOsB,UAAW,EAClBtB,EAAO6N,gBAAgB,gBAItB9c,EAAIP,EAAK4D,MAAMhE,OAAS,EAAGW,GAAK,EAAGA,IAAK,CAE3C,IAAIiP,EAEJ,GAHA3M,EAAQ7C,EAAK4D,MAAMrD,KACfiP,EAASxP,EAAKgB,QAAQ6B,GAAOgO,SAEpB,CACX,MAAM2G,EAAQxX,EAAKgB,QAAQ6B,GAAO7C,EAAKW,SAASsK,aAAe,GAC/DuE,EAAS8B,EAAO,kBAAoB9E,EAAY3J,GAAS,KAAO2J,EAAYgL,GAAS,aACrFxX,EAAKgB,QAAQ6B,GAAOgO,QAAUrB,EAGhCA,EAAOsB,UAAW,EAClBkD,GAAQxE,EAAQ,CACdsB,SAAU,SAEZ9Q,EAAKwN,MAAM2T,QAAQ3R,QAGrBxP,EAAKwN,MAAM3K,MAAQ7C,EAAKohB,WAGtBphB,EAAK2V,UACFuL,EAAKnF,QACR/b,EAAKqN,QAAQ,SAAUrN,EAAKohB,aAUlC,OACE,IAAIphB,EAAOV,KACPU,EAAKwV,UAAYxV,EAAKoV,QAAiC,UAAvBpV,EAAKW,SAAS8K,MAAoBzL,EAAK+Z,WAC3E/Z,EAAKoV,QAAS,EACdpB,GAAQhU,EAAKwU,cAAe,CAC1B,gBAAiB,SAEnBxU,EAAKkZ,eACLhH,EAASlS,EAAKyU,SAAU,CACtB4M,WAAY,SACZC,QAAS,UAEXthB,EAAKqY,mBACLnG,EAASlS,EAAKyU,SAAU,CACtB4M,WAAY,UACZC,QAAS,UAEXthB,EAAK8Z,QACL9Z,EAAKqN,QAAQ,gBAAiBrN,EAAKyU,WAOrC,MAAM8I,GAAkB,GACtB,IAAIvd,EAAOV,KACP+N,EAAUrN,EAAKoV,OAEfmI,IAEFvd,EAAKud,kBAEsB,WAAvBvd,EAAKW,SAAS8K,MAAqBzL,EAAK4D,MAAMhE,SAChDI,EAAK0c,YAIA1c,EAAKmV,SACRnV,EAAK0Y,SAKX1Y,EAAKoV,QAAS,EACdpB,GAAQhU,EAAKwU,cAAe,CAC1B,gBAAiB,UAEnBtC,EAASlS,EAAKyU,SAAU,CACtB6M,QAAS,SAEXthB,EAAK8b,oBACL9b,EAAKkZ,eACD7L,GAASrN,EAAKqN,QAAQ,iBAAkBrN,EAAKyU,UASnD,mBACE,GAAqC,SAAjCnV,KAAKqB,SAASqL,eAAlB,CAIA,IAAIuV,EAAUjiB,KAAKoV,QACf8M,EAAOD,EAAQpE,wBACfC,EAAMmE,EAAQrE,aAAesE,EAAKpE,IAAM9G,OAAOmL,QAC/CC,EAAOF,EAAKE,KAAOpL,OAAOqL,QAC9BzP,EAAS5S,KAAKmV,SAAU,CACtBiD,MAAO8J,EAAK9J,MAAQ,KACpB0F,IAAKA,EAAM,KACXsE,KAAMA,EAAO,QAUjB,MAAM3F,GACJ,IAAI/b,EAAOV,KACX,GAAKU,EAAK4D,MAAMhE,OAAhB,CACA,IAAIgE,EAAQ5D,EAAKsd,kBAEjB,IAAK,MAAMzW,KAAQjD,EACjBiD,EAAKkM,SAGP/S,EAAK4D,MAAQ,GACb5D,EAAKwb,UAAY,KACjBxb,EAAKsb,SAAS,GACdtb,EAAKob,gBACLpb,EAAKmZ,oBAAoB,CACvB4C,OAAQA,IAEV/b,EAAKkZ,eACLlZ,EAAKmb,YACLnb,EAAKqN,QAAQ,UASf,cAAchF,GACZ,IAAIrI,EAAOV,KACPqhB,EAAQ9T,KAAKyR,IAAIte,EAAKgW,SAAUhW,EAAK4D,MAAMhE,QAC3CqO,EAASjO,EAAKogB,QAAUpgB,EAAK0U,QAEnB,IAAViM,EACF1S,EAAOkR,aAAa9W,EAAI4F,EAAOtF,YAE/BsF,EAAOkR,aAAa9W,EAAI4F,EAAOiD,SAASyP,IAG1C3gB,EAAKsb,SAASqF,EAAQ,GAQxB,gBAAgB1I,GACd,IAAI/R,EAAW0b,EAAW/R,EAAQ8Q,EAC9B3gB,EAAOV,KAMX,GALA4G,EAAY+R,GAAKA,EAAEqC,UAAYnR,GAAiB,EAAI,EACpDyY,EAAYrU,EAAavN,EAAKwU,eAE9B3E,EAAS,GAEL7P,EAAKkW,YAAYtW,OAAQ,CAE3B+gB,EAAQ/M,EADDH,EAAQzT,EAAKkW,YAAahQ,IAG7BA,EAAY,GACdya,IAGF,IAAK,MAAM9Z,KAAQ7G,EAAKkW,YACtBrG,EAAOpQ,KAAKoH,EAAKyJ,QAAQzN,YAEjB7C,EAAKyV,WAAoC,WAAvBzV,EAAKW,SAAS8K,OAAsBzL,EAAK4D,MAAMhE,SACvEsG,EAAY,GAAyB,IAApB0b,EAAUnU,OAAoC,IAArBmU,EAAUhiB,OACtDiQ,EAAOpQ,KAAKO,EAAK4D,MAAM5D,EAAKgW,SAAW,IAC9B9P,EAAY,GAAK0b,EAAUnU,QAAUzN,EAAKia,aAAara,QAChEiQ,EAAOpQ,KAAKO,EAAK4D,MAAM5D,EAAKgW,YAKhC,IAAKnG,EAAOjQ,QAA4C,mBAA3BI,EAAKW,SAASkhB,WAA4E,IAAjD7hB,EAAKW,SAASkhB,SAASpZ,KAAKzI,EAAM6P,EAAQoI,GAC9G,OAAO,EAST,IANArK,EAAeqK,GAAG,QAEG,IAAV0I,GACT3gB,EAAKsb,SAASqF,GAGT9Q,EAAOjQ,QACZI,EAAKkgB,WAAWrQ,EAAOiS,OAMzB,OAHA9hB,EAAKmb,YACLnb,EAAKqY,mBACLrY,EAAKib,gBAAe,IACb,EAWT,iBAAiB/U,EAAW+R,GAC1B,IAAI2E,EACAD,EACAoF,EACA/hB,EAAOV,KACPU,EAAK+U,MAAK7O,IAAc,GACxBlG,EAAKia,aAAara,SAElBuO,EAAU7E,EAAc2O,IAAM9J,EAAU,WAAY8J,IAOlD8J,GANJpF,EAAc3c,EAAKuc,cAAcrW,IAG1ByW,EAAY/J,UAAUW,SAAS,UAGvBvT,EAAK4a,YAAY+B,EAAazW,EAAW,QAFzCyW,EAKJzW,EAAY,EACVlG,EAAKwU,cAAcwN,mBAEnBhiB,EAAKwU,cAAcT,0BAI1BgO,EAASnP,UAAUW,SAAS,WAC9BvT,EAAKyc,iBAAiBE,GAGxB3c,EAAKwc,mBAAmBuF,IAGjB/hB,EAAKyV,YAAczV,EAAKkW,YAAYtW,OAC7CI,EAAKsb,SAAStb,EAAKgW,SAAW9P,IAE9ByW,EAAc3c,EAAKuc,cAAcrW,MAG/B0W,EAAMhJ,EAAU+I,GAChB3c,EAAKsb,SAASpV,EAAY,EAAI0W,EAAM,EAAIA,GACxC5c,EAAKob,kBAUX,cAAclV,GACZ,IAAIyW,EAAcrd,KAAKoV,QAAQjF,cAAc,gBAE7C,GAAIkN,EACF,OAAOA,EAGT,IAAI5W,EAASzG,KAAKoV,QAAQnM,iBAAiB,WAE3C,OAAIxC,EACK0N,EAAQ1N,EAAQG,QADzB,EAcF,SAAS+b,GACP,IAAIjiB,EAAOV,KAEgB,WAAvBU,EAAKW,SAAS8K,MAAqBzL,EAAKW,SAASsL,aACnDgW,EAAUjiB,EAAK4D,MAAMhE,QAErBqiB,EAAUpV,KAAKC,IAAI,EAAGD,KAAKyR,IAAIte,EAAK4D,MAAMhE,OAAQqiB,MAEnCjiB,EAAKgW,UAAahW,EAAKsgB,WACpCtgB,EAAKsd,kBAAkBne,SAAQ,CAACiS,EAAOwM,KACjCA,EAAIqE,EACNjiB,EAAKwU,cAAcwE,sBAAsB,cAAe5H,GAExDpR,EAAK0U,QAAQ5M,YAAYsJ,MAMjCpR,EAAKgW,SAAWiM,EAQlB,kBACE,OAAOnhB,MAAMohB,KAAK5iB,KAAKoV,QAAQyN,uBAAuB7iB,KAAKqB,SAASmL,YAQtE,OACExM,KAAKmb,QACLnb,KAAKkW,UAAW,EAChBlW,KAAK4Z,eAOP,SACE5Z,KAAKkW,UAAW,EAChBlW,KAAK4Z,eAQP,UACE,IAAIlZ,EAAOV,KACXU,EAAKwN,MAAMoD,UAAW,EACtB5Q,EAAKwU,cAAc5D,UAAW,EAC9B5Q,EAAKwU,cAAcK,UAAY,EAC/B7U,EAAKqV,YAAa,EAClBrV,EAAK4gB,OAQP,SACE,IAAI5gB,EAAOV,KACXU,EAAKwN,MAAMoD,UAAW,EACtB5Q,EAAKwU,cAAc5D,UAAW,EAC9B5Q,EAAKwU,cAAcK,SAAW7U,EAAK6U,SACnC7U,EAAKqV,YAAa,EAClBrV,EAAK8gB,SASP,UACE,IAAI9gB,EAAOV,KACPwZ,EAAiB9Y,EAAK8Y,eAC1B9Y,EAAKqN,QAAQ,WACbrN,EAAKoiB,MACLpiB,EAAKsT,QAAQP,SACb/S,EAAKyU,SAAS1B,SACd/S,EAAKwN,MAAMkE,UAAYoH,EAAepH,UACtC1R,EAAKwN,MAAMqH,SAAWiE,EAAejE,SACrC/B,EAAc9S,EAAKwN,MAAO,eAC1BxN,EAAKwN,MAAM6P,gBAAgB,UAC3Brd,EAAKwN,MAAMiJ,SAAWnX,KAAKgW,WAE3BtV,EAAKiV,kBAEEjV,EAAKwN,MAAM6I,UASpB,OAAOgM,EAAcnd,GACnB,IAAIrC,EAAWkb,EACX/d,EAAOV,KAEX,IAAqB,WAAjB+iB,GAA8C,SAAjBA,KAC/Bxf,EAAQ0J,EAASrH,EAAKlF,EAAKW,SAASqK,aAEhChL,EAAKoW,YAAYiM,GAAcphB,eAAe4B,IAChD,OAAO7C,EAAKoW,YAAYiM,GAAcxf,GAI1C,IAAIoc,EAAWjf,EAAKW,SAAS2L,OAAO+V,GAEpC,MAAwB,mBAAbpD,EACF,MAITlB,EAAOkB,EAASxW,KAAKnJ,KAAM4F,EAAMsH,KAMjCuR,EAAOzM,EAAOyM,GAEO,WAAjBsE,GAA8C,kBAAjBA,EAC3Bnd,EAAKlF,EAAKW,SAASuK,eACrB8I,GAAQ+J,EAAM,CACZ,gBAAiB,SAGnB/J,GAAQ+J,EAAM,CACZ,kBAAmB,KAGG,aAAjBsE,IAETrO,GAAQ+J,EAAM,CACZ,aAFG7Y,EAAKuL,MAAMzQ,EAAKW,SAASyK,sBAK1BlG,EAAKuL,MAAMzQ,EAAKW,SAASuK,gBAC3B8I,GAAQ+J,EAAM,CACZ,gBAAiB,MAKF,WAAjBsE,GAA8C,SAAjBA,IAC/BrO,GAAQ+J,EAAM,CACZ,aAAclb,IAGK,SAAjBwf,EACFhQ,EAAW0L,EAAM/d,EAAKW,SAASmL,YAE/BuG,EAAW0L,EAAM/d,EAAKW,SAASoL,aAC/BiI,GAAQ+J,EAAM,CACZzG,KAAM,SACNtR,GAAId,EAAKsa,OAKbxf,EAAKoW,YAAYiM,GAAcxf,GAASkb,GAGnCA,GA/CEA,EAyDX,WAAWsE,GACT,IAAIriB,EAAOV,UAEU,IAAjB+iB,EACFriB,EAAKoW,YAAc,CACjB,KAAQ,GACR,OAAU,IAGZpW,EAAKoW,YAAYiM,GAAgB,GAUrC,UAAU7U,GACR,OAAOlO,KAAKqB,SAASmJ,QAAU0D,EAAM5N,QAAUN,KAAKqB,SAASqJ,aAAavB,KAAKnJ,KAAMkO,GAWvF,KAAK8U,EAAMC,EAAQC,GACjB,IAAIxiB,EAAOV,KACPmjB,EAAcziB,EAAKuiB,GAEvBviB,EAAKuiB,GAAU,WACb,IAAIxc,EAAQ2c,EAQZ,MANa,UAATJ,IACFvc,EAAS0c,EAAYxiB,MAAMD,EAAML,YAGnC+iB,EAAaF,EAAOviB,MAAMD,EAAML,WAEnB,YAAT2iB,EACKI,GAGI,WAATJ,IACFvc,EAAS0c,EAAYxiB,MAAMD,EAAML,YAG5BoG,KAoqBb,OAhpBAqO,GAAUuO,OAAO,mBAAmB,SAAU3hB,GAC5C,IAAIhB,EAAOV,KACPsjB,GAAU,EACd5U,EAAShO,EAAKwN,MAAO,UAAU,KAE7B,GAAIoV,EACFA,GAAU,MADZ,CAKAA,GAAU,EACV,IAAIjiB,EAAWmO,EAAY9O,EAAKwN,MAAO,IACvCxN,EAAK0W,aAAa/V,EAASK,QAASL,EAAS+I,WAC7C1J,EAAKiZ,SAAStY,EAASiD,cAkB3BwQ,GAAUuO,OAAO,oBAAoB,SAAU3hB,GAC7C,IAAIhB,EAAOV,KACPujB,EAAsB7iB,EAAK6X,eAC/B7X,EAAKW,SAAS0J,cAAe,EAE7B,IAAIyY,EAAiB,SAAwBtT,GAC3CxC,YAAW,KACT,IAAI+V,EAAWvT,EAAOC,cAAc,SAEhCD,EAAOoD,UAAUW,SAAS,YAC5BwP,EAASC,SAAU,EAEnBD,EAASC,SAAU,IAEpB,IAILhjB,EAAKijB,KAAK,QAAS,kBAAkB,KACnC,IAAIC,EAAqBljB,EAAKW,SAAS2L,OAAOkD,OAE9CxP,EAAKW,SAAS2L,OAAOkD,OAAS,SAAUtK,GACtC,IAAIie,EAAW7R,EAAO4R,EAAmBjjB,MAAMD,EAAML,YACjDojB,EAAWxb,SAASC,cAAc,SACtCub,EAAS7U,iBAAiB,SAAS,SAAUL,GAC3CD,EAAeC,MAEjBkV,EAAS3V,KAAO,WAChB,IAAIvK,EAAQ0J,EAASrH,EAAKlF,EAAKW,SAASqK,aAOxC,OALIhL,EAAK4D,MAAM9D,QAAQ+C,IAAU,IAC/BkgB,EAASC,SAAU,GAGrBG,EAAShC,QAAQ4B,GACVI,MAIXnjB,EAAKsZ,GAAG,eAAezW,IACrB,IAAI2M,EAASxP,EAAK0b,UAAU7Y,GAExB2M,IAEFA,EAAOoD,UAAUG,OAAO,YAExB+P,EAAetT,OAInBxP,EAAKijB,KAAK,UAAW,kBAAkB,SAAUpV,EAAK2B,GACpD,GAAIA,EAAOoD,UAAUW,SAAS,YAK5B,OAJA/D,EAAOoD,UAAUG,OAAO,YACxB/S,EAAKkgB,WAAW1Q,EAAOc,QAAQzN,OAC/B7C,EAAKib,sBACLrN,EAAeC,GAAK,GAItBgV,EAAoB5iB,MAAMD,EAAML,WAChCmjB,EAAetT,SAkBnB4E,GAAUuO,OAAO,gBAAgB,SAAU3hB,GACzC,IAAIhB,EAAOV,KACX0B,EAAUmD,OAAOiC,OAAO,CACtBqB,UAAW,eACX2b,MAAO,YACPrF,KAAM7Y,GACG,eAAeA,EAAKuC,qBAAqBvC,EAAKke,wBAEtDpiB,GACHhB,EAAKijB,KAAK,QAAS,SAAS,KAC1B,IAAII,EAAS/R,EAAOtQ,EAAQ+c,KAAK/c,IACjCqiB,EAAOnV,iBAAiB,SAASL,IAC/B,KAAO7N,EAAK4D,MAAMhE,OAAS,GACzBI,EAAKkgB,WAAWlgB,EAAK4D,MAAM,IAAI,GAGjC5D,EAAKmZ,sBACLtL,EAAID,iBACJC,EAAIE,qBAEN/N,EAAK0U,QAAQ5M,YAAYub,SAkB7BjP,GAAUuO,OAAO,aAAa,SAAU3hB,GACtC,IAAIhB,EAAOV,KACX,IAAKgkB,EAAEhjB,GAAGijB,SAAU,MAAM,IAAIliB,MAAM,yDACpC,GAA2B,UAAvBrB,EAAKW,SAAS8K,KAAlB,CACA,IAAI+X,EAAYxjB,EAAK4gB,KACjB6C,EAAczjB,EAAK8gB,OACvB9gB,EAAKijB,KAAK,UAAW,QAAQ,WAC3B,IAAIM,EAAWvjB,EAAK0U,QAAQpE,QAAQiT,SAEpC,OADIA,GAAUA,EAASlK,UAChBmK,EAAUvjB,MAAMD,EAAML,cAE/BK,EAAKijB,KAAK,UAAW,UAAU,WAC7B,IAAIM,EAAWvjB,EAAK0U,QAAQpE,QAAQiT,SAEpC,OADIA,GAAUA,EAASG,SAChBD,EAAYxjB,MAAMD,EAAML,cAEjCK,EAAKijB,KAAK,QAAS,SAAS,KAC1B,IAAIU,EAAWL,EAAEtjB,EAAK0U,SAAS6O,SAAS,CACtC3f,MAAO,eACPggB,sBAAsB,EACtBhT,SAAU5Q,EAAKwV,SACf/H,MAAO,CAACwK,EAAG4L,KACTA,EAAG1X,YAAYgG,IAAI,QAAS0R,EAAGC,OAAO3R,IAAI,UAC1CwR,EAASxR,IAAI,CACX4R,SAAU,aAGdjW,KAAM,KACJ6V,EAASxR,IAAI,CACX4R,SAAU,WAEZ,IAAIlU,EAAS,GACb8T,EAASzS,SAAS,gBAAgB8S,MAAK,WACrCnU,EAAOpQ,KAAK6jB,EAAEhkB,MAAM4U,KAAK,kBAE3BlU,EAAKiZ,SAASpJ,aAoBtBuE,GAAUuO,OAAO,mBAAmB,SAAU3hB,GAC5C,IAAIhB,EAAOV,KACX0B,EAAUmD,OAAOiC,OAAO,CACtBgd,MAAO,WACPa,YAAa,kBACbC,cAAe,wBACfC,WAAY,wBACZC,WAAY,wBACZrG,KAAM7Y,GACG,eAAiBA,EAAK+e,YAAtB,iBAA4D/e,EAAKgf,cAAjE,kBAA0Ghf,EAAKif,WAAa,KAAOjf,EAAKke,MAAxI,oBAA2Kle,EAAKkf,WAAhL,6BAERpjB,GACHhB,EAAKijB,KAAK,QAAS,SAAS,KAC1B,IAAIoB,EAAS/S,EAAOtQ,EAAQ+c,KAAK/c,IAC7BsjB,EAAaD,EAAO5U,cAAc,IAAMzO,EAAQojB,YAEhDE,GACFA,EAAWpW,iBAAiB,SAASL,IACnCD,EAAeC,GAAK,GACpB7N,EAAKya,WAITza,EAAKyU,SAAS0K,aAAakF,EAAQrkB,EAAKyU,SAAS9L,kBAkBrDyL,GAAUuO,OAAO,kBAAkB,WACjC,IAAI3iB,EAAOV,KACPkO,EAAQxN,EAAKW,SAASsL,cAAgB,kEAC1CuB,EAAQ8D,EAAO9D,GAEXxN,EAAKW,SAASwL,aAChB6H,GAAQxG,EAAO,CACbrB,YAAanM,EAAKW,SAASwL,cAI/BnM,EAAKW,SAASsL,aAAeuB,EAC7BxN,EAAKW,SAASuJ,YAAa,EAE3BlK,EAAKijB,KAAK,QAAS,SAAS,KAE1BjP,GAAQhU,EAAKsT,QAAS,CACpBiR,SAAUvkB,EAAKwN,MAAMoD,SAAW,KAAO5Q,EAAK6U,WAG9C7G,EAAShO,EAAKsT,QAAS,YAAYzF,IACjC,IAAI7N,EAAK0U,QAAQnB,SAAS1F,EAAII,UAI1BjO,EAAKyU,SAASlB,SAAS1F,EAAII,QAK/B,OAAQJ,EAAIyM,SACV,KAAKzR,EAEH,YADA7I,EAAKgY,QAAQnK,OAInB,IAAI4D,EAAMH,EAAO,qCACjBG,EAAI3J,YAAY0F,GAChBxN,EAAKyU,SAAS0K,aAAa1N,EAAKzR,EAAKyU,SAAS9L,kBAiBlDyL,GAAUuO,OAAO,kBAAkB,WACjC,IAAI3iB,EAAOV,KACXU,EAAKijB,KAAK,QAAS,SAAS,KAC1B,IAAIuB,EAAajd,SAASC,cAAc,QACpCkN,EAAU1U,EAAKwU,cACnBgQ,EAAWpS,MAAMqS,QAAU,2FAC3BzkB,EAAKsT,QAAQxL,YAAY0c,GACzB,IAAIE,EAAkB,CAAC,gBAAiB,WAAY,aAAc,aAAc,iBAEhF,IAAK,MAAMC,KAAcD,EACvBF,EAAWpS,MAAMuS,GAAcjQ,EAAQtC,MAAMuS,GAQ/C,IAAIC,EAAS,KACP5kB,EAAK4D,MAAMhE,OAAS,GACtB4kB,EAAW9U,YAAcgF,EAAQ7R,MACjC6R,EAAQtC,MAAMsF,MAAQ8M,EAAWK,YAAc,MAE/CnQ,EAAQtC,MAAMsF,MAAQ,IAI1BkN,IACA5kB,EAAKsZ,GAAG,8BAA+BsL,GACvC5W,EAAS0G,EAAS,QAASkQ,GAC3B5W,EAAS0G,EAAS,QAASkQ,GAC3B5W,EAAS0G,EAAS,OAAQkQ,GAC1B5W,EAAS0G,EAAS,SAAUkQ,SAiBhCxQ,GAAUuO,OAAO,uBAAuB,WACtC,IAAI3iB,EAAOV,KACPwlB,EAAuB9kB,EAAKgb,gBAChC1b,KAAK2jB,KAAK,UAAW,mBAAmB,WACtC,QAAIjjB,EAAKkW,YAAYtW,QACZklB,EAAqB7kB,MAAMD,EAAML,iBAoB9CyU,GAAUuO,OAAO,mBAAmB,SAAU3hB,GAC5C1B,KAAK2jB,KAAK,UAAW,iBAAiB,SACtC3jB,KAAK2jB,KAAK,UAAW,aAAa,YAiBpC7O,GAAUuO,OAAO,oBAAoB,WACnC,IAAI3iB,EAAOV,KACPylB,EAAe/kB,EAAKkY,UACxBlY,EAAKijB,KAAK,UAAW,aAAa,SAAUpV,GAC1C,IAAImX,EAAOxV,EAAQxO,EAASgQ,EAE5B,IAAKhR,EAAKoV,QAAYvH,EAAIyM,UAAYvR,GAAY8E,EAAIyM,UAAYrR,EAChE,OAAO8b,EAAa9kB,MAAMD,EAAML,WAGlCqR,EAAWoC,EAAYpT,EAAKiW,aAAc,gBAC1C+O,EAAQpR,EAAU5T,EAAKiW,aAAc,sBAGnCjF,EADEnD,EAAIyM,UAAYvR,EACPiI,EAASiU,gBAETjU,EAASkU,eAQtB1V,GADAxO,EAAUgQ,EAASzI,iBAAiB,sBACnBsE,KAAKyR,IAAItd,EAAQpB,OAAS,EAAGolB,MAG5ChlB,EAAK6a,gBAAgBrL,SAmB3B4E,GAAUuO,OAAO,iBAAiB,SAAU3hB,GAC1CA,EAAUmD,OAAOiC,OAAO,CACtBoR,MAAO,UACP4L,MAAO,SACP3b,UAAW,SACX4P,QAAQ,GACPrW,GAEH,IAAIhB,EAAOV,KAEX,GAAK0B,EAAQqW,OAAb,CAIA,IAAI0G,EAAO,uCAAyC/c,EAAQyG,UAAY,0BAA4B+E,EAAYxL,EAAQoiB,OAAS,KAAOpiB,EAAQwW,MAAQ,OACxJxX,EAAKijB,KAAK,QAAS,kBAAkB,KACnC,IAAIkC,EAAmBnlB,EAAKW,SAAS2L,OAAOzF,KAE5C7G,EAAKW,SAAS2L,OAAOzF,KAAO,WAC1B,IAAIsc,EAAW7R,EAAO6T,EAAiBllB,MAAMD,EAAML,YAC/CylB,EAAe9T,EAAOyM,GAa1B,OAZAoF,EAASrb,YAAYsd,GACrBpX,EAASoX,EAAc,aAAavX,IAClCD,EAAeC,GAAK,MAEtBG,EAASoX,EAAc,SAASvX,IAG9B,GADAD,EAAeC,GAAK,IAChB7N,EAAKwV,SAAT,CACA,IAAI3S,EAAQsgB,EAAS7S,QAAQzN,MAC7B7C,EAAKkgB,WAAWrd,GAChB7C,EAAKib,gBAAe,OAEfkI,UAmBb/O,GAAUuO,OAAO,wBAAwB,SAAU3hB,GACjD,IAAIhB,EAAOV,KAEX0B,EAAQqkB,KAAOrkB,EAAQqkB,MAAQ,SAAU7V,GACvC,OAAOA,EAAOxP,EAAKW,SAASsK,aAG9BjL,EAAKsZ,GAAG,eAAe,SAAUzW,GAC/B,GAAwC,KAApC7C,EAAKwU,cAAc3R,MAAM0D,OAAe,CAC1C,IAAIiJ,EAASxP,EAAKgB,QAAQ6B,GAEtB2M,GACFxP,EAAKud,gBAAgBvc,EAAQqkB,KAAK5c,KAAKzI,EAAMwP,WAoBrD4E,GAAUuO,OAAO,kBAAkB,SAAU3hB,GAC3C,MAAMhB,EAAOV,KACPgmB,EAAetlB,EAAK2b,QACpB4J,EAAyBvlB,EAAK8b,kBAC9B0J,EAAoBxlB,EAAK4b,aAC/B,IACIjH,EADA8Q,EAAa,GAEbC,GAAe,EAEnB,IAAK1lB,EAAKW,SAASglB,SACjB,KAAM,qDAWR,SAASC,EAAY/hB,GACnB,KAAwC,iBAA7B7D,EAAKW,SAASwJ,YAA2BwK,EAAiBzD,SAAStR,QAAUI,EAAKW,SAASwJ,YAItG,UAAItG,KAAS4hB,KAAcA,EAAW5hB,IAXxC7D,EAAKW,SAAS2K,UAAY,CAAC,CACzB7G,MAAO,UACN,CACDA,MAAO,WAgBTzE,EAAK6lB,WAAa,SAAUhjB,EAAOijB,GACjCL,EAAW5iB,GAASijB,GAItB9lB,EAAK+lB,OAAS,SAAUliB,GACtB,GAAIA,KAAS4hB,EAAY,CACvB,MAAMK,EAAWL,EAAW5hB,GAE5B,OADA4hB,EAAW5hB,IAAS,EACbiiB,EAMT,OADAL,EAAa,GACNzlB,EAAKW,SAASglB,SAAS9hB,IAKhC7D,EAAKijB,KAAK,UAAW,qBAAqB,KACxC,IAAIyC,EAIJ,OAAOH,EAAuB9c,KAAKzI,MAGrCA,EAAKijB,KAAK,UAAW,WAAWpf,GAExBA,KAAS4hB,EAIRG,EAAY/hB,GAHVyhB,EAAa7c,KAAKnJ,KAAMuE,KAMnC7D,EAAKijB,KAAK,UAAW,gBAAgB,CAACpgB,EAAO7B,EAAS0I,KAC/Cgc,GACH1lB,EAAKgmB,eAGPR,EAAkB/c,KAAKzI,EAAM6C,EAAO7B,EAAS0I,GAC7Cgc,GAAe,KAKjB1lB,EAAKijB,KAAK,QAAS,kBAAkB,KACnC,MAAMpf,EAAQ7D,EAAK+V,UACnB,IAAIvG,EAEAoW,EAAY/hB,IACd2L,EAASxP,EAAKsM,OAAO,eAAgB,CACnCzI,MAAOA,MAEG2L,EAAOZ,aAAa,kBAAmB,IAC1C/K,KAAS4hB,IAAe9Q,EAAiBlF,cAAc,iBAChED,EAASxP,EAAKsM,OAAO,kBAAmB,CACtCzI,MAAOA,KAIP2L,IACF6C,EAAW7C,EAAQxP,EAAKW,SAASoL,aACjC4I,EAAiB0C,OAAO7H,OAI5BxP,EAAKijB,KAAK,QAAS,SAAS,KAC1BtO,EAAmB3U,EAAK2U,iBAExB3U,EAAKW,SAAS2L,OAASnI,OAAOiC,OAAO,GAAI,CACvCsf,aAAc,SAAUxgB,EAAMyU,GAC5B,MAAO,qEAETsM,gBAAiB,SAAU/gB,EAAMyU,GAC/B,MAAO,uDAER3Z,EAAKW,SAAS2L,QAEjBqI,EAAiBzG,iBAAiB,UAAU,WACnByG,EAAiBqI,cAAgBrI,EAAiBuR,aAAevR,EAAiBsI,WAEpF,KAKhB2I,EAAY5lB,EAAK+V,aAKlB2P,IACJA,GAAe,EACf1lB,EAAK4X,KAAKnP,KAAKzI,EAAMA,EAAK+V,sBAKzB3B,GAn9IyE+R","file":"tom-select-b0a00041d6c20eefeb27.js","sourcesContent":["/**\n* Tom Select v1.7.0\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.TomSelect = factory());\n}(this, (function () { 'use strict';\n\n\t/**\n\t * MicroEvent - to make any js object an event emitter\n\t *\n\t * - pure javascript - server compatible, browser compatible\n\t * - dont rely on the browser doms\n\t * - super simple - you get it immediatly, no mistery, no magic involved\n\t *\n\t * @author Jerome Etienne (https://github.com/jeromeetienne)\n\t */\n\n\t/**\n\t * Execute callback for each event in space separated list of event names\n\t *\n\t */\n\tfunction forEvents(events, callback) {\n\t  events.split(/\\s+/).forEach(event => {\n\t    callback(event);\n\t  });\n\t}\n\n\tclass MicroEvent {\n\t  constructor() {\n\t    this._events = {};\n\t  }\n\n\t  on(events, fct) {\n\t    forEvents(events, event => {\n\t      this._events[event] = this._events[event] || [];\n\n\t      this._events[event].push(fct);\n\t    });\n\t  }\n\n\t  off(events, fct) {\n\t    var n = arguments.length;\n\n\t    if (n === 0) {\n\t      this._events = {};\n\t      return;\n\t    }\n\n\t    forEvents(events, event => {\n\t      if (n === 1) return delete this._events[event];\n\t      if (event in this._events === false) return;\n\n\t      this._events[event].splice(this._events[event].indexOf(fct), 1);\n\t    });\n\t  }\n\n\t  trigger(events, ...args) {\n\t    var self = this;\n\t    forEvents(events, event => {\n\t      if (event in self._events === false) return;\n\n\t      for (let fct of self._events[event]) {\n\t        fct.apply(self, args);\n\t      }\n\t    });\n\t  }\n\n\t}\n\n\t/**\n\t * microplugin.js\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\tfunction MicroPlugin(Interface) {\n\t  Interface.plugins = {};\n\t  return class mixin extends Interface {\n\t    /**\n\t     * Registers a plugin.\n\t     *\n\t     * @param {string} name\n\t     * @param {function} fn\n\t     */\n\t    static define(name, fn) {\n\t      Interface.plugins[name] = {\n\t        'name': name,\n\t        'fn': fn\n\t      };\n\t    }\n\t    /**\n\t     * Initializes the listed plugins (with options).\n\t     * Acceptable formats:\n\t     *\n\t     * List (without options):\n\t     *   ['a', 'b', 'c']\n\t     *\n\t     * List (with options):\n\t     *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t     *\n\t     * Hash (with options):\n\t     *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t     *\n\t     * @param {array|object} plugins\n\t     */\n\n\n\t    initializePlugins(plugins) {\n\t      var i, n, key;\n\t      var self = this;\n\t      var queue = [];\n\t      self.plugins = {\n\t        names: [],\n\t        settings: {},\n\t        requested: {},\n\t        loaded: {}\n\t      };\n\n\t      if (Array.isArray(plugins)) {\n\t        for (i = 0, n = plugins.length; i < n; i++) {\n\t          if (typeof plugins[i] === 'string') {\n\t            queue.push(plugins[i]);\n\t          } else {\n\t            self.plugins.settings[plugins[i].name] = plugins[i].options;\n\t            queue.push(plugins[i].name);\n\t          }\n\t        }\n\t      } else if (plugins) {\n\t        for (key in plugins) {\n\t          if (plugins.hasOwnProperty(key)) {\n\t            self.plugins.settings[key] = plugins[key];\n\t            queue.push(key);\n\t          }\n\t        }\n\t      }\n\n\t      while (queue.length) {\n\t        self.require(queue.shift());\n\t      }\n\t    }\n\n\t    loadPlugin(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\t      var plugin = Interface.plugins[name];\n\n\t      if (!Interface.plugins.hasOwnProperty(name)) {\n\t        throw new Error('Unable to find \"' + name + '\" plugin');\n\t      }\n\n\t      plugins.requested[name] = true;\n\t      plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t      plugins.names.push(name);\n\t    }\n\t    /**\n\t     * Initializes a plugin.\n\t     *\n\t     * @param {string} name\n\t     */\n\n\n\t    require(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\n\t      if (!self.plugins.loaded.hasOwnProperty(name)) {\n\t        if (plugins.requested[name]) {\n\t          throw new Error('Plugin has circular dependency (\"' + name + '\")');\n\t        }\n\n\t        self.loadPlugin(name);\n\t      }\n\n\t      return plugins.loaded[name];\n\t    }\n\n\t  };\n\t}\n\n\t/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\t// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n\t/**\n\t * code points generated from toCodePoints();\n\t * removed 65339 to 65345\n\t */\n\n\tvar code_points = [[67, 67], [160, 160], [192, 438], [452, 652], [961, 961], [1019, 1019], [1083, 1083], [1281, 1289], [1984, 1984], [5095, 5095], [7429, 7441], [7545, 7549], [7680, 7935], [8580, 8580], [9398, 9449], [11360, 11391], [42792, 42793], [42802, 42851], [42873, 42897], [42912, 42922], [64256, 64260], [65313, 65338], [65345, 65370]];\n\t/**\n\t * Remove accents\n\t * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n\t *\n\t */\n\n\tfunction asciifold(str) {\n\t  return str.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD').toLowerCase();\n\t}\n\t/**\n\t * Generate a list of diacritics from the list of code points\n\t *\n\t */\n\n\n\tfunction generateDiacritics() {\n\t  var latin_convert = {\n\t    'l·': 'l',\n\t    'ʼn': 'n',\n\t    'æ': 'ae',\n\t    'ø': 'o',\n\t    'aʾ': 'a',\n\t    'dž': 'dz'\n\t  };\n\t  var diacritics = {}; //var no_latin\t= [];\n\n\t  code_points.forEach(code_range => {\n\t    for (let i = code_range[0]; i <= code_range[1]; i++) {\n\t      let diacritic = String.fromCharCode(i);\n\t      let latin = diacritic.normalize('NFD').replace(/[\\u0300-\\u036F]/g, '').normalize('NFKD');\n\n\t      if (latin == diacritic) {\n\t        //no_latin.push(diacritic);\n\t        continue;\n\t      }\n\n\t      latin = latin.toLowerCase();\n\n\t      if (latin in latin_convert) {\n\t        latin = latin_convert[latin];\n\t      }\n\n\t      if (!(latin in diacritics)) {\n\t        diacritics[latin] = latin + latin.toUpperCase();\n\t      }\n\n\t      diacritics[latin] += diacritic;\n\t    }\n\t  }); //console.log('no_latin',JSON.stringify(no_latin));\n\n\t  return diacritics;\n\t}\n\t/**\n\t * Expand a regular expression pattern to include diacritics\n\t * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n\t *\n\t */\n\n\tvar diacritics = null;\n\tfunction diacriticRegexPoints(regex) {\n\t  if (diacritics === null) {\n\t    diacritics = generateDiacritics();\n\t  }\n\n\t  for (let latin in diacritics) {\n\t    if (diacritics.hasOwnProperty(latin)) {\n\t      regex = regex.replace(new RegExp(latin, 'g'), '[' + diacritics[latin] + ']');\n\t    }\n\t  }\n\n\t  return regex;\n\t}\n\n\t/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n\t// @ts-ignore\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\n\tfunction getAttr(obj, name) {\n\t  if (!obj) return;\n\t  return obj[name];\n\t}\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\n\tfunction getAttrNesting(obj, name) {\n\t  if (!obj) return;\n\t  var names = name.split(\".\");\n\n\t  while (names.length && (obj = obj[names.shift()]));\n\n\t  return obj;\n\t}\n\t/**\n\t * Calculates how close of a match the\n\t * given value is against a search token.\n\t *\n\t * @param {object} token\n\t * @return {number}\n\t */\n\n\tfunction scoreValue(value, token, weight) {\n\t  var score, pos;\n\t  if (!value) return 0;\n\t  value = value + '';\n\t  pos = value.search(token.regex);\n\t  if (pos === -1) return 0;\n\t  score = token.string.length / value.length;\n\t  if (pos === 0) score += 0.5;\n\t  return score * weight;\n\t}\n\tfunction escape_regex(str) {\n\t  return (str + '').replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n\t}\n\t/**\n\t * Cast object property to an array if it exists and has a value\n\t *\n\t */\n\n\tfunction propToArray(obj, key) {\n\t  var value = obj[key];\n\n\t  if (value && !Array.isArray(value)) {\n\t    obj[key] = [value];\n\t  }\n\t}\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * iterate(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t * @param {array|object} object\n\t */\n\n\tfunction iterate(object, callback) {\n\t  if (Array.isArray(object)) {\n\t    object.forEach(callback);\n\t  } else {\n\t    for (var key in object) {\n\t      if (object.hasOwnProperty(key)) {\n\t        callback(object[key], key);\n\t      }\n\t    }\n\t  }\n\t}\n\tfunction cmp(a, b) {\n\t  if (typeof a === 'number' && typeof b === 'number') {\n\t    return a > b ? 1 : a < b ? -1 : 0;\n\t  }\n\n\t  a = asciifold(a + '').toLowerCase();\n\t  b = asciifold(b + '').toLowerCase();\n\t  if (a > b) return 1;\n\t  if (b > a) return -1;\n\t  return 0;\n\t}\n\n\t/*! sifter.js | https://github.com/orchidjs/sifter.js | Apache License (v2) */\n\n\t/**\n\t * sifter.js\n\t * Copyright (c) 2013–2020 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\tclass Sifter {\n\t  /**\n\t   * Textually searches arrays and hashes of objects\n\t   * by property (or multiple properties). Designed\n\t   * specifically for autocomplete.\n\t   *\n\t   * @constructor\n\t   * @param {array|object} items\n\t   * @param {object} items\n\t   */\n\t  constructor(items, settings) {\n\t    this.items = void 0;\n\t    this.settings = void 0;\n\t    this.items = items;\n\t    this.settings = settings || {\n\t      diacritics: true\n\t    };\n\t  }\n\n\t  /**\n\t   * Splits a search string into an array of individual\n\t   * regexps to be used to match results.\n\t   *\n\t   */\n\t  tokenize(query, respect_word_boundaries, weights) {\n\t    if (!query || !query.length) return [];\n\t    const tokens = [];\n\t    const words = query.split(/\\s+/);\n\t    var field_regex;\n\n\t    if (weights) {\n\t      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n\t    }\n\n\t    words.forEach(word => {\n\t      let field_match;\n\t      let field = null;\n\t      let regex = null; // look for \"field:query\" tokens\n\n\t      if (field_regex && (field_match = word.match(field_regex))) {\n\t        field = field_match[1];\n\t        word = field_match[2];\n\t      }\n\n\t      if (word.length > 0) {\n\t        regex = escape_regex(word);\n\n\t        if (this.settings.diacritics) {\n\t          regex = diacriticRegexPoints(regex);\n\t        }\n\n\t        if (respect_word_boundaries) regex = \"\\\\b\" + regex;\n\t        regex = new RegExp(regex, 'i');\n\t      }\n\n\t      tokens.push({\n\t        string: word,\n\t        regex: regex,\n\t        field: field\n\t      });\n\t    });\n\t    return tokens;\n\t  }\n\n\t  /**\n\t   * Returns a function to be used to score individual results.\n\t   *\n\t   * Good matches will have a higher score than poor matches.\n\t   * If an item is not a match, 0 will be returned by the function.\n\t   *\n\t   * @returns {function}\n\t   */\n\t  getScoreFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getScoreFunction(search);\n\t  }\n\n\t  _getScoreFunction(search) {\n\t    const tokens = search.tokens,\n\t          token_count = tokens.length;\n\n\t    if (!token_count) {\n\t      return function () {\n\t        return 0;\n\t      };\n\t    }\n\n\t    const fields = search.options.fields,\n\t          weights = search.weights,\n\t          field_count = fields.length,\n\t          getAttrFn = search.getAttrFn;\n\n\t    if (!field_count) {\n\t      return function () {\n\t        return 1;\n\t      };\n\t    }\n\t    /**\n\t     * Calculates the score of an object\n\t     * against the search query.\n\t     *\n\t     * @param {TToken} token\n\t     * @param {object} data\n\t     * @return {number}\n\t     */\n\n\n\t    const scoreObject = function () {\n\t      if (field_count === 1) {\n\t        return function (token, data) {\n\t          const field = fields[0].field;\n\t          return scoreValue(getAttrFn(data, field), token, weights[field]);\n\t        };\n\t      }\n\n\t      return function (token, data) {\n\t        var sum = 0; // is the token specific to a field?\n\n\t        if (token.field) {\n\t          const value = getAttrFn(data, token.field);\n\n\t          if (!token.regex && value) {\n\t            sum += 1 / field_count;\n\t          } else {\n\t            sum += scoreValue(value, token, 1);\n\t          }\n\t        } else {\n\t          iterate(weights, (weight, field) => {\n\t            sum += scoreValue(getAttrFn(data, field), token, weight);\n\t          });\n\t        }\n\n\t        return sum / field_count;\n\t      };\n\t    }();\n\n\t    if (token_count === 1) {\n\t      return function (data) {\n\t        return scoreObject(tokens[0], data);\n\t      };\n\t    }\n\n\t    if (search.options.conjunction === 'and') {\n\t      return function (data) {\n\t        var i = 0,\n\t            score,\n\t            sum = 0;\n\n\t        for (; i < token_count; i++) {\n\t          score = scoreObject(tokens[i], data);\n\t          if (score <= 0) return 0;\n\t          sum += score;\n\t        }\n\n\t        return sum / token_count;\n\t      };\n\t    } else {\n\t      return function (data) {\n\t        var sum = 0;\n\t        iterate(tokens, token => {\n\t          sum += scoreObject(token, data);\n\t        });\n\t        return sum / token_count;\n\t      };\n\t    }\n\t  }\n\n\t  /**\n\t   * Returns a function that can be used to compare two\n\t   * results, for sorting purposes. If no sorting should\n\t   * be performed, `null` will be returned.\n\t   *\n\t   * @return function(a,b)\n\t   */\n\t  getSortFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getSortFunction(search);\n\t  }\n\n\t  _getSortFunction(search) {\n\t    var i, n, sort_fld, sort_flds_count, multiplier, implicit_score;\n\t    const self = this,\n\t          options = search.options,\n\t          sort = !search.query && options.sort_empty || options.sort,\n\t          sort_flds = [],\n\t          multipliers = [];\n\t    /**\n\t     * Fetches the specified sort field value\n\t     * from a search result item.\n\t     *\n\t     * @param  {string} name\n\t     * @param  {object} result\n\t     * @return {string}\n\t     */\n\n\t    const get_field = function get_field(name, result) {\n\t      if (name === '$score') return result.score;\n\t      return search.getAttrFn(self.items[result.id], name);\n\t    }; // parse options\n\n\n\t    if (sort) {\n\t      for (i = 0, n = sort.length; i < n; i++) {\n\t        if (search.query || sort[i].field !== '$score') {\n\t          sort_flds.push(sort[i]);\n\t        }\n\t      }\n\t    } // the \"$score\" field is implied to be the primary\n\t    // sort field, unless it's manually specified\n\n\n\t    if (search.query) {\n\t      implicit_score = true;\n\n\t      for (i = 0, n = sort_flds.length; i < n; i++) {\n\t        if (sort_flds[i].field === '$score') {\n\t          implicit_score = false;\n\t          break;\n\t        }\n\t      }\n\n\t      if (implicit_score) {\n\t        sort_flds.unshift({\n\t          field: '$score',\n\t          direction: 'desc'\n\t        });\n\t      }\n\t    } else {\n\t      for (i = 0, n = sort_flds.length; i < n; i++) {\n\t        if (sort_flds[i].field === '$score') {\n\t          sort_flds.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\n\t    for (i = 0, n = sort_flds.length; i < n; i++) {\n\t      multipliers.push(sort_flds[i].direction === 'desc' ? -1 : 1);\n\t    } // build function\n\n\n\t    sort_flds_count = sort_flds.length;\n\n\t    if (!sort_flds_count) {\n\t      return null;\n\t    } else if (sort_flds_count === 1) {\n\t      sort_fld = sort_flds[0].field;\n\t      multiplier = multipliers[0];\n\t      return function (a, b) {\n\t        return multiplier * cmp(get_field(sort_fld, a), get_field(sort_fld, b));\n\t      };\n\t    } else {\n\t      return function (a, b) {\n\t        var i, result, field;\n\n\t        for (i = 0; i < sort_flds_count; i++) {\n\t          field = sort_flds[i].field;\n\t          result = multipliers[i] * cmp(get_field(field, a), get_field(field, b));\n\t          if (result) return result;\n\t        }\n\n\t        return 0;\n\t      };\n\t    }\n\t  }\n\n\t  /**\n\t   * Parses a search query and returns an object\n\t   * with tokens and fields ready to be populated\n\t   * with results.\n\t   *\n\t   */\n\t  prepareSearch(query, optsUser) {\n\t    const weights = {};\n\t    var options = Object.assign({}, optsUser);\n\t    propToArray(options, 'sort');\n\t    propToArray(options, 'sort_empty'); // convert fields to new format\n\n\t    if (options.fields) {\n\t      propToArray(options, 'fields');\n\n\t      if (Array.isArray(options.fields) && typeof options.fields[0] !== 'object') {\n\t        var fields = [];\n\t        options.fields.forEach(fld_name => {\n\t          fields.push({\n\t            field: fld_name\n\t          });\n\t        });\n\t        options.fields = fields;\n\t      }\n\n\t      options.fields.forEach(field_params => {\n\t        weights[field_params.field] = 'weight' in field_params ? field_params.weight : 1;\n\t      });\n\t    }\n\n\t    query = asciifold(query + '').toLowerCase().trim();\n\t    return {\n\t      options: options,\n\t      query: query,\n\t      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n\t      total: 0,\n\t      items: [],\n\t      weights: weights,\n\t      getAttrFn: options.nesting ? getAttrNesting : getAttr\n\t    };\n\t  }\n\n\t  /**\n\t   * Searches through all items and returns a sorted array of matches.\n\t   *\n\t   */\n\t  search(query, options) {\n\t    var self = this,\n\t        score,\n\t        search;\n\t    var fn_sort;\n\t    var fn_score;\n\t    search = this.prepareSearch(query, options);\n\t    options = search.options;\n\t    query = search.query; // generate result scoring function\n\n\t    fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\t    if (query.length) {\n\t      iterate(self.items, (item, id) => {\n\t        score = fn_score(item);\n\n\t        if (options.filter === false || score > 0) {\n\t          search.items.push({\n\t            'score': score,\n\t            'id': id\n\t          });\n\t        }\n\t      });\n\t    } else {\n\t      iterate(self.items, (item, id) => {\n\t        search.items.push({\n\t          'score': 1,\n\t          'id': id\n\t        });\n\t      });\n\t    }\n\n\t    fn_sort = self._getSortFunction(search);\n\t    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n\t    search.total = search.items.length;\n\n\t    if (typeof options.limit === 'number') {\n\t      search.items = search.items.slice(0, options.limit);\n\t    }\n\n\t    return search;\n\t  }\n\n\t}\n\n\t/**\n\t * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n\t * Highlights arbitrary terms in a node.\n\t *\n\t * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n\t * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n\t */\n\tfunction highlight(element, regex) {\n\t  if (regex === null) return; // convet string to regex\n\n\t  if (typeof regex === 'string') {\n\t    if (!regex.length) return;\n\t    regex = new RegExp(regex, 'i');\n\t  }\n\n\t  var highlight = function highlight(node) {\n\t    var skip = 0; // Wrap matching part of text node with highlighting <span>, e.g.\n\t    // Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\n\t    if (node.nodeType === 3) {\n\t      var pos = node.data.search(regex);\n\n\t      if (pos >= 0 && node.data.length > 0) {\n\t        var match = node.data.match(regex);\n\t        var spannode = document.createElement('span');\n\t        spannode.className = 'highlight';\n\t        var middlebit = node.splitText(pos);\n\t        middlebit.splitText(match[0].length);\n\t        var middleclone = middlebit.cloneNode(true);\n\t        spannode.appendChild(middleclone);\n\t        middlebit.parentNode.replaceChild(spannode, middlebit);\n\t        skip = 1;\n\t      }\n\t    } // Recurse element node, looking for child text nodes to highlight, unless element\n\t    // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\t    else if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {\n\t        for (var i = 0; i < node.childNodes.length; ++i) {\n\t          i += highlight(node.childNodes[i]);\n\t        }\n\t      }\n\n\t    return skip;\n\t  };\n\n\t  highlight(element);\n\t}\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with(), pass js strict mode, and use without jquery\n\t */\n\n\tfunction removeHighlight(el) {\n\t  var elements = document.querySelectorAll(\"span.highlight\");\n\t  Array.prototype.forEach.call(elements, function (el, i) {\n\t    var parent = el.parentNode;\n\t    parent.replaceChild(el.firstChild, el);\n\t    parent.normalize();\n\t  });\n\t}\n\n\tconst KEY_A = 65;\n\tconst KEY_RETURN = 13;\n\tconst KEY_ESC = 27;\n\tconst KEY_LEFT = 37;\n\tconst KEY_UP = 38;\n\tconst KEY_RIGHT = 39;\n\tconst KEY_DOWN = 40;\n\tconst KEY_BACKSPACE = 8;\n\tconst KEY_DELETE = 46;\n\tconst KEY_TAB = 9;\n\tconst IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\n\tconst KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n\n\tvar defaults = {\n\t  options: [],\n\t  optgroups: [],\n\t  plugins: [],\n\t  delimiter: ',',\n\t  splitOn: null,\n\t  // regexp or string for splitting up values from a paste command\n\t  persist: true,\n\t  diacritics: true,\n\t  create: null,\n\t  createOnBlur: false,\n\t  createFilter: null,\n\t  highlight: true,\n\t  openOnFocus: true,\n\t  shouldOpen: null,\n\t  maxOptions: 50,\n\t  maxItems: null,\n\t  hideSelected: null,\n\t  duplicates: false,\n\t  addPrecedence: false,\n\t  selectOnTab: false,\n\t  preload: null,\n\t  allowEmptyOption: false,\n\t  closeAfterSelect: false,\n\t  loadThrottle: 300,\n\t  loadingClass: 'loading',\n\t  dataAttr: null,\n\t  //'data-data',\n\t  optgroupField: 'optgroup',\n\t  valueField: 'value',\n\t  labelField: 'text',\n\t  disabledField: 'disabled',\n\t  optgroupLabelField: 'label',\n\t  optgroupValueField: 'value',\n\t  lockOptgroupOrder: false,\n\t  sortField: '$order',\n\t  searchField: ['text'],\n\t  searchConjunction: 'and',\n\t  mode: null,\n\t  wrapperClass: 'ts-control',\n\t  inputClass: 'ts-input',\n\t  dropdownClass: 'ts-dropdown',\n\t  dropdownContentClass: 'ts-dropdown-content',\n\t  itemClass: 'item',\n\t  optionClass: 'option',\n\t  dropdownParent: null,\n\t  controlInput: null,\n\t  copyClassesToDropdown: true,\n\t  placeholder: null,\n\t  hidePlaceholder: null,\n\t  shouldLoad: function (query) {\n\t    return query.length > 0;\n\t  },\n\n\t  /*\n\t  load                 : null, // function(query, callback) { ... }\n\t  score                : null, // function(search) { ... }\n\t  onInitialize         : null, // function() { ... }\n\t  onChange             : null, // function(value) { ... }\n\t  onItemAdd            : null, // function(value, $item) { ... }\n\t  onItemRemove         : null, // function(value) { ... }\n\t  onClear              : null, // function() { ... }\n\t  onOptionAdd          : null, // function(value, data) { ... }\n\t  onOptionRemove       : null, // function(value) { ... }\n\t  onOptionClear        : null, // function() { ... }\n\t  onOptionGroupAdd     : null, // function(id, data) { ... }\n\t  onOptionGroupRemove  : null, // function(id) { ... }\n\t  onOptionGroupClear   : null, // function() { ... }\n\t  onDropdownOpen       : null, // function(dropdown) { ... }\n\t  onDropdownClose      : null, // function(dropdown) { ... }\n\t  onType               : null, // function(str) { ... }\n\t  onDelete             : null, // function(values) { ... }\n\t  */\n\t  render: {\n\t    /*\n\t    item: null,\n\t    optgroup: null,\n\t    optgroup_header: null,\n\t    option: null,\n\t    option_create: null\n\t    */\n\t  }\n\t};\n\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t */\n\tfunction hash_key(value) {\n\t  if (typeof value === 'undefined' || value === null) return null;\n\t  if (typeof value === 'boolean') return value ? '1' : '0';\n\t  return value + '';\n\t}\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t */\n\n\tfunction escape_html(str) {\n\t  return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n\t}\n\t/**\n\t * Debounce the user provided load function\n\t *\n\t */\n\n\tfunction loadDebounce(fn, delay) {\n\t  var timeout;\n\t  return function (value, callback) {\n\t    var self = this;\n\n\t    if (timeout) {\n\t      self.loading = Math.max(self.loading - 1, 0);\n\t    }\n\n\t    clearTimeout(timeout);\n\t    timeout = setTimeout(function () {\n\t      timeout = null;\n\t      self.loadedSearches[value] = true;\n\t      fn.call(self, value, callback);\n\t    }, delay);\n\t  };\n\t}\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t */\n\n\tfunction debounce_events(self, types, fn) {\n\t  var type;\n\t  var trigger = self.trigger;\n\t  var event_args = {}; // override trigger method\n\n\t  self.trigger = function () {\n\t    var type = arguments[0];\n\n\t    if (types.indexOf(type) !== -1) {\n\t      event_args[type] = arguments;\n\t    } else {\n\t      return trigger.apply(self, arguments);\n\t    }\n\t  }; // invoke provided function\n\n\n\t  fn.apply(self, []);\n\t  self.trigger = trigger; // trigger queued events\n\n\t  for (type in event_args) {\n\t    trigger.apply(self, event_args[type]);\n\t  }\n\t}\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t */\n\n\tfunction getSelection(input) {\n\t  return {\n\t    start: input.selectionStart,\n\t    length: input.selectionEnd - input.selectionStart\n\t  };\n\t}\n\t/**\n\t * Prevent default\n\t *\n\t */\n\n\tfunction preventDefault(evt, stop = false) {\n\t  if (evt) {\n\t    evt.preventDefault();\n\n\t    if (stop) {\n\t      evt.stopPropagation();\n\t    }\n\t  }\n\t}\n\t/**\n\t * Prevent default\n\t *\n\t */\n\n\tfunction addEvent(target, type, callback, options) {\n\t  target.addEventListener(type, callback, options);\n\t}\n\t/**\n\t * Return true if the requested key is down\n\t * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n\t * The current evt may not always set ( eg calling advanceSelection() )\n\t *\n\t */\n\n\tfunction isKeyDown(key_name, evt) {\n\t  if (!evt) {\n\t    return false;\n\t  }\n\n\t  if (!evt[key_name]) {\n\t    return false;\n\t  }\n\n\t  var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);\n\n\t  if (count === 1) {\n\t    return true;\n\t  }\n\n\t  return false;\n\t}\n\t/**\n\t * Get the id of an element\n\t * If the id attribute is not set, set the attribute with the given id\n\t *\n\t */\n\n\tfunction getId(el, id) {\n\t  const existing_id = el.getAttribute('id');\n\n\t  if (existing_id) {\n\t    return existing_id;\n\t  }\n\n\t  el.setAttribute('id', id);\n\t  return id;\n\t}\n\t/**\n\t * Quote string with slashes\n\t *\n\t */\n\n\tfunction addSlashes(str) {\n\t  return str.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/'/g, \"\\\\'\");\n\t}\n\n\tfunction getSettings(input, settings_user) {\n\t  var settings = Object.assign({}, defaults, settings_user);\n\t  var attr_data = settings.dataAttr;\n\t  var field_label = settings.labelField;\n\t  var field_value = settings.valueField;\n\t  var field_disabled = settings.disabledField;\n\t  var field_optgroup = settings.optgroupField;\n\t  var field_optgroup_label = settings.optgroupLabelField;\n\t  var field_optgroup_value = settings.optgroupValueField;\n\t  var tag_name = input.tagName.toLowerCase();\n\t  var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\t  if (!placeholder && !settings.allowEmptyOption) {\n\t    let option = input.querySelector('option[value=\"\"]');\n\n\t    if (option) {\n\t      placeholder = option.textContent;\n\t    }\n\t  }\n\n\t  var settings_element = {\n\t    placeholder: placeholder,\n\t    options: [],\n\t    optgroups: [],\n\t    items: [],\n\t    maxItems: null\n\t  };\n\t  /**\n\t   * Initialize from a <select> element.\n\t   *\n\t   */\n\n\t  var init_select = () => {\n\t    var tagName;\n\t    var options = settings_element.options;\n\t    var optionsMap = {};\n\t    var group_count = 1;\n\n\t    var readData = el => {\n\t      var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap\n\n\t      var json = attr_data && data[attr_data];\n\n\t      if (typeof json === 'string' && json.length) {\n\t        data = Object.assign(data, JSON.parse(json));\n\t      }\n\n\t      return data;\n\t    };\n\n\t    var addOption = (option, group) => {\n\t      var value = hash_key(option.value);\n\t      if (!value && !settings.allowEmptyOption) return; // if the option already exists, it's probably been\n\t      // duplicated in another optgroup. in this case, push\n\t      // the current group to the \"optgroup\" property on the\n\t      // existing option so that it's rendered in both places.\n\n\t      if (optionsMap.hasOwnProperty(value)) {\n\t        if (group) {\n\t          var arr = optionsMap[value][field_optgroup];\n\n\t          if (!arr) {\n\t            optionsMap[value][field_optgroup] = group;\n\t          } else if (!Array.isArray(arr)) {\n\t            optionsMap[value][field_optgroup] = [arr, group];\n\t          } else {\n\t            arr.push(group);\n\t          }\n\t        }\n\n\t        return;\n\t      }\n\n\t      var option_data = readData(option);\n\t      option_data[field_label] = option_data[field_label] || option.textContent;\n\t      option_data[field_value] = option_data[field_value] || value;\n\t      option_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t      option_data[field_optgroup] = option_data[field_optgroup] || group;\n\t      option_data.$option = option;\n\t      optionsMap[value] = option_data;\n\t      options.push(option_data);\n\n\t      if (option.selected) {\n\t        settings_element.items.push(value);\n\t      }\n\t    };\n\n\t    var addGroup = optgroup => {\n\t      var id, optgroup_data;\n\t      optgroup_data = readData(optgroup);\n\t      optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t      optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;\n\t      optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;\n\t      settings_element.optgroups.push(optgroup_data);\n\t      id = optgroup_data[field_optgroup_value];\n\n\t      for (const option of optgroup.children) {\n\t        addOption(option, id);\n\t      }\n\t    };\n\n\t    settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t    for (const child of input.children) {\n\t      tagName = child.tagName.toLowerCase();\n\n\t      if (tagName === 'optgroup') {\n\t        addGroup(child);\n\t      } else if (tagName === 'option') {\n\t        addOption(child);\n\t      }\n\t    }\n\t  };\n\t  /**\n\t   * Initialize from a <input type=\"text\"> element.\n\t   *\n\t   */\n\n\n\t  var init_textbox = () => {\n\t    var values, option;\n\t    var data_raw = input.getAttribute(attr_data);\n\n\t    if (!data_raw) {\n\t      var value = input.value.trim() || '';\n\t      if (!settings.allowEmptyOption && !value.length) return;\n\t      values = value.split(settings.delimiter);\n\n\t      for (const _value of values) {\n\t        option = {};\n\t        option[field_label] = _value;\n\t        option[field_value] = _value;\n\t        settings_element.options.push(option);\n\t      }\n\n\t      settings_element.items = values;\n\t    } else {\n\t      settings_element.options = JSON.parse(data_raw);\n\n\t      for (const opt of settings_element.options) {\n\t        settings_element.items.push(opt[field_value]);\n\t      }\n\t    }\n\t  };\n\n\t  if (tag_name === 'select') {\n\t    init_select();\n\t  } else {\n\t    init_textbox();\n\t  }\n\n\t  return Object.assign({}, defaults, settings_element, settings_user);\n\t}\n\n\t/**\n\t * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n\t * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n\t *\n\t * param query should be {}\n\t */\n\tfunction getDom(query) {\n\t  if (query.jquery) {\n\t    return query[0];\n\t  }\n\n\t  if (query instanceof HTMLElement) {\n\t    return query;\n\t  }\n\n\t  if (query.indexOf('<') > -1) {\n\t    let div = document.createElement('div');\n\t    div.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\n\t    return div.firstChild;\n\t  }\n\n\t  return document.querySelector(query);\n\t}\n\tfunction escapeQuery(query) {\n\t  return query.replace(/['\"\\\\]/g, '\\\\$&');\n\t}\n\t/**\n\t * Dispatch an event\n\t *\n\t */\n\n\tfunction triggerEvent(dom_el, event_name) {\n\t  var event = document.createEvent('HTMLEvents');\n\t  event.initEvent(event_name, true, false);\n\t  dom_el.dispatchEvent(event);\n\t}\n\t/**\n\t * Apply CSS rules to a dom element\n\t *\n\t */\n\n\tfunction applyCSS(dom_el, css) {\n\t  Object.assign(dom_el.style, css);\n\t}\n\t/**\n\t * Add css classes\n\t *\n\t */\n\n\tfunction addClasses(elmts, ...classes) {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.add(cls);\n\t    });\n\t  });\n\t}\n\t/**\n\t * Remove css classes\n\t *\n\t */\n\n\tfunction removeClasses(elmts, ...classes) {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.remove(cls);\n\t    });\n\t  });\n\t}\n\t/**\n\t * Return arguments\n\t *\n\t */\n\n\tfunction classesArray(args) {\n\t  var classes = [];\n\n\t  for (let _classes of args) {\n\t    if (typeof _classes === 'string') {\n\t      _classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t    }\n\n\t    if (Array.isArray(_classes)) {\n\t      classes = classes.concat(_classes);\n\t    }\n\t  }\n\n\t  return classes.filter(Boolean);\n\t}\n\t/**\n\t * Create an array from arg if it's not already an array\n\t *\n\t */\n\n\tfunction castAsArray(arg) {\n\t  if (!Array.isArray(arg)) {\n\t    arg = [arg];\n\t  }\n\n\t  return arg;\n\t}\n\t/**\n\t * Get the closest node to the evt.target matching the selector\n\t * Stops at wrapper\n\t *\n\t */\n\n\tfunction parentMatch(target, selector, wrapper) {\n\t  if (wrapper && !wrapper.contains(target)) {\n\t    return;\n\t  }\n\n\t  while (target && target.matches) {\n\t    if (target.matches(selector)) {\n\t      return target;\n\t    }\n\n\t    target = target.parentNode;\n\t  }\n\t}\n\t/**\n\t * Get the first or last item from an array\n\t *\n\t * > 0 - right (last)\n\t * < 0 - left (first)\n\t *\n\t */\n\n\tfunction getTail(list, direction) {\n\t  if (direction > 0) {\n\t    return list[list.length - 1];\n\t  }\n\n\t  return list[0];\n\t}\n\t/**\n\t * Return true if an object is empty\n\t *\n\t */\n\n\tfunction isEmptyObject(obj) {\n\t  return Object.keys(obj).length === 0;\n\t}\n\t/**\n\t * Get the index of an element amongst sibling nodes of the same type\n\t *\n\t */\n\n\tfunction nodeIndex(el, amongst) {\n\t  if (!el) return -1;\n\t  amongst = amongst || el.nodeName;\n\t  var i = 0;\n\n\t  while (el = el.previousElementSibling) {\n\t    if (el.matches(amongst)) {\n\t      i++;\n\t    }\n\t  }\n\n\t  return i;\n\t}\n\t/**\n\t * Set attributes of an element\n\t *\n\t */\n\n\tfunction setAttr(el, attrs) {\n\t  for (const attr in attrs) {\n\t    el.setAttribute(attr, attrs[attr]);\n\t  }\n\t}\n\n\tvar instance_i = 0;\n\tclass TomSelect extends MicroPlugin(MicroEvent) {\n\t  constructor(input_arg, settings) {\n\t    super();\n\t    this.control_input = void 0;\n\t    this.wrapper = void 0;\n\t    this.dropdown = void 0;\n\t    this.control = void 0;\n\t    this.dropdown_content = void 0;\n\t    this.order = 0;\n\t    this.settings = void 0;\n\t    this.input = void 0;\n\t    this.tabIndex = void 0;\n\t    this.is_select_tag = void 0;\n\t    this.rtl = void 0;\n\t    this.inputId = void 0;\n\t    this._destroy = void 0;\n\t    this.sifter = void 0;\n\t    this.tab_key = false;\n\t    this.isOpen = false;\n\t    this.isDisabled = false;\n\t    this.isRequired = void 0;\n\t    this.isInvalid = false;\n\t    this.isLocked = false;\n\t    this.isFocused = false;\n\t    this.isInputHidden = false;\n\t    this.isSetup = false;\n\t    this.ignoreFocus = false;\n\t    this.hasOptions = false;\n\t    this.currentResults = null;\n\t    this.lastValue = '';\n\t    this.caretPos = 0;\n\t    this.loading = 0;\n\t    this.loadedSearches = {};\n\t    this.activeOption = null;\n\t    this.activeItems = [];\n\t    this.optgroups = {};\n\t    this.options = {};\n\t    this.userOptions = {};\n\t    this.items = [];\n\t    this.renderCache = {\n\t      'item': {},\n\t      'option': {}\n\t    };\n\t    instance_i++;\n\t    var dir;\n\t    var input = getDom(input_arg);\n\n\t    if (input.tomselect) {\n\t      throw new Error('Tom Select already initialized on this element');\n\t    }\n\n\t    input.tomselect = this; // detect rtl environment\n\n\t    var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t    dir = computedStyle.getPropertyValue('direction'); // setup default state\n\n\t    this.settings = getSettings(input, settings);\n\t    this.input = input;\n\t    this.tabIndex = input.tabIndex || 0;\n\t    this.is_select_tag = input.tagName.toLowerCase() === 'select';\n\t    this.rtl = /rtl/i.test(dir);\n\t    this.inputId = getId(input, 'tomselect-' + instance_i);\n\t    this.isRequired = input.required; // search system\n\n\t    this.sifter = new Sifter(this.options, {\n\t      diacritics: this.settings.diacritics\n\t    });\n\t    this.setupOptions(this.settings.options, this.settings.optgroups);\n\t    delete this.settings.optgroups;\n\t    delete this.settings.options; // option-dependent defaults\n\n\t    this.settings.mode = this.settings.mode || (this.settings.maxItems === 1 ? 'single' : 'multi');\n\n\t    if (typeof this.settings.hideSelected !== 'boolean') {\n\t      this.settings.hideSelected = this.settings.mode === 'multi';\n\t    }\n\n\t    if (typeof this.settings.hidePlaceholder !== 'boolean') {\n\t      this.settings.hidePlaceholder = this.settings.mode !== 'multi';\n\t    } // set up createFilter callback\n\n\n\t    var filter = this.settings.createFilter;\n\n\t    if (typeof filter !== 'function') {\n\t      if (typeof filter === 'string') {\n\t        filter = new RegExp(filter);\n\t      }\n\n\t      if (filter instanceof RegExp) {\n\t        this.settings.createFilter = input => filter.test(input);\n\t      } else {\n\t        this.settings.createFilter = () => true;\n\t      }\n\t    }\n\n\t    this.initializePlugins(this.settings.plugins);\n\t    this.setupCallbacks();\n\t    this.setupTemplates();\n\t    this.setup();\n\t  } // methods\n\t  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\t  /**\n\t   * Creates all elements and sets up event bindings.\n\t   *\n\t   */\n\n\n\t  setup() {\n\t    var self = this;\n\t    var settings = self.settings;\n\t    var wrapper;\n\t    var control;\n\t    var control_input;\n\t    var dropdown;\n\t    var dropdown_content;\n\t    var inputMode;\n\t    var classes;\n\t    var classes_plugins;\n\t    var input = self.input;\n\t    var control_id;\n\t    const passive_event = {\n\t      passive: true\n\t    };\n\t    const listboxId = self.inputId + '-ts-dropdown';\n\t    inputMode = self.settings.mode;\n\t    classes = input.getAttribute('class') || '';\n\t    wrapper = getDom('<div>');\n\t    addClasses(wrapper, settings.wrapperClass, classes, inputMode);\n\t    control = getDom('<div class=\"items\">');\n\t    addClasses(control, settings.inputClass);\n\t    wrapper.append(control);\n\t    dropdown = self.render('dropdown');\n\t    addClasses(dropdown, settings.dropdownClass, inputMode);\n\t    dropdown_content = getDom(`<div role=\"listbox\" id=\"${listboxId}\" tabindex=\"-1\">`);\n\t    addClasses(dropdown_content, settings.dropdownContentClass);\n\t    dropdown.append(dropdown_content);\n\t    getDom(settings.dropdownParent || wrapper).appendChild(dropdown);\n\n\t    if (settings.controlInput) {\n\t      control_input = getDom(settings.controlInput);\n\t    } else {\n\t      control_input = getDom('<input type=\"text\" autocomplete=\"off\" size=\"1\" />'); // set attributes\n\n\t      var attrs = ['autocorrect', 'autocapitalize', 'autocomplete'];\n\n\t      for (const attr of attrs) {\n\t        if (input.getAttribute(attr)) {\n\t          setAttr(control_input, {\n\t            [attr]: input.getAttribute(attr)\n\t          });\n\t        }\n\t      }\n\t    }\n\n\t    if (!settings.controlInput) {\n\t      control_input.tabIndex = input.disabled ? -1 : self.tabIndex;\n\t      control.appendChild(control_input);\n\t    }\n\n\t    setAttr(control_input, {\n\t      role: 'combobox',\n\t      haspopup: 'listbox',\n\t      'aria-expanded': 'false',\n\t      'aria-controls': listboxId\n\t    });\n\t    control_id = getId(control_input, self.inputId + '-tomselected');\n\t    let query = \"label[for='\" + escapeQuery(self.inputId) + \"']\";\n\t    let label = document.querySelector(query);\n\n\t    if (label) {\n\t      setAttr(label, {\n\t        for: control_id\n\t      });\n\t      let label_id = getId(label, self.inputId + '-ts-label');\n\t      setAttr(dropdown_content, {\n\t        'aria-labelledby': label_id\n\t      });\n\t    }\n\n\t    if (self.settings.copyClassesToDropdown) {\n\t      addClasses(dropdown, classes);\n\t    }\n\n\t    wrapper.style.width = input.style.width;\n\n\t    if (self.plugins.names.length) {\n\t      classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t      addClasses([wrapper, dropdown], classes_plugins);\n\t    }\n\n\t    if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {\n\t      setAttr(input, {\n\t        multiple: 'multiple'\n\t      });\n\t    }\n\n\t    if (self.settings.placeholder) {\n\t      setAttr(control_input, {\n\t        placeholder: settings.placeholder\n\t      });\n\t    } // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\n\n\t    if (!self.settings.splitOn && self.settings.delimiter) {\n\t      self.settings.splitOn = new RegExp('\\\\s*' + escape_regex(self.settings.delimiter) + '+\\\\s*');\n\t    } // debounce user defined load() if loadThrottle > 0\n\t    // after initializePlugins() so plugins can create/modify user defined loaders\n\n\n\t    if (this.settings.load && this.settings.loadThrottle) {\n\t      this.settings.load = loadDebounce(this.settings.load, this.settings.loadThrottle);\n\t    }\n\n\t    self.control = control;\n\t    self.control_input = control_input;\n\t    self.wrapper = wrapper;\n\t    self.dropdown = dropdown;\n\t    self.dropdown_content = dropdown_content;\n\t    self.control_input.type = input.type; // clicking on an option should select it\n\n\t    addEvent(dropdown, 'click', evt => {\n\t      const option = parentMatch(evt.target, '[data-selectable]');\n\n\t      if (option) {\n\t        self.onOptionSelect(evt, option);\n\t      }\n\t    });\n\t    addEvent(control, 'click', evt => {\n\t      var target_match = parentMatch(evt.target, '.' + self.settings.itemClass, control);\n\n\t      if (target_match && self.onItemSelect(evt, target_match)) {\n\t        return;\n\t      } // retain focus (see control_input mousedown)\n\n\n\t      if (control_input.value != '') {\n\t        return;\n\t      }\n\n\t      self.onClick(evt);\n\t    }); // retain focus by preventing native handling. if the\n\t    // event target is the input it should not be modified.\n\t    // otherwise, text selection within the input won't work.\n\n\t    addEvent(control_input, 'mousedown', e => {\n\t      if (control_input.value !== '') {\n\t        e.stopPropagation();\n\t      }\n\t    });\n\t    addEvent(control_input, 'keydown', e => self.onKeyDown(e));\n\t    addEvent(control_input, 'keyup', e => self.onKeyUp(e));\n\t    addEvent(control_input, 'keypress', e => self.onKeyPress(e));\n\t    addEvent(control_input, 'resize', () => self.positionDropdown(), passive_event);\n\t    addEvent(control_input, 'blur', e => self.onBlur(e));\n\t    addEvent(control_input, 'focus', e => self.onFocus(e));\n\t    addEvent(control_input, 'paste', e => self.onPaste(e));\n\n\t    const doc_mousedown = e => {\n\t      // blur if target is outside of this instance\n\t      // dropdown is not always inside wrapper\n\t      if (!wrapper.contains(e.target) && !dropdown.contains(e.target)) {\n\t        if (self.isFocused) {\n\t          self.blur();\n\t        }\n\n\t        self.inputState();\n\t        return;\n\t      } // clicking anywhere in the control should not blur the control_input & close the dropdown\n\n\n\t      preventDefault(e, true);\n\t    };\n\n\t    var win_scroll = () => {\n\t      if (self.isOpen) {\n\t        self.positionDropdown();\n\t      }\n\t    };\n\n\t    addEvent(document, 'mousedown', doc_mousedown);\n\t    addEvent(window, 'sroll', win_scroll, passive_event);\n\t    addEvent(window, 'resize', win_scroll, passive_event);\n\n\t    self._destroy = () => {\n\t      document.removeEventListener('mousedown', doc_mousedown);\n\t      window.removeEventListener('sroll', win_scroll);\n\t      window.removeEventListener('resize', win_scroll);\n\t    }; // store original html and tab index so that they can be\n\t    // restored when the destroy() method is called.\n\n\n\t    this.revertSettings = {\n\t      innerHTML: input.innerHTML,\n\t      tabIndex: input.tabIndex\n\t    };\n\t    input.tabIndex = -1;\n\t    setAttr(input, {\n\t      hidden: 'hidden'\n\t    });\n\t    input.insertAdjacentElement('afterend', self.wrapper);\n\t    self.setValue(settings.items);\n\t    delete settings.items;\n\t    addEvent(input, 'invalid', e => {\n\t      preventDefault(e);\n\n\t      if (!self.isInvalid) {\n\t        self.isInvalid = true;\n\t        self.refreshState();\n\t      }\n\t    });\n\t    self.updateOriginalInput();\n\t    self.refreshItems();\n\t    self.refreshState();\n\t    self.inputState();\n\t    self.isSetup = true;\n\n\t    if (input.disabled) {\n\t      self.disable();\n\t    }\n\n\t    self.on('change', this.onChange);\n\t    addClasses(input, 'tomselected');\n\t    self.trigger('initialize'); // preload options\n\n\t    if (settings.preload === true) {\n\t      self.load('');\n\t    }\n\t  }\n\t  /**\n\t   * Register options and optgroups\n\t   *\n\t   */\n\n\n\t  setupOptions(options = [], optgroups = []) {\n\t    // build options table\n\t    for (const option of options) {\n\t      this.registerOption(option);\n\t    } // build optgroup table\n\n\n\t    for (const optgroup of optgroups) {\n\t      this.registerOptionGroup(optgroup);\n\t    }\n\t  }\n\t  /**\n\t   * Sets up default rendering functions.\n\t   */\n\n\n\t  setupTemplates() {\n\t    var self = this;\n\t    var field_label = self.settings.labelField;\n\t    var field_optgroup = self.settings.optgroupLabelField;\n\t    var templates = {\n\t      'optgroup': (data, escape) => {\n\t        let optgroup = document.createElement('div');\n\t        optgroup.className = 'optgroup';\n\t        optgroup.appendChild(data.options);\n\t        return optgroup;\n\t      },\n\t      'optgroup_header': (data, escape) => {\n\t        return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t      },\n\t      'option': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'item': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'option_create': (data, escape) => {\n\t        return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t      },\n\t      'no_results': (data, escape) => {\n\t        return '<div class=\"no-results\">No results found</div>';\n\t      },\n\t      'loading': (data, escape) => {\n\t        return '<div class=\"spinner\"></div>';\n\t      },\n\t      'not_loading': () => {},\n\t      'dropdown': () => {\n\t        return '<div></div>';\n\t      }\n\t    };\n\t    self.settings.render = Object.assign({}, templates, self.settings.render);\n\t  }\n\t  /**\n\t   * Maps fired events to callbacks provided\n\t   * in the settings used when creating the control.\n\t   */\n\n\n\t  setupCallbacks() {\n\t    var key, fn;\n\t    var callbacks = {\n\t      'initialize': 'onInitialize',\n\t      'change': 'onChange',\n\t      'item_add': 'onItemAdd',\n\t      'item_remove': 'onItemRemove',\n\t      'clear': 'onClear',\n\t      'option_add': 'onOptionAdd',\n\t      'option_remove': 'onOptionRemove',\n\t      'option_clear': 'onOptionClear',\n\t      'optgroup_add': 'onOptionGroupAdd',\n\t      'optgroup_remove': 'onOptionGroupRemove',\n\t      'optgroup_clear': 'onOptionGroupClear',\n\t      'dropdown_open': 'onDropdownOpen',\n\t      'dropdown_close': 'onDropdownClose',\n\t      'type': 'onType',\n\t      'load': 'onLoad',\n\t      'focus': 'onFocus',\n\t      'blur': 'onBlur'\n\t    };\n\n\t    for (key in callbacks) {\n\t      fn = this.settings[callbacks[key]];\n\t      if (fn) this.on(key, fn);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered when the main control element\n\t   * has a click event.\n\t   *\n\t   */\n\n\n\t  onClick(e) {\n\t    var self = this;\n\n\t    if (self.activeItems.length > 0) {\n\t      self.clearActiveItems();\n\t      self.focus();\n\t      return;\n\t    }\n\n\t    if (self.isFocused && self.isOpen) {\n\t      self.blur();\n\t    } else {\n\t      self.focus();\n\t    }\n\t  }\n\t  /**\n\t   * @deprecated v1.7\n\t   *\n\t   */\n\n\n\t  onMouseDown(e) {}\n\t  /**\n\t   * Triggered when the value of the control has been changed.\n\t   * This should propagate the event to the original DOM\n\t   * input / select element.\n\t   */\n\n\n\t  onChange() {\n\t    triggerEvent(this.input, 'input');\n\t    triggerEvent(this.input, 'change');\n\t  }\n\t  /**\n\t   * Triggered on <input> paste.\n\t   *\n\t   */\n\n\n\t  onPaste(e) {\n\t    var self = this;\n\n\t    if (self.isFull() || self.isInputHidden || self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    } // If a regex or string is included, this will split the pasted\n\t    // input and create Items for each separate value\n\n\n\t    if (self.settings.splitOn) {\n\t      // Wait for pasted text to be recognized in value\n\t      setTimeout(() => {\n\t        var pastedText = self.inputValue();\n\n\t        if (!pastedText.match(self.settings.splitOn)) {\n\t          return;\n\t        }\n\n\t        var splitInput = pastedText.trim().split(self.settings.splitOn);\n\n\t        for (const piece of splitInput) {\n\t          self.createItem(piece);\n\t        }\n\t      }, 0);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> keypress.\n\t   *\n\t   */\n\n\n\t  onKeyPress(e) {\n\t    var self = this;\n\n\t    if (self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    var character = String.fromCharCode(e.keyCode || e.which);\n\n\t    if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t      self.createItem();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> keydown.\n\t   *\n\t   */\n\n\n\t  onKeyDown(e) {\n\t    var self = this;\n\n\t    if (self.isLocked) {\n\t      if (e.keyCode !== KEY_TAB) {\n\t        preventDefault(e);\n\t      }\n\n\t      return;\n\t    }\n\n\t    switch (e.keyCode) {\n\t      // ctrl+A: select all\n\t      case KEY_A:\n\t        if (isKeyDown(KEY_SHORTCUT, e)) {\n\t          self.selectAll();\n\t          return;\n\t        }\n\n\t        break;\n\t      // esc: close dropdown\n\n\t      case KEY_ESC:\n\t        if (self.isOpen) {\n\t          preventDefault(e, true);\n\t          self.close();\n\t        }\n\n\t        self.clearActiveItems();\n\t        return;\n\t      // down: open dropdown or move selection down\n\n\t      case KEY_DOWN:\n\t        if (!self.isOpen && self.hasOptions) {\n\t          self.open();\n\t        } else if (self.activeOption) {\n\t          let next = self.getAdjacent(self.activeOption, 1);\n\t          if (next) self.setActiveOption(next);\n\t        }\n\n\t        preventDefault(e);\n\t        return;\n\t      // up: move selection up\n\n\t      case KEY_UP:\n\t        if (self.activeOption) {\n\t          let prev = self.getAdjacent(self.activeOption, -1);\n\t          if (prev) self.setActiveOption(prev);\n\t        }\n\n\t        preventDefault(e);\n\t        return;\n\t      // doc_src select active option\n\n\t      case KEY_RETURN:\n\t        if (self.isOpen && self.activeOption) {\n\t          self.onOptionSelect(e, self.activeOption);\n\t          preventDefault(e); // if the option_create=null, the dropdown might be closed\n\t        } else if (self.settings.create && self.createItem()) {\n\t          preventDefault(e);\n\t        }\n\n\t        return;\n\t      // left: modifiy item selection to the left\n\n\t      case KEY_LEFT:\n\t        self.advanceSelection(-1, e);\n\t        return;\n\t      // right: modifiy item selection to the right\n\n\t      case KEY_RIGHT:\n\t        self.advanceSelection(1, e);\n\t        return;\n\t      // tab: select active option and/or create item\n\n\t      case KEY_TAB:\n\t        if (self.settings.selectOnTab) {\n\t          if (self.isOpen && self.activeOption) {\n\t            self.tab_key = true;\n\t            self.onOptionSelect(e, self.activeOption); // prevent default [tab] behaviour of jump to the next field\n\t            // if select isFull, then the dropdown won't be open and [tab] will work normally\n\n\t            preventDefault(e);\n\t            self.tab_key = false;\n\t          }\n\n\t          if (self.settings.create && self.createItem()) {\n\t            preventDefault(e);\n\t          }\n\t        }\n\n\t        return;\n\t      // delete|backspace: delete items\n\n\t      case KEY_BACKSPACE:\n\t      case KEY_DELETE:\n\t        self.deleteSelection(e);\n\t        return;\n\t    } // don't enter text in the control_input when active items are selected\n\n\n\t    if (self.isInputHidden && !isKeyDown(KEY_SHORTCUT, e)) {\n\t      preventDefault(e);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> keyup.\n\t   *\n\t   */\n\n\n\t  onKeyUp(e) {\n\t    var self = this;\n\n\t    if (self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    var value = self.inputValue();\n\n\t    if (self.lastValue !== value) {\n\t      self.lastValue = value;\n\n\t      if (self.settings.shouldLoad.call(self, value)) {\n\t        self.load(value);\n\t      }\n\n\t      self.refreshOptions();\n\t      self.trigger('type', value);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> focus.\n\t   *\n\t   */\n\n\n\t  onFocus(e) {\n\t    var self = this;\n\t    var wasFocused = self.isFocused;\n\n\t    if (self.isDisabled) {\n\t      self.blur();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    if (self.ignoreFocus) return;\n\t    self.isFocused = true;\n\t    if (self.settings.preload === 'focus') self.load('');\n\t    if (!wasFocused) self.trigger('focus');\n\n\t    if (!self.activeItems.length) {\n\t      self.showInput();\n\t      self.setActiveItem();\n\t      self.refreshOptions(!!self.settings.openOnFocus);\n\t    }\n\n\t    self.refreshState();\n\t  }\n\t  /**\n\t   * Triggered on <input> blur.\n\t   *\n\t   */\n\n\n\t  onBlur(e) {\n\t    var self = this;\n\t    if (!self.isFocused) return;\n\t    self.isFocused = false;\n\t    self.ignoreFocus = false;\n\n\t    var deactivate = () => {\n\t      self.close();\n\t      self.setActiveItem();\n\t      self.setCaret(self.items.length);\n\t      self.trigger('blur');\n\t    };\n\n\t    if (self.settings.create && self.settings.createOnBlur) {\n\t      self.createItem(null, false, deactivate);\n\t    } else {\n\t      deactivate();\n\t    }\n\t  }\n\t  /**\n\t   * Triggered when the user clicks on an option\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\n\n\t  onOptionSelect(evt, option) {\n\t    var value,\n\t        self = this;\n\n\t    if (!option) {\n\t      return;\n\t    } // should not be possible to trigger a option under a disabled optgroup\n\n\n\t    if (option.parentElement && option.parentElement.matches('[data-disabled]')) {\n\t      return;\n\t    }\n\n\t    if (option.classList.contains('create')) {\n\t      self.createItem(null, true, () => {\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\t      });\n\t    } else {\n\t      value = option.dataset.value;\n\n\t      if (typeof value !== 'undefined') {\n\t        self.lastQuery = null;\n\t        self.addItem(value);\n\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        } else if (!self.settings.hideSelected && evt.type && /mouse/.test(evt.type)) {\n\t          self.setActiveOption(self.getOption(value));\n\t        }\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Triggered when the user clicks on an item\n\t   * that has been selected.\n\t   *\n\t   */\n\n\n\t  onItemSelect(evt, item) {\n\t    var self = this;\n\n\t    if (!self.isLocked && self.settings.mode === 'multi') {\n\t      preventDefault(evt);\n\t      self.setActiveItem(item, evt);\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Determines whether or not to invoke\n\t   * the user-provided option provider / loader\n\t   *\n\t   * Note, there is a subtle difference between\n\t   * this.canLoad() and this.settings.shouldLoad();\n\t   *\n\t   *\t- settings.shouldLoad() is a user-input validator.\n\t   *\tWhen false is returned, the not_loading template\n\t   *\twill be added to the dropdown\n\t   *\n\t   *\t- canLoad() is lower level validator that checks\n\t   * \tthe Tom Select instance. There is no inherent user\n\t   *\tfeedback when canLoad returns false\n\t   *\n\t   */\n\n\n\t  canLoad(value) {\n\t    if (!this.settings.load) return false;\n\t    if (this.loadedSearches.hasOwnProperty(value)) return false;\n\t    return true;\n\t  }\n\t  /**\n\t   * Invokes the user-provided option provider / loader.\n\t   *\n\t   */\n\n\n\t  load(value) {\n\t    const self = this;\n\t    if (!self.canLoad(value)) return;\n\t    addClasses(self.wrapper, self.settings.loadingClass);\n\t    self.loading++;\n\t    const callback = self.loadCallback.bind(self, value);\n\t    self.settings.load.call(self, value, callback);\n\t  }\n\t  /**\n\t   * Invoked by the user-provided option provider\n\t   *\n\t   */\n\n\n\t  loadCallback(value, options, optgroups) {\n\t    const self = this;\n\t    self.loading = Math.max(self.loading - 1, 0);\n\t    self.lastQuery = null;\n\t    self.clearActiveOption(); // when new results load, focus should be on first option\n\n\t    self.setupOptions(options, optgroups);\n\t    self.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t    if (!self.loading) {\n\t      removeClasses(self.wrapper, self.settings.loadingClass);\n\t    }\n\n\t    self.trigger('load', options, optgroups);\n\t  }\n\t  /**\n\t   * Sets the input field of the control to the specified value.\n\t   *\n\t   */\n\n\n\t  setTextboxValue(value = '') {\n\t    var input = this.control_input;\n\t    var changed = input.value !== value;\n\n\t    if (changed) {\n\t      input.value = value;\n\t      triggerEvent(input, 'update');\n\t      this.lastValue = value;\n\t    }\n\t  }\n\t  /**\n\t   * Returns the value of the control. If multiple items\n\t   * can be selected (e.g. <select multiple>), this returns\n\t   * an array. If only one item can be selected, this\n\t   * returns a string.\n\t   *\n\t   */\n\n\n\t  getValue() {\n\t    if (this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t      return this.items;\n\t    }\n\n\t    return this.items.join(this.settings.delimiter);\n\t  }\n\t  /**\n\t   * Resets the selected items to the given value.\n\t   *\n\t   */\n\n\n\t  setValue(value, silent) {\n\t    var events = silent ? [] : ['change'];\n\t    debounce_events(this, events, () => {\n\t      this.clear(silent);\n\t      this.addItems(value, silent);\n\t    });\n\t  }\n\t  /**\n\t   * Resets the number of max items to the given value\n\t   *\n\t   */\n\n\n\t  setMaxItems(value) {\n\t    if (value === 0) value = null; //reset to unlimited items.\n\n\t    this.settings.maxItems = value;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Sets the selected item.\n\t   *\n\t   */\n\n\n\t  setActiveItem(item, e) {\n\t    var self = this;\n\t    var eventName;\n\t    var i, begin, end, swap;\n\t    var last;\n\t    if (self.settings.mode === 'single') return; // clear the active selection\n\n\t    if (!item) {\n\t      self.clearActiveItems();\n\n\t      if (self.isFocused) {\n\t        self.showInput();\n\t      }\n\n\t      return;\n\t    } // modify selection\n\n\n\t    eventName = e && e.type.toLowerCase();\n\n\t    if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {\n\t      last = self.getLastActive();\n\t      begin = Array.prototype.indexOf.call(self.control.children, last);\n\t      end = Array.prototype.indexOf.call(self.control.children, item);\n\n\t      if (begin > end) {\n\t        swap = begin;\n\t        begin = end;\n\t        end = swap;\n\t      }\n\n\t      for (i = begin; i <= end; i++) {\n\t        item = self.control.children[i];\n\n\t        if (self.activeItems.indexOf(item) === -1) {\n\t          self.setActiveItemClass(item);\n\t        }\n\t      }\n\n\t      preventDefault(e);\n\t    } else if (eventName === 'click' && isKeyDown(KEY_SHORTCUT, e) || eventName === 'keydown' && isKeyDown('shiftKey', e)) {\n\t      if (item.classList.contains('active')) {\n\t        self.removeActiveItem(item);\n\t      } else {\n\t        self.setActiveItemClass(item);\n\t      }\n\t    } else {\n\t      self.clearActiveItems();\n\t      self.setActiveItemClass(item);\n\t    } // ensure control has focus\n\n\n\t    self.hideInput();\n\n\t    if (!self.isFocused) {\n\t      self.focus();\n\t    }\n\t  }\n\t  /**\n\t   * Set the active and last-active classes\n\t   *\n\t   */\n\n\n\t  setActiveItemClass(item) {\n\t    var last_active = this.control.querySelector('.last-active');\n\t    if (last_active) removeClasses(last_active, 'last-active');\n\t    addClasses(item, 'active last-active');\n\n\t    if (this.activeItems.indexOf(item) == -1) {\n\t      this.activeItems.push(item);\n\t    }\n\t  }\n\t  /**\n\t   * Remove active item\n\t   *\n\t   */\n\n\n\t  removeActiveItem(item) {\n\t    var idx = this.activeItems.indexOf(item);\n\t    this.activeItems.splice(idx, 1);\n\t    removeClasses(item, 'active');\n\t  }\n\t  /**\n\t   * Clears all the active items\n\t   *\n\t   */\n\n\n\t  clearActiveItems() {\n\t    removeClasses(this.activeItems, 'active');\n\t    this.activeItems = [];\n\t  }\n\t  /**\n\t   * Sets the selected item in the dropdown menu\n\t   * of available options.\n\t   *\n\t   */\n\n\n\t  setActiveOption(option) {\n\t    var height_menu, height_item, y;\n\n\t    if (option === this.activeOption) {\n\t      return;\n\t    }\n\n\t    this.clearActiveOption();\n\t    if (!option) return;\n\t    this.activeOption = option;\n\t    setAttr(this.control_input, {\n\t      'aria-activedescendant': option.getAttribute('id')\n\t    });\n\t    setAttr(option, {\n\t      'aria-selected': 'true'\n\t    });\n\t    addClasses(option, 'active');\n\t    height_menu = this.dropdown_content.clientHeight;\n\t    let scrollTop = this.dropdown_content.scrollTop || 0;\n\t    height_item = this.activeOption.offsetHeight;\n\t    y = this.activeOption.getBoundingClientRect().top - this.dropdown_content.getBoundingClientRect().top + scrollTop;\n\n\t    if (y + height_item > height_menu + scrollTop) {\n\t      this.dropdown_content.scrollTop = y - height_menu + height_item;\n\t    } else if (y < scrollTop) {\n\t      this.dropdown_content.scrollTop = y;\n\t    }\n\t  }\n\t  /**\n\t   * Clears the active option\n\t   *\n\t   */\n\n\n\t  clearActiveOption() {\n\t    if (this.activeOption) {\n\t      removeClasses(this.activeOption, 'active');\n\t      this.activeOption.removeAttribute('aria-selected');\n\t    }\n\n\t    this.activeOption = null;\n\t    this.control_input.removeAttribute('aria-activedescendant');\n\t  }\n\t  /**\n\t   * Selects all items (CTRL + A).\n\t   */\n\n\n\t  selectAll() {\n\t    if (this.settings.mode === 'single') return;\n\t    this.activeItems = this.controlChildren();\n\n\t    if (this.activeItems.length) {\n\t      addClasses(this.activeItems, 'active');\n\t      this.hideInput();\n\t      this.close();\n\t    }\n\n\t    this.focus();\n\t  }\n\t  /**\n\t   * Determines if the control_input should be in a hidden or visible state\n\t   *\n\t   */\n\n\n\t  inputState() {\n\t    var self = this;\n\t    if (self.settings.controlInput) return;\n\n\t    if (self.activeItems.length > 0 || !self.isFocused && this.settings.hidePlaceholder && self.items.length > 0) {\n\t      self.setTextboxValue();\n\t      self.isInputHidden = true;\n\t      addClasses(self.wrapper, 'input-hidden');\n\t    } else {\n\t      self.isInputHidden = false;\n\t      removeClasses(self.wrapper, 'input-hidden');\n\t    }\n\t  }\n\t  /**\n\t   * Hides the input element out of view, while\n\t   * retaining its focus.\n\t   * @deprecated 1.3\n\t   */\n\n\n\t  hideInput() {\n\t    this.inputState();\n\t  }\n\t  /**\n\t   * Restores input visibility.\n\t   * @deprecated 1.3\n\t   */\n\n\n\t  showInput() {\n\t    this.inputState();\n\t  }\n\t  /**\n\t   * Get the input value\n\t   */\n\n\n\t  inputValue() {\n\t    return this.control_input.value.trim();\n\t  }\n\t  /**\n\t   * Gives the control focus.\n\t   */\n\n\n\t  focus() {\n\t    var self = this;\n\t    if (self.isDisabled) return;\n\t    self.ignoreFocus = true;\n\t    self.control_input.focus();\n\t    setTimeout(() => {\n\t      self.ignoreFocus = false;\n\t      self.onFocus();\n\t    }, 0);\n\t  }\n\t  /**\n\t   * Forces the control out of focus.\n\t   *\n\t   */\n\n\n\t  blur() {\n\t    this.control_input.blur();\n\t    this.onBlur(null);\n\t  }\n\t  /**\n\t   * Returns a function that scores an object\n\t   * to show how good of a match it is to the\n\t   * provided query.\n\t   *\n\t   * @return {function}\n\t   */\n\n\n\t  getScoreFunction(query) {\n\t    return this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t  }\n\t  /**\n\t   * Returns search options for sifter (the system\n\t   * for scoring and sorting results).\n\t   *\n\t   * @see https://github.com/orchidjs/sifter.js\n\t   * @return {object}\n\t   */\n\n\n\t  getSearchOptions() {\n\t    var settings = this.settings;\n\t    var sort = settings.sortField;\n\n\t    if (typeof settings.sortField === 'string') {\n\t      sort = [{\n\t        field: settings.sortField\n\t      }];\n\t    }\n\n\t    return {\n\t      fields: settings.searchField,\n\t      conjunction: settings.searchConjunction,\n\t      sort: sort,\n\t      nesting: settings.nesting\n\t    };\n\t  }\n\t  /**\n\t   * Searches through available options and returns\n\t   * a sorted array of matches.\n\t   *\n\t   */\n\n\n\t  search(query) {\n\t    var i, result, calculateScore;\n\t    var self = this;\n\t    var settings = self.settings;\n\t    var options = this.getSearchOptions(); // validate user-provided result scoring function\n\n\t    if (settings.score) {\n\t      calculateScore = self.settings.score.call(self, query);\n\n\t      if (typeof calculateScore !== 'function') {\n\t        throw new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t      }\n\t    } // perform search\n\n\n\t    if (query !== self.lastQuery) {\n\t      self.lastQuery = query;\n\t      result = self.sifter.search(query, Object.assign(options, {\n\t        score: calculateScore\n\t      }));\n\t      self.currentResults = result;\n\t    } else {\n\t      result = Object.assign({}, self.currentResults);\n\t    } // filter out selected items\n\n\n\t    if (settings.hideSelected) {\n\t      for (i = result.items.length - 1; i >= 0; i--) {\n\t        if (self.items.indexOf(hash_key(result.items[i].id)) !== -1) {\n\t          result.items.splice(i, 1);\n\t        }\n\t      }\n\t    }\n\n\t    return result;\n\t  }\n\t  /**\n\t   * Refreshes the list of available options shown\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\n\n\t  refreshOptions(triggerDropdown = true) {\n\t    var i, j, k, n, groups_order, optgroup, optgroups, html, has_create_option;\n\t    var active, create;\n\t    var groups;\n\t    var self = this;\n\t    var query = self.inputValue();\n\t    var results = self.search(query);\n\t    var active_before_hash = self.activeOption && hash_key(self.activeOption.dataset.value);\n\t    var show_dropdown = self.settings.shouldOpen || false; // build markup\n\n\t    n = results.items.length;\n\n\t    if (typeof self.settings.maxOptions === 'number') {\n\t      n = Math.min(n, self.settings.maxOptions);\n\t    }\n\n\t    if (n > 0) {\n\t      show_dropdown = true;\n\t    } // render and group available options individually\n\n\n\t    groups = {};\n\t    groups_order = [];\n\n\t    for (i = 0; i < n; i++) {\n\t      // get option dom element, don't re-render if we\n\t      let option = self.options[results.items[i].id];\n\t      let opt_value = hash_key(option[self.settings.valueField]);\n\t      let option_el = self.getOption(opt_value);\n\n\t      if (!option_el) {\n\t        option_el = self.render('option', option);\n\t      } // toggle 'selected' class\n\n\n\t      if (!self.settings.hideSelected) {\n\t        option_el.classList.toggle('selected', self.items.includes(opt_value));\n\t      }\n\n\t      optgroup = option[self.settings.optgroupField] || '';\n\t      optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t      for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t        optgroup = optgroups[j];\n\n\t        if (!self.optgroups.hasOwnProperty(optgroup)) {\n\t          optgroup = '';\n\t        }\n\n\t        if (!groups.hasOwnProperty(optgroup)) {\n\t          groups[optgroup] = document.createDocumentFragment();\n\t          groups_order.push(optgroup);\n\t        } // a child could only have one parent, so if you have more parents clone the child\n\n\n\t        if (j > 0) {\n\t          option_el = option_el.cloneNode(true);\n\t          removeClasses(option_el, 'active');\n\t          option_el.removeAttribute('aria-selected');\n\t        }\n\n\t        groups[optgroup].appendChild(option_el);\n\t      }\n\t    } // sort optgroups\n\n\n\t    if (this.settings.lockOptgroupOrder) {\n\t      groups_order.sort((a, b) => {\n\t        var a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t        var b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t        return a_order - b_order;\n\t      });\n\t    } // render optgroup headers & join groups\n\n\n\t    html = document.createDocumentFragment();\n\n\t    for (optgroup of groups_order) {\n\t      if (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\t        let group_options = document.createDocumentFragment();\n\t        group_options.append(self.render('optgroup_header', self.optgroups[optgroup]));\n\t        group_options.append(groups[optgroup]);\n\t        let group_html = self.render('optgroup', {\n\t          group: self.optgroups[optgroup],\n\t          options: group_options\n\t        });\n\t        html.append(group_html);\n\t      } else {\n\t        html.append(groups[optgroup]);\n\t      }\n\t    }\n\n\t    self.dropdown_content.innerHTML = '';\n\t    self.dropdown_content.append(html); // highlight matching terms inline\n\n\t    if (self.settings.highlight) {\n\t      removeHighlight(self.dropdown_content);\n\n\t      if (results.query.length && results.tokens.length) {\n\t        for (const tok of results.tokens) {\n\t          highlight(self.dropdown_content, tok.regex);\n\t        }\n\t      }\n\t    } // helper method for adding templates to dropdown\n\n\n\t    var add_template = template => {\n\t      let content = self.render(template, {\n\t        input: query\n\t      });\n\n\t      if (content) {\n\t        show_dropdown = true;\n\t        self.dropdown_content.insertBefore(content, self.dropdown_content.firstChild);\n\t      }\n\n\t      return content;\n\t    }; // invalid query\n\n\n\t    if (!self.settings.shouldLoad.call(self, query)) {\n\t      add_template('not_loading'); // add loading message\n\t    } else if (self.loading) {\n\t      add_template('loading'); // add no_results message\n\t    } else if (results.items.length === 0) {\n\t      add_template('no_results');\n\t    } // add create option\n\n\n\t    has_create_option = self.canCreate(query);\n\n\t    if (has_create_option) {\n\t      create = add_template('option_create');\n\t    } // activate\n\n\n\t    self.hasOptions = results.items.length > 0 || has_create_option;\n\n\t    if (show_dropdown) {\n\t      if (results.items.length > 0) {\n\t        active = active_before_hash && self.getOption(active_before_hash);\n\n\t        if (!active && self.settings.mode === 'single' && self.items.length) {\n\t          active = self.getOption(self.items[0]);\n\t        }\n\n\t        if (!active || !self.dropdown_content.contains(active)) {\n\t          let active_index = 0;\n\n\t          if (create && !self.settings.addPrecedence) {\n\t            active_index = 1;\n\t          }\n\n\t          active = self.selectable()[active_index];\n\t        }\n\t      } else {\n\t        active = create;\n\t      }\n\n\t      self.setActiveOption(active);\n\n\t      if (triggerDropdown && !self.isOpen) {\n\t        self.open();\n\t      }\n\t    } else {\n\t      self.clearActiveOption();\n\n\t      if (triggerDropdown && self.isOpen) {\n\t        self.close(false); // if create_option=null, we wan't the dropdown to close but not reset the textbox value\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Return list of selectable options\n\t   *\n\t   */\n\n\n\t  selectable() {\n\t    return this.dropdown_content.querySelectorAll('[data-selectable]');\n\t  }\n\t  /**\n\t   * Adds an available option. If it already exists,\n\t   * nothing will happen. Note: this does not refresh\n\t   * the options list dropdown (use `refreshOptions`\n\t   * for that).\n\t   *\n\t   * Usage:\n\t   *\n\t   *   this.addOption(data)\n\t   *\n\t   */\n\n\n\t  addOption(data) {\n\t    var value,\n\t        self = this;\n\n\t    if (Array.isArray(data)) {\n\t      for (const dat of data) {\n\t        self.addOption(dat);\n\t      }\n\n\t      return;\n\t    }\n\n\t    if (value = self.registerOption(data)) {\n\t      self.userOptions[value] = true;\n\t      self.lastQuery = null;\n\t      self.trigger('option_add', value, data);\n\t    }\n\t  }\n\t  /**\n\t   * Registers an option to the pool of options.\n\t   *\n\t   */\n\n\n\t  registerOption(data) {\n\t    var key = hash_key(data[this.settings.valueField]);\n\t    if (key === null || this.options.hasOwnProperty(key)) return false;\n\t    data.$order = data.$order || ++this.order;\n\t    data.$id = this.inputId + '-opt-' + data.$order;\n\t    this.options[key] = data;\n\t    return key;\n\t  }\n\t  /**\n\t   * Registers an option group to the pool of option groups.\n\t   *\n\t   * @return {boolean|string}\n\t   */\n\n\n\t  registerOptionGroup(data) {\n\t    var key = hash_key(data[this.settings.optgroupValueField]);\n\t    if (key === null) return false;\n\t    data.$order = data.$order || ++this.order;\n\t    this.optgroups[key] = data;\n\t    return key;\n\t  }\n\t  /**\n\t   * Registers a new optgroup for options\n\t   * to be bucketed into.\n\t   *\n\t   */\n\n\n\t  addOptionGroup(id, data) {\n\t    var hashed_id;\n\t    data[this.settings.optgroupValueField] = id;\n\n\t    if (hashed_id = this.registerOptionGroup(data)) {\n\t      this.trigger('optgroup_add', hashed_id, data);\n\t    }\n\t  }\n\t  /**\n\t   * Removes an existing option group.\n\t   *\n\t   */\n\n\n\t  removeOptionGroup(id) {\n\t    if (this.optgroups.hasOwnProperty(id)) {\n\t      delete this.optgroups[id];\n\t      this.clearCache();\n\t      this.trigger('optgroup_remove', id);\n\t    }\n\t  }\n\t  /**\n\t   * Clears all existing option groups.\n\t   */\n\n\n\t  clearOptionGroups() {\n\t    this.optgroups = {};\n\t    this.clearCache();\n\t    this.trigger('optgroup_clear');\n\t  }\n\t  /**\n\t   * Updates an option available for selection. If\n\t   * it is visible in the selected items or options\n\t   * dropdown, it will be re-rendered automatically.\n\t   *\n\t   */\n\n\n\t  updateOption(value, data) {\n\t    var self = this;\n\t    var item, item_new;\n\t    var value_new, index_item, cache_items, cache_options, order_old;\n\t    value = hash_key(value);\n\t    value_new = hash_key(data[self.settings.valueField]); // sanity checks\n\n\t    if (value === null) return;\n\t    if (!self.options.hasOwnProperty(value)) return;\n\t    if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t    order_old = self.options[value].$order; // update references\n\n\t    if (value_new !== value) {\n\t      delete self.options[value];\n\t      index_item = self.items.indexOf(value);\n\n\t      if (index_item !== -1) {\n\t        self.items.splice(index_item, 1, value_new);\n\t      }\n\t    }\n\n\t    data.$order = data.$order || order_old;\n\t    self.options[value_new] = data; // invalidate render cache\n\n\t    cache_items = self.renderCache['item'];\n\t    cache_options = self.renderCache['option'];\n\n\t    if (cache_items) {\n\t      delete cache_items[value];\n\t      delete cache_items[value_new];\n\t    }\n\n\t    if (cache_options) {\n\t      delete cache_options[value];\n\t      delete cache_options[value_new];\n\t    } // update the item if it's selected\n\n\n\t    if (self.items.indexOf(value_new) !== -1) {\n\t      item = self.getItem(value);\n\t      item_new = self.render('item', data);\n\t      if (item.classList.contains('active')) addClasses(item_new, 'active');\n\t      item.parentNode.insertBefore(item_new, item);\n\t      item.remove();\n\t    } // invalidate last query because we might have updated the sortField\n\n\n\t    self.lastQuery = null; // update dropdown contents\n\n\t    if (self.isOpen) {\n\t      self.refreshOptions(false);\n\t    }\n\t  }\n\t  /**\n\t   * Removes a single option.\n\t   *\n\t   */\n\n\n\t  removeOption(value, silent) {\n\t    var self = this;\n\t    value = hash_key(value);\n\t    var cache_items = self.renderCache['item'];\n\t    var cache_options = self.renderCache['option'];\n\t    if (cache_items) delete cache_items[value];\n\t    if (cache_options) delete cache_options[value];\n\t    delete self.userOptions[value];\n\t    delete self.options[value];\n\t    self.lastQuery = null;\n\t    self.trigger('option_remove', value);\n\t    self.removeItem(value, silent);\n\t  }\n\t  /**\n\t   * Clears all options.\n\t   */\n\n\n\t  clearOptions() {\n\t    this.loadedSearches = {};\n\t    this.userOptions = {};\n\t    this.clearCache();\n\t    var selected = {};\n\n\t    for (let key in this.options) {\n\t      if (this.options.hasOwnProperty(key) && this.items.indexOf(key) >= 0) {\n\t        selected[key] = this.options[key];\n\t      }\n\t    }\n\n\t    this.options = this.sifter.items = selected;\n\t    this.lastQuery = null;\n\t    this.trigger('option_clear');\n\t  }\n\t  /**\n\t   * Returns the dom element of the option\n\t   * matching the given value.\n\t   *\n\t   * @returns {object}\n\t   */\n\n\n\t  getOption(value) {\n\t    value = hash_key(value);\n\n\t    if (value) {\n\t      const option = this.dropdown_content.querySelector(`[data-selectable][data-value=\"${addSlashes(value)}\"]`);\n\n\t      if (option) {\n\t        return option;\n\t      }\n\t    }\n\n\t    if (this.renderCache['option'].hasOwnProperty(value)) {\n\t      return this.renderCache['option'][value];\n\t    }\n\t  }\n\t  /**\n\t   * Returns the dom element of the next or previous dom element of the same type\n\t   * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t   *\n\t   */\n\n\n\t  getAdjacent(option, direction, type = 'option') {\n\t    var self = this,\n\t        all;\n\n\t    if (!option) {\n\t      return;\n\t    }\n\n\t    if (type == 'item') {\n\t      all = self.controlChildren();\n\t    } else {\n\t      all = self.dropdown_content.querySelectorAll('[data-selectable]');\n\t    }\n\n\t    for (let i = 0; i < all.length; i++) {\n\t      if (all[i] != option) {\n\t        continue;\n\t      }\n\n\t      if (direction > 0) {\n\t        return all[i + 1];\n\t      }\n\n\t      return all[i - 1];\n\t    }\n\t  }\n\t  /**\n\t   * Returns the dom element of the item\n\t   * matching the given value.\n\t   *\n\t   */\n\n\n\t  getItem(value) {\n\t    value = hash_key(value);\n\n\t    if (value) {\n\t      value = addSlashes(value);\n\t      return this.control.querySelector(`[data-value=\"${value}\"]`);\n\t    }\n\t  }\n\t  /**\n\t   * \"Selects\" multiple items at once. Adds them to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  addItems(values, silent) {\n\t    var self = this;\n\t    self.buffer = document.createDocumentFragment();\n\n\t    for (const child of self.control.children) {\n\t      self.buffer.appendChild(child);\n\t    }\n\n\t    var items = Array.isArray(values) ? values : [values];\n\t    items = items.filter(x => self.items.indexOf(x) === -1);\n\n\t    for (let i = 0, n = items.length; i < n; i++) {\n\t      self.isPending = i < n - 1;\n\t      self.addItem(items[i], silent);\n\t    }\n\n\t    var control = self.control;\n\t    control.insertBefore(self.buffer, control.firstChild);\n\t    self.buffer = null;\n\t  }\n\t  /**\n\t   * \"Selects\" an item. Adds it to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  addItem(value, silent) {\n\t    var events = silent ? [] : ['change'];\n\t    debounce_events(this, events, () => {\n\t      var item;\n\t      var self = this;\n\t      var inputMode = self.settings.mode;\n\t      var wasFull;\n\t      value = hash_key(value);\n\n\t      if (self.items.indexOf(value) !== -1) {\n\t        if (inputMode === 'single') {\n\t          self.close();\n\t        }\n\n\t        if (inputMode === 'single' || !self.settings.duplicates) {\n\t          return;\n\t        }\n\t      }\n\n\t      if (!self.options.hasOwnProperty(value)) return;\n\t      if (inputMode === 'single') self.clear(silent);\n\t      if (inputMode === 'multi' && self.isFull()) return;\n\t      item = self.render('item', self.options[value]);\n\n\t      if (self.control.contains(item)) {\n\t        // duplicates\n\t        item = item.cloneNode(true);\n\t      }\n\n\t      wasFull = self.isFull();\n\t      self.items.splice(self.caretPos, 0, value);\n\t      self.insertAtCaret(item);\n\n\t      if (self.isSetup) {\n\t        let options = self.selectable(); // update menu / remove the option (if this is not one item being added as part of series)\n\n\t        if (!self.isPending) {\n\t          let option = self.getOption(value);\n\t          let next = self.getAdjacent(option, 1);\n\t          self.refreshOptions(self.isFocused && inputMode !== 'single');\n\n\t          if (next) {\n\t            self.setActiveOption(next);\n\t          }\n\t        } // hide the menu if the maximum number of items have been selected or no options are left\n\n\n\t        if (!options.length || self.isFull()) {\n\t          self.close();\n\t        } else if (!self.isPending) {\n\t          self.positionDropdown();\n\t        }\n\n\t        self.trigger('item_add', value, item);\n\n\t        if (!self.isPending) {\n\t          self.updateOriginalInput({\n\t            silent: silent\n\t          });\n\t        }\n\t      }\n\n\t      if (!self.isPending || !wasFull && self.isFull()) {\n\t        self.refreshState();\n\t      }\n\t    });\n\t  }\n\t  /**\n\t   * Removes the selected item matching\n\t   * the provided value.\n\t   *\n\t   */\n\n\n\t  removeItem(value, silent) {\n\t    var i,\n\t        idx,\n\t        self = this;\n\t    var item = self.getItem(value);\n\t    if (!item) return;\n\t    value = hash_key(item.dataset.value);\n\t    i = self.items.indexOf(value);\n\n\t    if (i !== -1) {\n\t      item.remove();\n\n\t      if (item.classList.contains('active')) {\n\t        idx = self.activeItems.indexOf(item);\n\t        self.activeItems.splice(idx, 1);\n\t        removeClasses(item, 'active');\n\t      }\n\n\t      self.items.splice(i, 1);\n\t      self.lastQuery = null;\n\n\t      if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t        self.removeOption(value, silent);\n\t      }\n\n\t      if (i < self.caretPos) {\n\t        self.setCaret(self.caretPos - 1);\n\t      }\n\n\t      self.updateOriginalInput({\n\t        silent: silent\n\t      });\n\t      self.refreshState();\n\t      self.positionDropdown();\n\t      self.trigger('item_remove', value, item);\n\t    }\n\t  }\n\t  /**\n\t   * Invokes the `create` method provided in the\n\t   * TomSelect options that should provide the data\n\t   * for the new item, given the user input.\n\t   *\n\t   * Once this completes, it will be added\n\t   * to the item list.\n\t   *\n\t   */\n\n\n\t  createItem(input, triggerDropdown = true, callback) {\n\t    var self = this;\n\t    var caret = self.caretPos;\n\t    var output;\n\t    input = input || self.inputValue();\n\t    if (typeof callback !== 'function') callback = () => {};\n\n\t    if (!self.canCreate(input)) {\n\t      callback();\n\t      return false;\n\t    }\n\n\t    self.lock();\n\t    var created = false;\n\n\t    var create = data => {\n\t      self.unlock();\n\t      if (!data || typeof data !== 'object') return callback();\n\t      var value = hash_key(data[self.settings.valueField]);\n\n\t      if (typeof value !== 'string') {\n\t        return callback();\n\t      }\n\n\t      self.setTextboxValue();\n\t      self.addOption(data);\n\t      self.setCaret(caret);\n\t      self.addItem(value);\n\t      self.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t      callback(data);\n\t      created = true;\n\t    };\n\n\t    if (typeof self.settings.create === 'function') {\n\t      output = self.settings.create.call(this, input, create);\n\t    } else {\n\t      output = {\n\t        [self.settings.labelField]: input,\n\t        [self.settings.valueField]: input\n\t      };\n\t    }\n\n\t    if (!created) {\n\t      create(output);\n\t    }\n\n\t    return true;\n\t  }\n\t  /**\n\t   * Re-renders the selected item lists.\n\t   */\n\n\n\t  refreshItems() {\n\t    var self = this;\n\t    self.lastQuery = null;\n\n\t    if (self.isSetup) {\n\t      self.addItems(self.items);\n\t    }\n\n\t    self.updateOriginalInput();\n\t    self.refreshState();\n\t  }\n\t  /**\n\t   * Updates all state-dependent attributes\n\t   * and CSS classes.\n\t   */\n\n\n\t  refreshState() {\n\t    var self = this;\n\t    self.refreshValidityState();\n\t    var isFull = self.isFull();\n\t    var isLocked = self.isLocked;\n\t    self.wrapper.classList.toggle('rtl', self.rtl);\n\t    var classList = self.control.classList;\n\t    classList.toggle('focus', self.isFocused);\n\t    classList.toggle('disabled', self.isDisabled);\n\t    classList.toggle('required', self.isRequired);\n\t    classList.toggle('invalid', self.isInvalid);\n\t    classList.toggle('locked', isLocked);\n\t    classList.toggle('full', isFull);\n\t    classList.toggle('not-full', !isFull);\n\t    classList.toggle('input-active', self.isFocused && !self.isInputHidden);\n\t    classList.toggle('dropdown-active', self.isOpen);\n\t    classList.toggle('has-options', isEmptyObject(self.options));\n\t    classList.toggle('has-items', self.items.length > 0);\n\t  }\n\t  /**\n\t   * Update the `required` attribute of both input and control input.\n\t   *\n\t   * The `required` property needs to be activated on the control input\n\t   * for the error to be displayed at the right place. `required` also\n\t   * needs to be temporarily deactivated on the input since the input is\n\t   * hidden and can't show errors.\n\t   */\n\n\n\t  refreshValidityState() {\n\t    var self = this;\n\n\t    if (!self.input.checkValidity) {\n\t      return;\n\t    } // if required, make sure the input required attribute = true so checkValidity() will work\n\n\n\t    if (this.isRequired) {\n\t      self.input.required = true;\n\t    }\n\n\t    var invalid = !self.input.checkValidity();\n\t    self.isInvalid = invalid;\n\t    self.control_input.required = invalid;\n\n\t    if (this.isRequired) {\n\t      self.input.required = !invalid;\n\t    }\n\t  }\n\t  /**\n\t   * Determines whether or not more items can be added\n\t   * to the control without exceeding the user-defined maximum.\n\t   *\n\t   * @returns {boolean}\n\t   */\n\n\n\t  isFull() {\n\t    return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t  }\n\t  /**\n\t   * Refreshes the original <select> or <input>\n\t   * element to reflect the current state.\n\t   *\n\t   */\n\n\n\t  updateOriginalInput(opts = {}) {\n\t    var i,\n\t        value,\n\t        option,\n\t        self = this;\n\n\t    if (self.is_select_tag) {\n\t      // remove selected attribute from options whose values are not in self.items\n\t      self.input.querySelectorAll('option[selected]').forEach(option => {\n\t        if (self.items.indexOf(option.value) == -1) {\n\t          option.selected = false;\n\t          option.removeAttribute('selected');\n\t        }\n\t      }); // order selected <option> tags for values in self.items\n\n\t      for (i = self.items.length - 1; i >= 0; i--) {\n\t        value = self.items[i];\n\t        var option = self.options[value].$option;\n\n\t        if (!option) {\n\t          const label = self.options[value][self.settings.labelField] || '';\n\t          option = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n\t          self.options[value].$option = option;\n\t        }\n\n\t        option.selected = true;\n\t        setAttr(option, {\n\t          selected: 'true'\n\t        });\n\t        self.input.prepend(option);\n\t      }\n\t    } else {\n\t      self.input.value = self.getValue();\n\t    }\n\n\t    if (self.isSetup) {\n\t      if (!opts.silent) {\n\t        self.trigger('change', self.getValue());\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Shows the autocomplete dropdown containing\n\t   * the available options.\n\t   */\n\n\n\t  open() {\n\t    var self = this;\n\t    if (self.isLocked || self.isOpen || self.settings.mode === 'multi' && self.isFull()) return;\n\t    self.isOpen = true;\n\t    setAttr(self.control_input, {\n\t      'aria-expanded': 'true'\n\t    });\n\t    self.refreshState();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'hidden',\n\t      display: 'block'\n\t    });\n\t    self.positionDropdown();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'visible',\n\t      display: 'block'\n\t    });\n\t    self.focus();\n\t    self.trigger('dropdown_open', self.dropdown);\n\t  }\n\t  /**\n\t   * Closes the autocomplete dropdown menu.\n\t   */\n\n\n\t  close(setTextboxValue = true) {\n\t    var self = this;\n\t    var trigger = self.isOpen;\n\n\t    if (setTextboxValue) {\n\t      // before blur() to prevent form onchange event\n\t      self.setTextboxValue();\n\n\t      if (self.settings.mode === 'single' && self.items.length) {\n\t        self.hideInput(); // Do not trigger blur while inside a blur event,\n\t        // this fixes some weird tabbing behavior in FF and IE.\n\t        // See #selectize.js#1164\n\n\t        if (!self.tab_key) {\n\t          self.blur(); // close keyboard on iOS\n\t        }\n\t      }\n\t    }\n\n\t    self.isOpen = false;\n\t    setAttr(self.control_input, {\n\t      'aria-expanded': 'false'\n\t    });\n\t    applyCSS(self.dropdown, {\n\t      display: 'none'\n\t    });\n\t    self.clearActiveOption();\n\t    self.refreshState();\n\t    if (trigger) self.trigger('dropdown_close', self.dropdown);\n\t  }\n\t  /**\n\t   * Calculates and applies the appropriate\n\t   * position of the dropdown if dropdownParent = 'body'.\n\t   * Otherwise, position is determined by css\n\t   */\n\n\n\t  positionDropdown() {\n\t    if (this.settings.dropdownParent !== 'body') {\n\t      return;\n\t    }\n\n\t    var context = this.control;\n\t    var rect = context.getBoundingClientRect();\n\t    var top = context.offsetHeight + rect.top + window.scrollY;\n\t    var left = rect.left + window.scrollX;\n\t    applyCSS(this.dropdown, {\n\t      width: rect.width + 'px',\n\t      top: top + 'px',\n\t      left: left + 'px'\n\t    });\n\t  }\n\t  /**\n\t   * Resets / clears all selected items\n\t   * from the control.\n\t   *\n\t   */\n\n\n\t  clear(silent) {\n\t    var self = this;\n\t    if (!self.items.length) return;\n\t    var items = self.controlChildren();\n\n\t    for (const item of items) {\n\t      item.remove();\n\t    }\n\n\t    self.items = [];\n\t    self.lastQuery = null;\n\t    self.setCaret(0);\n\t    self.setActiveItem();\n\t    self.updateOriginalInput({\n\t      silent: silent\n\t    });\n\t    self.refreshState();\n\t    self.showInput();\n\t    self.trigger('clear');\n\t  }\n\t  /**\n\t   * A helper method for inserting an element\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  insertAtCaret(el) {\n\t    var self = this;\n\t    var caret = Math.min(self.caretPos, self.items.length);\n\t    var target = self.buffer || self.control;\n\n\t    if (caret === 0) {\n\t      target.insertBefore(el, target.firstChild);\n\t    } else {\n\t      target.insertBefore(el, target.children[caret]);\n\t    }\n\n\t    self.setCaret(caret + 1);\n\t  }\n\t  /**\n\t   * Removes the current selected item(s).\n\t   *\n\t   */\n\n\n\t  deleteSelection(e) {\n\t    var direction, selection, values, caret, tail;\n\t    var self = this;\n\t    direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;\n\t    selection = getSelection(self.control_input); // determine items that will be removed\n\n\t    values = [];\n\n\t    if (self.activeItems.length) {\n\t      tail = getTail(self.activeItems, direction);\n\t      caret = nodeIndex(tail);\n\n\t      if (direction > 0) {\n\t        caret++;\n\t      }\n\n\t      for (const item of self.activeItems) {\n\t        values.push(item.dataset.value);\n\t      }\n\t    } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t      if (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t        values.push(self.items[self.caretPos - 1]);\n\t      } else if (direction > 0 && selection.start === self.inputValue().length) {\n\t        values.push(self.items[self.caretPos]);\n\t      }\n\t    } // allow the callback to abort\n\n\n\t    if (!values.length || typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self, values, e) === false) {\n\t      return false;\n\t    }\n\n\t    preventDefault(e, true); // perform removal\n\n\t    if (typeof caret !== 'undefined') {\n\t      self.setCaret(caret);\n\t    }\n\n\t    while (values.length) {\n\t      self.removeItem(values.pop());\n\t    }\n\n\t    self.showInput();\n\t    self.positionDropdown();\n\t    self.refreshOptions(false);\n\t    return true;\n\t  }\n\t  /**\n\t   * Selects the previous / next item (depending on the `direction` argument).\n\t   *\n\t   * > 0 - right\n\t   * < 0 - left\n\t   *\n\t   */\n\n\n\t  advanceSelection(direction, e) {\n\t    var idx,\n\t        last_active,\n\t        adjacent,\n\t        self = this;\n\t    if (self.rtl) direction *= -1;\n\t    if (self.inputValue().length) return; // add or remove to active items\n\n\t    if (isKeyDown(KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {\n\t      last_active = self.getLastActive(direction);\n\n\t      if (last_active) {\n\t        if (!last_active.classList.contains('active')) {\n\t          adjacent = last_active;\n\t        } else {\n\t          adjacent = self.getAdjacent(last_active, direction, 'item');\n\t        } // if no active item, get items adjacent to the control input\n\n\t      } else if (direction > 0) {\n\t        adjacent = self.control_input.nextElementSibling;\n\t      } else {\n\t        adjacent = self.control_input.previousElementSibling;\n\t      }\n\n\t      if (adjacent) {\n\t        if (adjacent.classList.contains('active')) {\n\t          self.removeActiveItem(last_active);\n\t        }\n\n\t        self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t      } // move caret to the left or right\n\n\t    } else if (self.isFocused && !self.activeItems.length) {\n\t      self.setCaret(self.caretPos + direction); // move caret before or after selected items\n\t    } else {\n\t      last_active = self.getLastActive(direction);\n\n\t      if (last_active) {\n\t        idx = nodeIndex(last_active);\n\t        self.setCaret(direction > 0 ? idx + 1 : idx);\n\t        self.setActiveItem();\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Get the last active item\n\t   *\n\t   */\n\n\n\t  getLastActive(direction) {\n\t    let last_active = this.control.querySelector('.last-active');\n\n\t    if (last_active) {\n\t      return last_active;\n\t    }\n\n\t    var result = this.control.querySelectorAll('.active');\n\n\t    if (result) {\n\t      return getTail(result, direction);\n\t    }\n\t  }\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\n\n\t  setCaret(new_pos) {\n\t    var self = this;\n\n\t    if (self.settings.mode === 'single' || self.settings.controlInput) {\n\t      new_pos = self.items.length;\n\t    } else {\n\t      new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t      if (new_pos != self.caretPos && !self.isPending) {\n\t        self.controlChildren().forEach((child, j) => {\n\t          if (j < new_pos) {\n\t            self.control_input.insertAdjacentElement('beforebegin', child);\n\t          } else {\n\t            self.control.appendChild(child);\n\t          }\n\t        });\n\t      }\n\t    }\n\n\t    self.caretPos = new_pos;\n\t  }\n\t  /**\n\t   * Return list of item dom elements\n\t   *\n\t   */\n\n\n\t  controlChildren() {\n\t    return Array.from(this.control.getElementsByClassName(this.settings.itemClass));\n\t  }\n\t  /**\n\t   * Disables user input on the control. Used while\n\t   * items are being asynchronously created.\n\t   */\n\n\n\t  lock() {\n\t    this.close();\n\t    this.isLocked = true;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Re-enables user input on the control.\n\t   */\n\n\n\t  unlock() {\n\t    this.isLocked = false;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Disables user input on the control completely.\n\t   * While disabled, it cannot receive focus.\n\t   */\n\n\n\t  disable() {\n\t    var self = this;\n\t    self.input.disabled = true;\n\t    self.control_input.disabled = true;\n\t    self.control_input.tabIndex = -1;\n\t    self.isDisabled = true;\n\t    self.lock();\n\t  }\n\t  /**\n\t   * Enables the control so that it can respond\n\t   * to focus and user input.\n\t   */\n\n\n\t  enable() {\n\t    var self = this;\n\t    self.input.disabled = false;\n\t    self.control_input.disabled = false;\n\t    self.control_input.tabIndex = self.tabIndex;\n\t    self.isDisabled = false;\n\t    self.unlock();\n\t  }\n\t  /**\n\t   * Completely destroys the control and\n\t   * unbinds all event listeners so that it can\n\t   * be garbage collected.\n\t   */\n\n\n\t  destroy() {\n\t    var self = this;\n\t    var revertSettings = self.revertSettings;\n\t    self.trigger('destroy');\n\t    self.off();\n\t    self.wrapper.remove();\n\t    self.dropdown.remove();\n\t    self.input.innerHTML = revertSettings.innerHTML;\n\t    self.input.tabIndex = revertSettings.tabIndex;\n\t    removeClasses(self.input, 'tomselected');\n\t    self.input.removeAttribute('hidden');\n\t    self.input.required = this.isRequired;\n\n\t    self._destroy();\n\n\t    delete self.input.tomselect;\n\t  }\n\t  /**\n\t   * A helper method for rendering \"item\" and\n\t   * \"option\" templates, given the data.\n\t   *\n\t   */\n\n\n\t  render(templateName, data) {\n\t    var value, id, html;\n\t    var self = this;\n\n\t    if (templateName === 'option' || templateName === 'item') {\n\t      value = hash_key(data[self.settings.valueField]); // pull markup from cache if it exists\n\n\t      if (self.renderCache[templateName].hasOwnProperty(value)) {\n\t        return self.renderCache[templateName][value];\n\t      }\n\t    }\n\n\t    var template = self.settings.render[templateName];\n\n\t    if (typeof template !== 'function') {\n\t      return null;\n\t    } // render markup\n\n\n\t    html = template.call(this, data, escape_html);\n\n\t    if (!html) {\n\t      return html;\n\t    }\n\n\t    html = getDom(html); // add mandatory attributes\n\n\t    if (templateName === 'option' || templateName === 'option_create') {\n\t      if (data[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'aria-disabled': 'true'\n\t        });\n\t      } else {\n\t        setAttr(html, {\n\t          'data-selectable': ''\n\t        });\n\t      }\n\t    } else if (templateName === 'optgroup') {\n\t      id = data.group[self.settings.optgroupValueField];\n\t      setAttr(html, {\n\t        'data-group': id\n\t      });\n\n\t      if (data.group[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'data-disabled': ''\n\t        });\n\t      }\n\t    }\n\n\t    if (templateName === 'option' || templateName === 'item') {\n\t      setAttr(html, {\n\t        'data-value': value\n\t      }); // make sure we have some classes if a template is overwritten\n\n\t      if (templateName === 'item') {\n\t        addClasses(html, self.settings.itemClass);\n\t      } else {\n\t        addClasses(html, self.settings.optionClass);\n\t        setAttr(html, {\n\t          role: 'option',\n\t          id: data.$id\n\t        });\n\t      } // update cache\n\n\n\t      self.renderCache[templateName][value] = html;\n\t    }\n\n\t    return html;\n\t  }\n\t  /**\n\t   * Clears the render cache for a template. If\n\t   * no template is given, clears all render\n\t   * caches.\n\t   *\n\t   */\n\n\n\t  clearCache(templateName) {\n\t    var self = this;\n\n\t    if (templateName === void 0) {\n\t      self.renderCache = {\n\t        'item': {},\n\t        'option': {}\n\t      };\n\t    } else {\n\t      self.renderCache[templateName] = {};\n\t    }\n\t  }\n\t  /**\n\t   * Determines whether or not to display the\n\t   * create item prompt, given a user input.\n\t   *\n\t   */\n\n\n\t  canCreate(input) {\n\t    return this.settings.create && input.length && this.settings.createFilter.call(this, input);\n\t  }\n\t  /**\n\t   * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t   *\n\t   * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t   *\n\t   * });\n\t   */\n\n\n\t  hook(when, method, new_fn) {\n\t    var self = this;\n\t    var orig_method = self[method];\n\n\t    self[method] = function () {\n\t      var result, result_new;\n\n\t      if (when === 'after') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\n\t      result_new = new_fn.apply(self, arguments);\n\n\t      if (when === 'instead') {\n\t        return result_new;\n\t      }\n\n\t      if (when === 'before') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\n\t      return result;\n\t    };\n\t  }\n\n\t}\n\n\t/**\n\t * Plugin: \"change_listener\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('change_listener', function (options) {\n\t  var self = this;\n\t  var changed = false;\n\t  addEvent(self.input, 'change', () => {\n\t    // prevent infinite loops\n\t    if (changed) {\n\t      changed = false;\n\t      return;\n\t    }\n\n\t    changed = true;\n\t    var settings = getSettings(self.input, {});\n\t    self.setupOptions(settings.options, settings.optgroups);\n\t    self.setValue(settings.items);\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('checkbox_options', function (options) {\n\t  var self = this;\n\t  var orig_onOptionSelect = self.onOptionSelect;\n\t  self.settings.hideSelected = false; // update the checkbox for an option\n\n\t  var UpdateCheckbox = function UpdateCheckbox(option) {\n\t    setTimeout(() => {\n\t      var checkbox = option.querySelector('input');\n\n\t      if (option.classList.contains('selected')) {\n\t        checkbox.checked = true;\n\t      } else {\n\t        checkbox.checked = false;\n\t      }\n\t    }, 1);\n\t  }; // add checkbox to option template\n\n\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_option = self.settings.render.option;\n\n\t    self.settings.render.option = function (data) {\n\t      var rendered = getDom(orig_render_option.apply(self, arguments));\n\t      var checkbox = document.createElement('input');\n\t      checkbox.addEventListener('click', function (evt) {\n\t        preventDefault(evt);\n\t      });\n\t      checkbox.type = 'checkbox';\n\t      var value = hash_key(data[self.settings.valueField]);\n\n\t      if (self.items.indexOf(value) > -1) {\n\t        checkbox.checked = true;\n\t      }\n\n\t      rendered.prepend(checkbox);\n\t      return rendered;\n\t    };\n\t  }); // uncheck when item removed\n\n\t  self.on('item_remove', value => {\n\t    var option = self.getOption(value);\n\n\t    if (option) {\n\t      // if dropdown hasn't been opened yet, the option won't exist\n\t      option.classList.remove('selected'); // selected class won't be removed yet\n\n\t      UpdateCheckbox(option);\n\t    }\n\t  }); // remove items when selected option is clicked\n\n\t  self.hook('instead', 'onOptionSelect', function (evt, option) {\n\t    if (option.classList.contains('selected')) {\n\t      option.classList.remove('selected');\n\t      self.removeItem(option.dataset.value);\n\t      self.refreshOptions();\n\t      preventDefault(evt, true);\n\t      return;\n\t    }\n\n\t    orig_onOptionSelect.apply(self, arguments);\n\t    UpdateCheckbox(option);\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('clear_button', function (options) {\n\t  var self = this;\n\t  options = Object.assign({\n\t    className: 'clear-button',\n\t    title: 'Clear All',\n\t    html: data => {\n\t      return `<div class=\"${data.className}\" title=\"${data.title}\">&times;</div>`;\n\t    }\n\t  }, options);\n\t  self.hook('after', 'setup', () => {\n\t    var button = getDom(options.html(options));\n\t    button.addEventListener('click', evt => {\n\t      while (self.items.length > 0) {\n\t        self.removeItem(self.items[0], true);\n\t      }\n\n\t      self.updateOriginalInput();\n\t      evt.preventDefault();\n\t      evt.stopPropagation();\n\t    });\n\t    self.control.appendChild(button);\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"drag_drop\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('drag_drop', function (options) {\n\t  var self = this;\n\t  if (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t  if (self.settings.mode !== 'multi') return;\n\t  var orig_lock = self.lock;\n\t  var orig_unlock = self.unlock;\n\t  self.hook('instead', 'lock', function () {\n\t    var sortable = self.control.dataset.sortable;\n\t    if (sortable) sortable.disable();\n\t    return orig_lock.apply(self, arguments);\n\t  });\n\t  self.hook('instead', 'unlock', function () {\n\t    var sortable = self.control.dataset.sortable;\n\t    if (sortable) sortable.enable();\n\t    return orig_unlock.apply(self, arguments);\n\t  });\n\t  self.hook('after', 'setup', () => {\n\t    var $control = $(self.control).sortable({\n\t      items: '[data-value]',\n\t      forcePlaceholderSize: true,\n\t      disabled: self.isLocked,\n\t      start: (e, ui) => {\n\t        ui.placeholder.css('width', ui.helper.css('width'));\n\t        $control.css({\n\t          overflow: 'visible'\n\t        });\n\t      },\n\t      stop: () => {\n\t        $control.css({\n\t          overflow: 'hidden'\n\t        });\n\t        var values = [];\n\t        $control.children('[data-value]').each(function () {\n\t          values.push($(this).attr('data-value'));\n\t        });\n\t        self.setValue(values);\n\t      }\n\t    });\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('dropdown_header', function (options) {\n\t  var self = this;\n\t  options = Object.assign({\n\t    title: 'Untitled',\n\t    headerClass: 'dropdown-header',\n\t    titleRowClass: 'dropdown-header-title',\n\t    labelClass: 'dropdown-header-label',\n\t    closeClass: 'dropdown-header-close',\n\t    html: data => {\n\t      return '<div class=\"' + data.headerClass + '\">' + '<div class=\"' + data.titleRowClass + '\">' + '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' + '<a class=\"' + data.closeClass + '\">&times;</a>' + '</div>' + '</div>';\n\t    }\n\t  }, options);\n\t  self.hook('after', 'setup', () => {\n\t    var header = getDom(options.html(options));\n\t    var close_link = header.querySelector('.' + options.closeClass);\n\n\t    if (close_link) {\n\t      close_link.addEventListener('click', evt => {\n\t        preventDefault(evt, true);\n\t        self.close();\n\t      });\n\t    }\n\n\t    self.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('dropdown_input', function () {\n\t  var self = this;\n\t  var input = self.settings.controlInput || '<input type=\"text\" autocomplete=\"off\" class=\"dropdown-input\" />';\n\t  input = getDom(input);\n\n\t  if (self.settings.placeholder) {\n\t    setAttr(input, {\n\t      placeholder: self.settings.placeholder\n\t    });\n\t  }\n\n\t  self.settings.controlInput = input;\n\t  self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\t  self.hook('after', 'setup', () => {\n\t    // set tabIndex on wrapper\n\t    setAttr(self.wrapper, {\n\t      tabindex: self.input.disabled ? '-1' : self.tabIndex\n\t    }); // keyboard navigation\n\n\t    addEvent(self.wrapper, 'keypress', evt => {\n\t      if (self.control.contains(evt.target)) {\n\t        return;\n\t      }\n\n\t      if (self.dropdown.contains(evt.target)) {\n\t        return;\n\t      } // open dropdown on enter when wrapper is tab-focused\n\n\n\t      switch (evt.keyCode) {\n\t        case KEY_RETURN:\n\t          self.onClick(evt);\n\t          return;\n\t      }\n\t    });\n\t    let div = getDom('<div class=\"dropdown-input-wrap\">');\n\t    div.appendChild(input);\n\t    self.dropdown.insertBefore(div, self.dropdown.firstChild);\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('input_autogrow', function () {\n\t  var self = this;\n\t  self.hook('after', 'setup', () => {\n\t    var test_input = document.createElement('span');\n\t    var control = self.control_input;\n\t    test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\t    self.wrapper.appendChild(test_input);\n\t    var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];\n\n\t    for (const style_name of transfer_styles) {\n\t      test_input.style[style_name] = control.style[style_name];\n\t    }\n\t    /**\n\t     * Set the control width\n\t     *\n\t     */\n\n\n\t    var resize = () => {\n\t      if (self.items.length > 0) {\n\t        test_input.textContent = control.value;\n\t        control.style.width = test_input.clientWidth + 'px';\n\t      } else {\n\t        control.style.width = '';\n\t      }\n\t    };\n\n\t    resize();\n\t    self.on('update item_add item_remove', resize);\n\t    addEvent(control, 'input', resize);\n\t    addEvent(control, 'keyup', resize);\n\t    addEvent(control, 'blur', resize);\n\t    addEvent(control, 'update', resize);\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('no_backspace_delete', function () {\n\t  var self = this;\n\t  var orig_deleteSelection = self.deleteSelection;\n\t  this.hook('instead', 'deleteSelection', function () {\n\t    if (self.activeItems.length) {\n\t      return orig_deleteSelection.apply(self, arguments);\n\t    }\n\n\t    return false;\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('no_active_items', function (options) {\n\t  this.hook('instead', 'setActiveItem', () => {});\n\t  this.hook('instead', 'selectAll', () => {});\n\t});\n\n\t/**\n\t * Plugin: \"optgroup_columns\" (Tom Select.js)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('optgroup_columns', function () {\n\t  var self = this;\n\t  var orig_keydown = self.onKeyDown;\n\t  self.hook('instead', 'onKeyDown', function (evt) {\n\t    var index, option, options, optgroup;\n\n\t    if (!self.isOpen || !(evt.keyCode === KEY_LEFT || evt.keyCode === KEY_RIGHT)) {\n\t      return orig_keydown.apply(self, arguments);\n\t    }\n\n\t    optgroup = parentMatch(self.activeOption, '[data-group]');\n\t    index = nodeIndex(self.activeOption, '[data-selectable]');\n\n\t    if (evt.keyCode === KEY_LEFT) {\n\t      optgroup = optgroup.previousSibling;\n\t    } else {\n\t      optgroup = optgroup.nextSibling;\n\t    }\n\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\n\t    options = optgroup.querySelectorAll('[data-selectable]');\n\t    option = options[Math.min(options.length - 1, index)];\n\n\t    if (option) {\n\t      self.setActiveOption(option);\n\t    }\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"remove_button\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('remove_button', function (options) {\n\t  options = Object.assign({\n\t    label: '&times;',\n\t    title: 'Remove',\n\t    className: 'remove',\n\t    append: true\n\t  }, options); //options.className = 'remove-single';\n\n\t  var self = this; // override the render method to add remove button to each item\n\n\t  if (!options.append) {\n\t    return;\n\t  }\n\n\t  var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_item = self.settings.render.item;\n\n\t    self.settings.render.item = function () {\n\t      var rendered = getDom(orig_render_item.apply(self, arguments));\n\t      var close_button = getDom(html);\n\t      rendered.appendChild(close_button);\n\t      addEvent(close_button, 'mousedown', evt => {\n\t        preventDefault(evt, true);\n\t      });\n\t      addEvent(close_button, 'click', evt => {\n\t        // propagating will trigger the dropdown to show for single mode\n\t        preventDefault(evt, true);\n\t        if (self.isLocked) return;\n\t        var value = rendered.dataset.value;\n\t        self.removeItem(value);\n\t        self.refreshOptions(false);\n\t      });\n\t      return rendered;\n\t    };\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('restore_on_backspace', function (options) {\n\t  var self = this;\n\n\t  options.text = options.text || function (option) {\n\t    return option[self.settings.labelField];\n\t  };\n\n\t  self.on('item_remove', function (value) {\n\t    if (self.control_input.value.trim() === '') {\n\t      var option = self.options[value];\n\n\t      if (option) {\n\t        self.setTextboxValue(options.text.call(self, option));\n\t      }\n\t    }\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('virtual_scroll', function (options) {\n\t  const self = this;\n\t  const orig_canLoad = self.canLoad;\n\t  const orig_clearActiveOption = self.clearActiveOption;\n\t  const orig_loadCallback = self.loadCallback;\n\t  var pagination = {};\n\t  var dropdown_content;\n\t  var loading_more = false;\n\n\t  if (!self.settings.firstUrl) {\n\t    throw 'virtual_scroll plugin requires a firstUrl() method';\n\t  } // in order for virtual scrolling to work,\n\t  // options need to be ordered the same way they're returned from the remote data source\n\n\n\t  self.settings.sortField = [{\n\t    field: '$order'\n\t  }, {\n\t    field: '$score'\n\t  }]; // can we load more results for given query?\n\n\t  function canLoadMore(query) {\n\t    if (typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions) {\n\t      return;\n\t    }\n\n\t    if (query in pagination && pagination[query]) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  } // set the next url that will be\n\n\n\t  self.setNextUrl = function (value, next_url) {\n\t    pagination[value] = next_url;\n\t  }; // getUrl() to be used in settings.load()\n\n\n\t  self.getUrl = function (query) {\n\t    if (query in pagination) {\n\t      const next_url = pagination[query];\n\t      pagination[query] = false;\n\t      return next_url;\n\t    } // if the user goes back to a previous query\n\t    // we need to load the first page again\n\n\n\t    pagination = {};\n\t    return self.settings.firstUrl(query);\n\t  }; // don't clear the active option (and cause unwanted dropdown scroll)\n\t  // while loading more results\n\n\n\t  self.hook('instead', 'clearActiveOption', () => {\n\t    if (loading_more) {\n\t      return;\n\t    }\n\n\t    return orig_clearActiveOption.call(self);\n\t  }); // override the canLoad method\n\n\t  self.hook('instead', 'canLoad', query => {\n\t    // first time the query has been seen\n\t    if (!(query in pagination)) {\n\t      return orig_canLoad.call(this, query);\n\t    }\n\n\t    return canLoadMore(query);\n\t  }); // wrap the load\n\n\t  self.hook('instead', 'loadCallback', (value, options, optgroups) => {\n\t    if (!loading_more) {\n\t      self.clearOptions();\n\t    }\n\n\t    orig_loadCallback.call(self, value, options, optgroups);\n\t    loading_more = false;\n\t  }); // add templates to dropdown\n\t  //\tloading_more if we have another url in the queue\n\t  //\tno_more_results if we don't have another url in the queue\n\n\t  self.hook('after', 'refreshOptions', () => {\n\t    const query = self.lastValue;\n\t    var option;\n\n\t    if (canLoadMore(query)) {\n\t      option = self.render('loading_more', {\n\t        query: query\n\t      });\n\t      if (option) option.setAttribute('data-selectable', ''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t    } else if (query in pagination && !dropdown_content.querySelector('.no-results')) {\n\t      option = self.render('no_more_results', {\n\t        query: query\n\t      });\n\t    }\n\n\t    if (option) {\n\t      addClasses(option, self.settings.optionClass);\n\t      dropdown_content.append(option);\n\t    }\n\t  }); // add scroll listener and default templates\n\n\t  self.hook('after', 'setup', () => {\n\t    dropdown_content = self.dropdown_content; // default templates\n\n\t    self.settings.render = Object.assign({}, {\n\t      loading_more: function (data, escape) {\n\t        return `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t      },\n\t      no_more_results: function (data, escape) {\n\t        return `<div class=\"no-more-results\">No more results</div>`;\n\t      }\n\t    }, self.settings.render); // watch dropdown content scroll position\n\n\t    dropdown_content.addEventListener('scroll', function () {\n\t      const scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\n\t      if (scroll_percent < 0.95) {\n\t        return;\n\t      } // !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\n\n\t      if (!canLoadMore(self.lastValue)) {\n\t        return;\n\t      } // don't call load() too much\n\n\n\t      if (loading_more) return;\n\t      loading_more = true;\n\t      self.load.call(self, self.lastValue);\n\t    });\n\t  });\n\t});\n\n\treturn TomSelect;\n\n})));\nvar tomSelect=function(el,opts){return new TomSelect(el,opts);} \n//# sourceMappingURL=tom-select.complete.js.map\n"],"sourceRoot":""}