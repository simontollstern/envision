{"version":3,"file":"tom-select-d4d62cab487ce676e60d.js","mappings":"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","sources":["webpack://envision/../../node_modules/tom-select/dist/js/tom-select.complete.js"],"sourcesContent":["/**\n* Tom Select v1.7.8\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n*/\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.TomSelect = factory());\n}(this, (function () { 'use strict';\n\n\t/**\n\t * MicroEvent - to make any js object an event emitter\n\t *\n\t * - pure javascript - server compatible, browser compatible\n\t * - dont rely on the browser doms\n\t * - super simple - you get it immediatly, no mistery, no magic involved\n\t *\n\t * @author Jerome Etienne (https://github.com/jeromeetienne)\n\t */\n\n\t/**\n\t * Execute callback for each event in space separated list of event names\n\t *\n\t */\n\tfunction forEvents(events, callback) {\n\t  events.split(/\\s+/).forEach(event => {\n\t    callback(event);\n\t  });\n\t}\n\n\tclass MicroEvent {\n\t  constructor() {\n\t    this._events = {};\n\t  }\n\n\t  on(events, fct) {\n\t    forEvents(events, event => {\n\t      this._events[event] = this._events[event] || [];\n\n\t      this._events[event].push(fct);\n\t    });\n\t  }\n\n\t  off(events, fct) {\n\t    var n = arguments.length;\n\n\t    if (n === 0) {\n\t      this._events = {};\n\t      return;\n\t    }\n\n\t    forEvents(events, event => {\n\t      if (n === 1) return delete this._events[event];\n\t      if (event in this._events === false) return;\n\n\t      this._events[event].splice(this._events[event].indexOf(fct), 1);\n\t    });\n\t  }\n\n\t  trigger(events, ...args) {\n\t    var self = this;\n\t    forEvents(events, event => {\n\t      if (event in self._events === false) return;\n\n\t      for (let fct of self._events[event]) {\n\t        fct.apply(self, args);\n\t      }\n\t    });\n\t  }\n\n\t}\n\n\t/**\n\t * microplugin.js\n\t * Copyright (c) 2013 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\tfunction MicroPlugin(Interface) {\n\t  Interface.plugins = {};\n\t  return class extends Interface {\n\t    constructor(...args) {\n\t      super(...args);\n\t      this.plugins = {\n\t        names: [],\n\t        settings: {},\n\t        requested: {},\n\t        loaded: {}\n\t      };\n\t    }\n\n\t    /**\n\t     * Registers a plugin.\n\t     *\n\t     * @param {function} fn\n\t     */\n\t    static define(name, fn) {\n\t      Interface.plugins[name] = {\n\t        'name': name,\n\t        'fn': fn\n\t      };\n\t    }\n\t    /**\n\t     * Initializes the listed plugins (with options).\n\t     * Acceptable formats:\n\t     *\n\t     * List (without options):\n\t     *   ['a', 'b', 'c']\n\t     *\n\t     * List (with options):\n\t     *   [{'name': 'a', options: {}}, {'name': 'b', options: {}}]\n\t     *\n\t     * Hash (with options):\n\t     *   {'a': { ... }, 'b': { ... }, 'c': { ... }}\n\t     *\n\t     * @param {array|object} plugins\n\t     */\n\n\n\t    initializePlugins(plugins) {\n\t      var key, name;\n\t      const self = this;\n\t      const queue = [];\n\n\t      if (Array.isArray(plugins)) {\n\t        plugins.forEach(plugin => {\n\t          if (typeof plugin === 'string') {\n\t            queue.push(plugin);\n\t          } else {\n\t            self.plugins.settings[plugin.name] = plugin.options;\n\t            queue.push(plugin.name);\n\t          }\n\t        });\n\t      } else if (plugins) {\n\t        for (key in plugins) {\n\t          if (plugins.hasOwnProperty(key)) {\n\t            self.plugins.settings[key] = plugins[key];\n\t            queue.push(key);\n\t          }\n\t        }\n\t      }\n\n\t      while (name = queue.shift()) {\n\t        self.require(name);\n\t      }\n\t    }\n\n\t    loadPlugin(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\t      var plugin = Interface.plugins[name];\n\n\t      if (!Interface.plugins.hasOwnProperty(name)) {\n\t        throw new Error('Unable to find \"' + name + '\" plugin');\n\t      }\n\n\t      plugins.requested[name] = true;\n\t      plugins.loaded[name] = plugin.fn.apply(self, [self.plugins.settings[name] || {}]);\n\t      plugins.names.push(name);\n\t    }\n\t    /**\n\t     * Initializes a plugin.\n\t     *\n\t     */\n\n\n\t    require(name) {\n\t      var self = this;\n\t      var plugins = self.plugins;\n\n\t      if (!self.plugins.loaded.hasOwnProperty(name)) {\n\t        if (plugins.requested[name]) {\n\t          throw new Error('Plugin has circular dependency (\"' + name + '\")');\n\t        }\n\n\t        self.loadPlugin(name);\n\t      }\n\n\t      return plugins.loaded[name];\n\t    }\n\n\t  };\n\t}\n\n\t// https://github.com/andrewrk/node-diacritics/blob/master/index.js\n\tvar latin_pat;\n\tconst accent_pat = '[\\u0300-\\u036F\\u{b7}\\u{2be}]'; // \\u{2bc}\n\n\tconst accent_reg = new RegExp(accent_pat, 'g');\n\tvar diacritic_patterns;\n\tconst latin_convert = {\n\t  'æ': 'ae',\n\t  'ⱥ': 'a',\n\t  'ø': 'o'\n\t};\n\tconst convert_pat = new RegExp(Object.keys(latin_convert).join('|'), 'g');\n\t/**\n\t * code points generated from toCodePoints();\n\t * removed 65339 to 65345\n\t */\n\n\tconst code_points = [[67, 67], [160, 160], [192, 438], [452, 652], [961, 961], [1019, 1019], [1083, 1083], [1281, 1289], [1984, 1984], [5095, 5095], [7429, 7441], [7545, 7549], [7680, 7935], [8580, 8580], [9398, 9449], [11360, 11391], [42792, 42793], [42802, 42851], [42873, 42897], [42912, 42922], [64256, 64260], [65313, 65338], [65345, 65370]];\n\t/**\n\t * Remove accents\n\t * via https://github.com/krisk/Fuse/issues/133#issuecomment-318692703\n\t *\n\t */\n\n\tconst asciifold = str => {\n\t  return str.normalize('NFKD').replace(accent_reg, '').toLowerCase().replace(convert_pat, function (foreignletter) {\n\t    return latin_convert[foreignletter];\n\t  });\n\t};\n\t/**\n\t * Convert array of strings to a regular expression\n\t *\tex ['ab','a'] => (?:ab|a)\n\t *\n\t */\n\n\n\tconst arrayToPattern = (chars, glue = '|') => {\n\t  if (chars.length > 1) {\n\t    return '(?:' + chars.join(glue) + ')';\n\t  }\n\n\t  return chars[0];\n\t};\n\t/**\n\t * Get all possible combinations of substrings that add up to the given string\n\t * https://stackoverflow.com/questions/30169587/find-all-the-combination-of-substrings-that-add-up-to-the-given-string\n\t *\n\t */\n\n\tconst allSubstrings = input => {\n\t  if (input.length === 1) return [[input]];\n\t  var result = [];\n\t  allSubstrings(input.substring(1)).forEach(function (subresult) {\n\t    var tmp = subresult.slice(0);\n\t    tmp[0] = input.charAt(0) + tmp[0];\n\t    result.push(tmp);\n\t    tmp = subresult.slice(0);\n\t    tmp.unshift(input.charAt(0));\n\t    result.push(tmp);\n\t  });\n\t  return result;\n\t};\n\t/**\n\t * Generate a list of diacritics from the list of code points\n\t *\n\t */\n\n\tconst generateDiacritics = () => {\n\t  var diacritics = {};\n\t  code_points.forEach(code_range => {\n\t    for (let i = code_range[0]; i <= code_range[1]; i++) {\n\t      let diacritic = String.fromCharCode(i);\n\t      let latin = asciifold(diacritic);\n\n\t      if (latin == diacritic.toLowerCase()) {\n\t        continue;\n\t      }\n\n\t      if (!(latin in diacritics)) {\n\t        diacritics[latin] = [latin];\n\t      }\n\n\t      diacritics[latin].push(diacritic);\n\t    }\n\t  });\n\t  var latin_chars = Object.keys(diacritics); // latin character pattern\n\t  // match longer substrings first\n\n\t  latin_chars = latin_chars.sort((a, b) => b.length - a.length);\n\t  latin_pat = new RegExp('(' + arrayToPattern(latin_chars) + accent_pat + '*)', 'g'); // build diacritic patterns\n\t  // ae needs: \n\t  //\t(?:(?:ae|Æ|Ǽ|Ǣ)|(?:A|Ⓐ|Ａ...)(?:E|ɛ|Ⓔ...))\n\n\t  var diacritic_patterns = {};\n\t  latin_chars.sort((a, b) => a.length - b.length).forEach(latin => {\n\t    var substrings = allSubstrings(latin);\n\t    var pattern = substrings.map(sub_pat => {\n\t      sub_pat = sub_pat.map(l => {\n\t        if (diacritics.hasOwnProperty(l)) {\n\t          return arrayToPattern(diacritics[l]);\n\t        }\n\n\t        return l;\n\t      });\n\t      return arrayToPattern(sub_pat, '');\n\t    });\n\t    diacritic_patterns[latin] = arrayToPattern(pattern);\n\t  });\n\t  return diacritic_patterns;\n\t};\n\t/**\n\t * Expand a regular expression pattern to include diacritics\n\t * \teg /a/ becomes /aⓐａẚàáâầấẫẩãāăằắẵẳȧǡäǟảåǻǎȁȃạậặḁąⱥɐɑAⒶＡÀÁÂẦẤẪẨÃĀĂẰẮẴẲȦǠÄǞẢÅǺǍȀȂẠẬẶḀĄȺⱯ/\n\t *\n\t */\n\n\tconst diacriticRegexPoints = regex => {\n\t  if (diacritic_patterns === undefined) {\n\t    diacritic_patterns = generateDiacritics();\n\t  }\n\n\t  const decomposed = regex.normalize('NFKD').toLowerCase();\n\t  return decomposed.split(latin_pat).map(part => {\n\t    if (part == '') {\n\t      return '';\n\t    } // \"ﬄ\" or \"ffl\"\n\n\n\t    const no_accent = asciifold(part);\n\n\t    if (diacritic_patterns.hasOwnProperty(no_accent)) {\n\t      return diacritic_patterns[no_accent];\n\t    } // 'أهلا' (\\u{623}\\u{647}\\u{644}\\u{627}) or 'أهلا' (\\u{627}\\u{654}\\u{647}\\u{644}\\u{627})\n\n\n\t    const composed_part = part.normalize('NFC');\n\n\t    if (composed_part != part) {\n\t      return arrayToPattern([part, composed_part]);\n\t    }\n\n\t    return part;\n\t  }).join('');\n\t};\n\n\t// @ts-ignore TS2691 \"An import path cannot end with a '.ts' extension\"\n\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\tconst getAttr = (obj, name) => {\n\t  if (!obj) return;\n\t  return obj[name];\n\t};\n\t/**\n\t * A property getter resolving dot-notation\n\t * @param  {Object}  obj     The root object to fetch property on\n\t * @param  {String}  name    The optionally dotted property name to fetch\n\t * @return {Object}          The resolved property value\n\t */\n\n\tconst getAttrNesting = (obj, name) => {\n\t  if (!obj) return;\n\t  var part,\n\t      names = name.split(\".\");\n\n\t  while ((part = names.shift()) && (obj = obj[part]));\n\n\t  return obj;\n\t};\n\t/**\n\t * Calculates how close of a match the\n\t * given value is against a search token.\n\t *\n\t */\n\n\tconst scoreValue = (value, token, weight) => {\n\t  var score, pos;\n\t  if (!value) return 0;\n\t  value = value + '';\n\t  pos = value.search(token.regex);\n\t  if (pos === -1) return 0;\n\t  score = token.string.length / value.length;\n\t  if (pos === 0) score += 0.5;\n\t  return score * weight;\n\t};\n\t/**\n\t *\n\t * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n\t */\n\n\tconst escape_regex = str => {\n\t  return (str + '').replace(/([\\$\\(-\\+\\.\\?\\[-\\^\\{-\\}])/g, '\\\\$1');\n\t};\n\t/**\n\t * Cast object property to an array if it exists and has a value\n\t *\n\t */\n\n\tconst propToArray = (obj, key) => {\n\t  var value = obj[key];\n\n\t  if (value && !Array.isArray(value)) {\n\t    obj[key] = [value];\n\t  }\n\t};\n\t/**\n\t * Iterates over arrays and hashes.\n\t *\n\t * ```\n\t * iterate(this.items, function(item, id) {\n\t *    // invoked for each item\n\t * });\n\t * ```\n\t *\n\t */\n\n\tconst iterate = (object, callback) => {\n\t  if (Array.isArray(object)) {\n\t    object.forEach(callback);\n\t  } else {\n\t    for (var key in object) {\n\t      if (object.hasOwnProperty(key)) {\n\t        callback(object[key], key);\n\t      }\n\t    }\n\t  }\n\t};\n\tconst cmp = (a, b) => {\n\t  if (typeof a === 'number' && typeof b === 'number') {\n\t    return a > b ? 1 : a < b ? -1 : 0;\n\t  }\n\n\t  a = asciifold(a + '').toLowerCase();\n\t  b = asciifold(b + '').toLowerCase();\n\t  if (a > b) return 1;\n\t  if (b > a) return -1;\n\t  return 0;\n\t};\n\n\t/**\n\t * sifter.js\n\t * Copyright (c) 2013–2020 Brian Reavis & contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t * @author Brian Reavis <brian@thirdroute.com>\n\t */\n\n\tclass Sifter {\n\t  // []|{};\n\n\t  /**\n\t   * Textually searches arrays and hashes of objects\n\t   * by property (or multiple properties). Designed\n\t   * specifically for autocomplete.\n\t   *\n\t   */\n\t  constructor(items, settings) {\n\t    this.items = items;\n\t    this.settings = settings || {\n\t      diacritics: true\n\t    };\n\t  }\n\n\t  /**\n\t   * Splits a search string into an array of individual\n\t   * regexps to be used to match results.\n\t   *\n\t   */\n\t  tokenize(query, respect_word_boundaries, weights) {\n\t    if (!query || !query.length) return [];\n\t    const tokens = [];\n\t    const words = query.split(/\\s+/);\n\t    var field_regex;\n\n\t    if (weights) {\n\t      field_regex = new RegExp('^(' + Object.keys(weights).map(escape_regex).join('|') + ')\\:(.*)$');\n\t    }\n\n\t    words.forEach(word => {\n\t      let field_match;\n\t      let field = null;\n\t      let regex = null; // look for \"field:query\" tokens\n\n\t      if (field_regex && (field_match = word.match(field_regex))) {\n\t        field = field_match[1];\n\t        word = field_match[2];\n\t      }\n\n\t      if (word.length > 0) {\n\t        regex = escape_regex(word);\n\n\t        if (this.settings.diacritics) {\n\t          regex = diacriticRegexPoints(regex);\n\t        }\n\n\t        if (respect_word_boundaries) regex = \"\\\\b\" + regex;\n\t      }\n\n\t      tokens.push({\n\t        string: word,\n\t        regex: regex ? new RegExp(regex, 'iu') : null,\n\t        field: field\n\t      });\n\t    });\n\t    return tokens;\n\t  }\n\n\t  /**\n\t   * Returns a function to be used to score individual results.\n\t   *\n\t   * Good matches will have a higher score than poor matches.\n\t   * If an item is not a match, 0 will be returned by the function.\n\t   *\n\t   * @returns {function}\n\t   */\n\t  getScoreFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getScoreFunction(search);\n\t  }\n\n\t  _getScoreFunction(search) {\n\t    const tokens = search.tokens,\n\t          token_count = tokens.length;\n\n\t    if (!token_count) {\n\t      return function () {\n\t        return 0;\n\t      };\n\t    }\n\n\t    const fields = search.options.fields,\n\t          weights = search.weights,\n\t          field_count = fields.length,\n\t          getAttrFn = search.getAttrFn;\n\n\t    if (!field_count) {\n\t      return function () {\n\t        return 1;\n\t      };\n\t    }\n\t    /**\n\t     * Calculates the score of an object\n\t     * against the search query.\n\t     *\n\t     */\n\n\n\t    const scoreObject = function () {\n\t      if (field_count === 1) {\n\t        return function (token, data) {\n\t          const field = fields[0].field;\n\t          return scoreValue(getAttrFn(data, field), token, weights[field]);\n\t        };\n\t      }\n\n\t      return function (token, data) {\n\t        var sum = 0; // is the token specific to a field?\n\n\t        if (token.field) {\n\t          const value = getAttrFn(data, token.field);\n\n\t          if (!token.regex && value) {\n\t            sum += 1 / field_count;\n\t          } else {\n\t            sum += scoreValue(value, token, 1);\n\t          }\n\t        } else {\n\t          iterate(weights, (weight, field) => {\n\t            sum += scoreValue(getAttrFn(data, field), token, weight);\n\t          });\n\t        }\n\n\t        return sum / field_count;\n\t      };\n\t    }();\n\n\t    if (token_count === 1) {\n\t      return function (data) {\n\t        return scoreObject(tokens[0], data);\n\t      };\n\t    }\n\n\t    if (search.options.conjunction === 'and') {\n\t      return function (data) {\n\t        var i = 0,\n\t            score,\n\t            sum = 0;\n\n\t        for (; i < token_count; i++) {\n\t          score = scoreObject(tokens[i], data);\n\t          if (score <= 0) return 0;\n\t          sum += score;\n\t        }\n\n\t        return sum / token_count;\n\t      };\n\t    } else {\n\t      return function (data) {\n\t        var sum = 0;\n\t        iterate(tokens, token => {\n\t          sum += scoreObject(token, data);\n\t        });\n\t        return sum / token_count;\n\t      };\n\t    }\n\t  }\n\n\t  /**\n\t   * Returns a function that can be used to compare two\n\t   * results, for sorting purposes. If no sorting should\n\t   * be performed, `null` will be returned.\n\t   *\n\t   * @return function(a,b)\n\t   */\n\t  getSortFunction(query, options) {\n\t    var search = this.prepareSearch(query, options);\n\t    return this._getSortFunction(search);\n\t  }\n\n\t  _getSortFunction(search) {\n\t    var i, n, implicit_score;\n\t    const self = this,\n\t          options = search.options,\n\t          sort = !search.query && options.sort_empty ? options.sort_empty : options.sort,\n\t          sort_flds = [],\n\t          multipliers = [];\n\t    /**\n\t     * Fetches the specified sort field value\n\t     * from a search result item.\n\t     *\n\t     */\n\n\t    const get_field = function get_field(name, result) {\n\t      if (name === '$score') return result.score;\n\t      return search.getAttrFn(self.items[result.id], name);\n\t    }; // parse options\n\n\n\t    if (sort) {\n\t      for (i = 0, n = sort.length; i < n; i++) {\n\t        if (search.query || sort[i].field !== '$score') {\n\t          sort_flds.push(sort[i]);\n\t        }\n\t      }\n\t    } // the \"$score\" field is implied to be the primary\n\t    // sort field, unless it's manually specified\n\n\n\t    if (search.query) {\n\t      implicit_score = true;\n\n\t      for (i = 0, n = sort_flds.length; i < n; i++) {\n\t        if (sort_flds[i].field === '$score') {\n\t          implicit_score = false;\n\t          break;\n\t        }\n\t      }\n\n\t      if (implicit_score) {\n\t        sort_flds.unshift({\n\t          field: '$score',\n\t          direction: 'desc'\n\t        });\n\t      }\n\t    } else {\n\t      for (i = 0, n = sort_flds.length; i < n; i++) {\n\t        if (sort_flds[i].field === '$score') {\n\t          sort_flds.splice(i, 1);\n\t          break;\n\t        }\n\t      }\n\t    }\n\n\t    for (i = 0, n = sort_flds.length; i < n; i++) {\n\t      multipliers.push(sort_flds[i].direction === 'desc' ? -1 : 1);\n\t    } // build function\n\n\n\t    const sort_flds_count = sort_flds.length;\n\n\t    if (!sort_flds_count) {\n\t      return null;\n\t    } else if (sort_flds_count === 1) {\n\t      const sort_fld = sort_flds[0].field;\n\t      const multiplier = multipliers[0];\n\t      return function (a, b) {\n\t        return multiplier * cmp(get_field(sort_fld, a), get_field(sort_fld, b));\n\t      };\n\t    } else {\n\t      return function (a, b) {\n\t        var i, result, field;\n\n\t        for (i = 0; i < sort_flds_count; i++) {\n\t          field = sort_flds[i].field;\n\t          result = multipliers[i] * cmp(get_field(field, a), get_field(field, b));\n\t          if (result) return result;\n\t        }\n\n\t        return 0;\n\t      };\n\t    }\n\t  }\n\n\t  /**\n\t   * Parses a search query and returns an object\n\t   * with tokens and fields ready to be populated\n\t   * with results.\n\t   *\n\t   */\n\t  prepareSearch(query, optsUser) {\n\t    const weights = {};\n\t    var options = Object.assign({}, optsUser);\n\t    propToArray(options, 'sort');\n\t    propToArray(options, 'sort_empty'); // convert fields to new format\n\n\t    if (options.fields) {\n\t      propToArray(options, 'fields');\n\t      const fields = [];\n\t      options.fields.forEach(field => {\n\t        if (typeof field == 'string') {\n\t          field = {\n\t            field: field,\n\t            weight: 1\n\t          };\n\t        }\n\n\t        fields.push(field);\n\t        weights[field.field] = 'weight' in field ? field.weight : 1;\n\t      });\n\t      options.fields = fields;\n\t    }\n\n\t    return {\n\t      options: options,\n\t      query: query.toLowerCase().trim(),\n\t      tokens: this.tokenize(query, options.respect_word_boundaries, weights),\n\t      total: 0,\n\t      items: [],\n\t      weights: weights,\n\t      getAttrFn: options.nesting ? getAttrNesting : getAttr\n\t    };\n\t  }\n\n\t  /**\n\t   * Searches through all items and returns a sorted array of matches.\n\t   *\n\t   */\n\t  search(query, options) {\n\t    var self = this,\n\t        score,\n\t        search;\n\t    search = this.prepareSearch(query, options);\n\t    options = search.options;\n\t    query = search.query; // generate result scoring function\n\n\t    const fn_score = options.score || self._getScoreFunction(search); // perform search and sort\n\n\n\t    if (query.length) {\n\t      iterate(self.items, (item, id) => {\n\t        score = fn_score(item);\n\n\t        if (options.filter === false || score > 0) {\n\t          search.items.push({\n\t            'score': score,\n\t            'id': id\n\t          });\n\t        }\n\t      });\n\t    } else {\n\t      iterate(self.items, (item, id) => {\n\t        search.items.push({\n\t          'score': 1,\n\t          'id': id\n\t        });\n\t      });\n\t    }\n\n\t    const fn_sort = self._getSortFunction(search);\n\n\t    if (fn_sort) search.items.sort(fn_sort); // apply limits\n\n\t    search.total = search.items.length;\n\n\t    if (typeof options.limit === 'number') {\n\t      search.items = search.items.slice(0, options.limit);\n\t    }\n\n\t    return search;\n\t  }\n\n\t}\n\n\t/**\n\t * Return a dom element from either a dom query string, jQuery object, a dom element or html string\n\t * https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n\t *\n\t * param query should be {}\n\t */\n\tconst getDom = query => {\n\t  if (query.jquery) {\n\t    return query[0];\n\t  }\n\n\t  if (query instanceof HTMLElement) {\n\t    return query;\n\t  }\n\n\t  if (query.indexOf('<') > -1) {\n\t    let div = document.createElement('div');\n\t    div.innerHTML = query.trim(); // Never return a text node of whitespace as the result\n\n\t    return div.firstChild;\n\t  }\n\n\t  return document.querySelector(query);\n\t};\n\tconst escapeQuery = query => {\n\t  return query.replace(/['\"\\\\]/g, '\\\\$&');\n\t};\n\t/**\n\t * Dispatch an event\n\t *\n\t */\n\n\tconst triggerEvent = (dom_el, event_name) => {\n\t  var event = document.createEvent('HTMLEvents');\n\t  event.initEvent(event_name, true, false);\n\t  dom_el.dispatchEvent(event);\n\t};\n\t/**\n\t * Apply CSS rules to a dom element\n\t *\n\t */\n\n\tconst applyCSS = (dom_el, css) => {\n\t  Object.assign(dom_el.style, css);\n\t};\n\t/**\n\t * Add css classes\n\t *\n\t */\n\n\tconst addClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.add(cls);\n\t    });\n\t  });\n\t};\n\t/**\n\t * Remove css classes\n\t *\n\t */\n\n\tconst removeClasses = (elmts, ...classes) => {\n\t  var norm_classes = classesArray(classes);\n\t  elmts = castAsArray(elmts);\n\t  elmts.map(el => {\n\t    norm_classes.map(cls => {\n\t      el.classList.remove(cls);\n\t    });\n\t  });\n\t};\n\t/**\n\t * Return arguments\n\t *\n\t */\n\n\tconst classesArray = args => {\n\t  var classes = [];\n\n\t  for (let _classes of args) {\n\t    if (typeof _classes === 'string') {\n\t      _classes = _classes.trim().split(/[\\11\\12\\14\\15\\40]/);\n\t    }\n\n\t    if (Array.isArray(_classes)) {\n\t      classes = classes.concat(_classes);\n\t    }\n\t  }\n\n\t  return classes.filter(Boolean);\n\t};\n\t/**\n\t * Create an array from arg if it's not already an array\n\t *\n\t */\n\n\tconst castAsArray = arg => {\n\t  if (!Array.isArray(arg)) {\n\t    arg = [arg];\n\t  }\n\n\t  return arg;\n\t};\n\t/**\n\t * Get the closest node to the evt.target matching the selector\n\t * Stops at wrapper\n\t *\n\t */\n\n\tconst parentMatch = (target, selector, wrapper) => {\n\t  if (wrapper && !wrapper.contains(target)) {\n\t    return;\n\t  }\n\n\t  while (target && target.matches) {\n\t    if (target.matches(selector)) {\n\t      return target;\n\t    }\n\n\t    target = target.parentNode;\n\t  }\n\t};\n\t/**\n\t * Get the first or last item from an array\n\t *\n\t * > 0 - right (last)\n\t * <= 0 - left (first)\n\t *\n\t */\n\n\tconst getTail = (list, direction = 0) => {\n\t  if (direction > 0) {\n\t    return list[list.length - 1];\n\t  }\n\n\t  return list[0];\n\t};\n\t/**\n\t * Return true if an object is empty\n\t *\n\t */\n\n\tconst isEmptyObject = obj => {\n\t  return Object.keys(obj).length === 0;\n\t};\n\t/**\n\t * Get the index of an element amongst sibling nodes of the same type\n\t *\n\t */\n\n\tconst nodeIndex = (el, amongst) => {\n\t  if (!el) return -1;\n\t  amongst = amongst || el.nodeName;\n\t  var i = 0;\n\n\t  while (el = el.previousElementSibling) {\n\t    if (el.matches(amongst)) {\n\t      i++;\n\t    }\n\t  }\n\n\t  return i;\n\t};\n\t/**\n\t * Set attributes of an element\n\t *\n\t */\n\n\tconst setAttr = (el, attrs) => {\n\t  for (const attr in attrs) {\n\t    let val = attrs[attr];\n\n\t    if (val == null) {\n\t      el.removeAttribute(attr);\n\t    } else {\n\t      el.setAttribute(attr, '' + val);\n\t    }\n\t  }\n\t};\n\t/**\n\t * Replace a node\n\t */\n\n\tconst replaceNode = (existing, replacement) => {\n\t  if (existing.parentNode) existing.parentNode.replaceChild(replacement, existing);\n\t};\n\n\t/**\n\t * highlight v3 | MIT license | Johann Burkard <jb@eaio.com>\n\t * Highlights arbitrary terms in a node.\n\t *\n\t * - Modified by Marshal <beatgates@gmail.com> 2011-6-24 (added regex)\n\t * - Modified by Brian Reavis <brian@thirdroute.com> 2012-8-27 (cleanup)\n\t */\n\tconst highlight = (element, regex) => {\n\t  if (regex === null) return; // convet string to regex\n\n\t  if (typeof regex === 'string') {\n\t    if (!regex.length) return;\n\t    regex = new RegExp(regex, 'i');\n\t  } // Wrap matching part of text node with highlighting <span>, e.g.\n\t  // Soccer  ->  <span class=\"highlight\">Soc</span>cer  for regex = /soc/i\n\n\n\t  const highlightText = node => {\n\t    var match = node.data.match(regex);\n\n\t    if (match && node.data.length > 0) {\n\t      var spannode = document.createElement('span');\n\t      spannode.className = 'highlight';\n\t      var middlebit = node.splitText(match.index);\n\t      middlebit.splitText(match[0].length);\n\t      var middleclone = middlebit.cloneNode(true);\n\t      spannode.appendChild(middleclone);\n\t      replaceNode(middlebit, spannode);\n\t      return 1;\n\t    }\n\n\t    return 0;\n\t  }; // Recurse element node, looking for child text nodes to highlight, unless element\n\t  // is childless, <script>, <style>, or already highlighted: <span class=\"hightlight\">\n\n\n\t  const highlightChildren = node => {\n\t    if (node.nodeType === 1 && node.childNodes && !/(script|style)/i.test(node.tagName) && (node.className !== 'highlight' || node.tagName !== 'SPAN')) {\n\t      for (var i = 0; i < node.childNodes.length; ++i) {\n\t        i += highlightRecursive(node.childNodes[i]);\n\t      }\n\t    }\n\t  };\n\n\t  const highlightRecursive = node => {\n\t    if (node.nodeType === 3) {\n\t      return highlightText(node);\n\t    }\n\n\t    highlightChildren(node);\n\t    return 0;\n\t  };\n\n\t  highlightRecursive(element);\n\t};\n\t/**\n\t * removeHighlight fn copied from highlight v5 and\n\t * edited to remove with(), pass js strict mode, and use without jquery\n\t */\n\n\tconst removeHighlight = el => {\n\t  var elements = el.querySelectorAll(\"span.highlight\");\n\t  Array.prototype.forEach.call(elements, function (el) {\n\t    var parent = el.parentNode;\n\t    parent.replaceChild(el.firstChild, el);\n\t    parent.normalize();\n\t  });\n\t};\n\n\tconst KEY_A = 65;\n\tconst KEY_RETURN = 13;\n\tconst KEY_ESC = 27;\n\tconst KEY_LEFT = 37;\n\tconst KEY_UP = 38;\n\tconst KEY_RIGHT = 39;\n\tconst KEY_DOWN = 40;\n\tconst KEY_BACKSPACE = 8;\n\tconst KEY_DELETE = 46;\n\tconst KEY_TAB = 9;\n\tconst IS_MAC = typeof navigator === 'undefined' ? false : /Mac/.test(navigator.userAgent);\n\tconst KEY_SHORTCUT = IS_MAC ? 'metaKey' : 'ctrlKey'; // ctrl key or apple key for ma\n\n\tvar defaults = {\n\t  options: [],\n\t  optgroups: [],\n\t  plugins: [],\n\t  delimiter: ',',\n\t  splitOn: null,\n\t  // regexp or string for splitting up values from a paste command\n\t  persist: true,\n\t  diacritics: true,\n\t  create: null,\n\t  createOnBlur: false,\n\t  createFilter: null,\n\t  highlight: true,\n\t  openOnFocus: true,\n\t  shouldOpen: null,\n\t  maxOptions: 50,\n\t  maxItems: null,\n\t  hideSelected: null,\n\t  duplicates: false,\n\t  addPrecedence: false,\n\t  selectOnTab: false,\n\t  preload: null,\n\t  allowEmptyOption: false,\n\t  closeAfterSelect: false,\n\t  loadThrottle: 300,\n\t  loadingClass: 'loading',\n\t  dataAttr: null,\n\t  //'data-data',\n\t  optgroupField: 'optgroup',\n\t  valueField: 'value',\n\t  labelField: 'text',\n\t  disabledField: 'disabled',\n\t  optgroupLabelField: 'label',\n\t  optgroupValueField: 'value',\n\t  lockOptgroupOrder: false,\n\t  sortField: '$order',\n\t  searchField: ['text'],\n\t  searchConjunction: 'and',\n\t  mode: null,\n\t  wrapperClass: 'ts-control',\n\t  inputClass: 'ts-input',\n\t  dropdownClass: 'ts-dropdown',\n\t  dropdownContentClass: 'ts-dropdown-content',\n\t  itemClass: 'item',\n\t  optionClass: 'option',\n\t  dropdownParent: null,\n\t  controlInput: null,\n\t  copyClassesToDropdown: true,\n\t  placeholder: null,\n\t  hidePlaceholder: null,\n\t  shouldLoad: function (query) {\n\t    return query.length > 0;\n\t  },\n\n\t  /*\n\t  load                 : null, // function(query, callback) { ... }\n\t  score                : null, // function(search) { ... }\n\t  onInitialize         : null, // function() { ... }\n\t  onChange             : null, // function(value) { ... }\n\t  onItemAdd            : null, // function(value, $item) { ... }\n\t  onItemRemove         : null, // function(value) { ... }\n\t  onClear              : null, // function() { ... }\n\t  onOptionAdd          : null, // function(value, data) { ... }\n\t  onOptionRemove       : null, // function(value) { ... }\n\t  onOptionClear        : null, // function() { ... }\n\t  onOptionGroupAdd     : null, // function(id, data) { ... }\n\t  onOptionGroupRemove  : null, // function(id) { ... }\n\t  onOptionGroupClear   : null, // function() { ... }\n\t  onDropdownOpen       : null, // function(dropdown) { ... }\n\t  onDropdownClose      : null, // function(dropdown) { ... }\n\t  onType               : null, // function(str) { ... }\n\t  onDelete             : null, // function(values) { ... }\n\t  */\n\t  render: {\n\t    /*\n\t    item: null,\n\t    optgroup: null,\n\t    optgroup_header: null,\n\t    option: null,\n\t    option_create: null\n\t    */\n\t  }\n\t};\n\n\t/**\n\t * Converts a scalar to its best string representation\n\t * for hash keys and HTML attribute values.\n\t *\n\t * Transformations:\n\t *   'str'     -> 'str'\n\t *   null      -> ''\n\t *   undefined -> ''\n\t *   true      -> '1'\n\t *   false     -> '0'\n\t *   0         -> '0'\n\t *   1         -> '1'\n\t *\n\t */\n\tconst hash_key = value => {\n\t  if (typeof value === 'undefined' || value === null) return null;\n\t  return get_hash(value);\n\t};\n\tconst get_hash = value => {\n\t  if (typeof value === 'boolean') return value ? '1' : '0';\n\t  return value + '';\n\t};\n\t/**\n\t * Escapes a string for use within HTML.\n\t *\n\t */\n\n\tconst escape_html = str => {\n\t  return (str + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n\t};\n\t/**\n\t * Debounce the user provided load function\n\t *\n\t */\n\n\tconst loadDebounce = (fn, delay) => {\n\t  var timeout;\n\t  return function (value, callback) {\n\t    var self = this;\n\n\t    if (timeout) {\n\t      self.loading = Math.max(self.loading - 1, 0);\n\t      clearTimeout(timeout);\n\t    }\n\n\t    timeout = setTimeout(function () {\n\t      timeout = null;\n\t      self.loadedSearches[value] = true;\n\t      fn.call(self, value, callback);\n\t    }, delay);\n\t  };\n\t};\n\t/**\n\t * Debounce all fired events types listed in `types`\n\t * while executing the provided `fn`.\n\t *\n\t */\n\n\tconst debounce_events = (self, types, fn) => {\n\t  var type;\n\t  var trigger = self.trigger;\n\t  var event_args = {}; // override trigger method\n\n\t  self.trigger = function () {\n\t    var type = arguments[0];\n\n\t    if (types.indexOf(type) !== -1) {\n\t      event_args[type] = arguments;\n\t    } else {\n\t      return trigger.apply(self, arguments);\n\t    }\n\t  }; // invoke provided function\n\n\n\t  fn.apply(self, []);\n\t  self.trigger = trigger; // trigger queued events\n\n\t  for (type in event_args) {\n\t    trigger.apply(self, event_args[type]);\n\t  }\n\t};\n\t/**\n\t * Determines the current selection within a text input control.\n\t * Returns an object containing:\n\t *   - start\n\t *   - length\n\t *\n\t */\n\n\tconst getSelection = input => {\n\t  return {\n\t    start: input.selectionStart || 0,\n\t    length: (input.selectionEnd || 0) - (input.selectionStart || 0)\n\t  };\n\t};\n\t/**\n\t * Prevent default\n\t *\n\t */\n\n\tconst preventDefault = (evt, stop = false) => {\n\t  if (evt) {\n\t    evt.preventDefault();\n\n\t    if (stop) {\n\t      evt.stopPropagation();\n\t    }\n\t  }\n\t};\n\t/**\n\t * Prevent default\n\t *\n\t */\n\n\tconst addEvent = (target, type, callback, options) => {\n\t  target.addEventListener(type, callback, options);\n\t};\n\t/**\n\t * Return true if the requested key is down\n\t * Will return false if more than one control character is pressed ( when [ctrl+shift+a] != [ctrl+a] )\n\t * The current evt may not always set ( eg calling advanceSelection() )\n\t *\n\t */\n\n\tconst isKeyDown = (key_name, evt) => {\n\t  if (!evt) {\n\t    return false;\n\t  }\n\n\t  if (!evt[key_name]) {\n\t    return false;\n\t  }\n\n\t  var count = (evt.altKey ? 1 : 0) + (evt.ctrlKey ? 1 : 0) + (evt.shiftKey ? 1 : 0) + (evt.metaKey ? 1 : 0);\n\n\t  if (count === 1) {\n\t    return true;\n\t  }\n\n\t  return false;\n\t};\n\t/**\n\t * Get the id of an element\n\t * If the id attribute is not set, set the attribute with the given id\n\t *\n\t */\n\n\tconst getId = (el, id) => {\n\t  const existing_id = el.getAttribute('id');\n\n\t  if (existing_id) {\n\t    return existing_id;\n\t  }\n\n\t  el.setAttribute('id', id);\n\t  return id;\n\t};\n\t/**\n\t * Returns a string with backslashes added before characters that need to be escaped.\n\t */\n\n\tconst addSlashes = str => {\n\t  return str.replace(/[\\\\\"']/g, '\\\\$&');\n\t};\n\t/**\n\t *\n\t */\n\n\tconst append = (parent, node) => {\n\t  if (node) parent.append(node);\n\t};\n\n\tfunction getSettings(input, settings_user) {\n\t  var settings = Object.assign({}, defaults, settings_user);\n\t  var attr_data = settings.dataAttr;\n\t  var field_label = settings.labelField;\n\t  var field_value = settings.valueField;\n\t  var field_disabled = settings.disabledField;\n\t  var field_optgroup = settings.optgroupField;\n\t  var field_optgroup_label = settings.optgroupLabelField;\n\t  var field_optgroup_value = settings.optgroupValueField;\n\t  var tag_name = input.tagName.toLowerCase();\n\t  var placeholder = input.getAttribute('placeholder') || input.getAttribute('data-placeholder');\n\n\t  if (!placeholder && !settings.allowEmptyOption) {\n\t    let option = input.querySelector('option[value=\"\"]');\n\n\t    if (option) {\n\t      placeholder = option.textContent;\n\t    }\n\t  }\n\n\t  var settings_element = {\n\t    placeholder: placeholder,\n\t    options: [],\n\t    optgroups: [],\n\t    items: [],\n\t    maxItems: null\n\t  };\n\t  /**\n\t   * Initialize from a <select> element.\n\t   *\n\t   */\n\n\t  var init_select = () => {\n\t    var tagName;\n\t    var options = settings_element.options;\n\t    var optionsMap = {};\n\t    var group_count = 1;\n\n\t    var readData = el => {\n\t      var data = Object.assign({}, el.dataset); // get plain object from DOMStringMap\n\n\t      var json = attr_data && data[attr_data];\n\n\t      if (typeof json === 'string' && json.length) {\n\t        data = Object.assign(data, JSON.parse(json));\n\t      }\n\n\t      return data;\n\t    };\n\n\t    var addOption = (option, group) => {\n\t      var value = hash_key(option.value);\n\t      if (value == null) return;\n\t      if (!value && !settings.allowEmptyOption) return; // if the option already exists, it's probably been\n\t      // duplicated in another optgroup. in this case, push\n\t      // the current group to the \"optgroup\" property on the\n\t      // existing option so that it's rendered in both places.\n\n\t      if (optionsMap.hasOwnProperty(value)) {\n\t        if (group) {\n\t          var arr = optionsMap[value][field_optgroup];\n\n\t          if (!arr) {\n\t            optionsMap[value][field_optgroup] = group;\n\t          } else if (!Array.isArray(arr)) {\n\t            optionsMap[value][field_optgroup] = [arr, group];\n\t          } else {\n\t            arr.push(group);\n\t          }\n\t        }\n\t      } else {\n\t        var option_data = readData(option);\n\t        option_data[field_label] = option_data[field_label] || option.textContent;\n\t        option_data[field_value] = option_data[field_value] || value;\n\t        option_data[field_disabled] = option_data[field_disabled] || option.disabled;\n\t        option_data[field_optgroup] = option_data[field_optgroup] || group;\n\t        option_data.$option = option;\n\t        optionsMap[value] = option_data;\n\t        options.push(option_data);\n\t      }\n\n\t      if (option.selected) {\n\t        settings_element.items.push(value);\n\t      }\n\t    };\n\n\t    var addGroup = optgroup => {\n\t      var id, optgroup_data;\n\t      optgroup_data = readData(optgroup);\n\t      optgroup_data[field_optgroup_label] = optgroup_data[field_optgroup_label] || optgroup.getAttribute('label') || '';\n\t      optgroup_data[field_optgroup_value] = optgroup_data[field_optgroup_value] || group_count++;\n\t      optgroup_data[field_disabled] = optgroup_data[field_disabled] || optgroup.disabled;\n\t      settings_element.optgroups.push(optgroup_data);\n\t      id = optgroup_data[field_optgroup_value];\n\n\t      for (const option of optgroup.children) {\n\t        addOption(option, id);\n\t      }\n\t    };\n\n\t    settings_element.maxItems = input.hasAttribute('multiple') ? null : 1;\n\n\t    for (const child of input.children) {\n\t      tagName = child.tagName.toLowerCase();\n\n\t      if (tagName === 'optgroup') {\n\t        addGroup(child);\n\t      } else if (tagName === 'option') {\n\t        addOption(child);\n\t      }\n\t    }\n\t  };\n\t  /**\n\t   * Initialize from a <input type=\"text\"> element.\n\t   *\n\t   */\n\n\n\t  var init_textbox = () => {\n\t    const data_raw = input.getAttribute(attr_data);\n\n\t    if (!data_raw) {\n\t      var value = input.value.trim() || '';\n\t      if (!settings.allowEmptyOption && !value.length) return;\n\t      const values = value.split(settings.delimiter);\n\n\t      for (const _value of values) {\n\t        const option = {};\n\t        option[field_label] = _value;\n\t        option[field_value] = _value;\n\t        settings_element.options.push(option);\n\t      }\n\n\t      settings_element.items = values;\n\t    } else {\n\t      settings_element.options = JSON.parse(data_raw);\n\n\t      for (const opt of settings_element.options) {\n\t        settings_element.items.push(opt[field_value]);\n\t      }\n\t    }\n\t  };\n\n\t  if (tag_name === 'select') {\n\t    init_select();\n\t  } else {\n\t    init_textbox();\n\t  }\n\n\t  return Object.assign({}, defaults, settings_element, settings_user);\n\t}\n\n\tvar instance_i = 0;\n\tclass TomSelect extends MicroPlugin(MicroEvent) {\n\t  constructor(input_arg, settings) {\n\t    super();\n\t    this.order = 0;\n\t    this.tab_key = false;\n\t    this.isOpen = false;\n\t    this.isDisabled = false;\n\t    this.isInvalid = false;\n\t    this.isLocked = false;\n\t    this.isFocused = false;\n\t    this.isInputHidden = false;\n\t    this.isSetup = false;\n\t    this.ignoreFocus = false;\n\t    this.hasOptions = false;\n\t    this.lastValue = '';\n\t    this.caretPos = 0;\n\t    this.loading = 0;\n\t    this.loadedSearches = {};\n\t    this.activeOption = null;\n\t    this.activeItems = [];\n\t    this.optgroups = {};\n\t    this.options = {};\n\t    this.userOptions = {};\n\t    this.items = [];\n\t    this.renderCache = {\n\t      'item': {},\n\t      'option': {}\n\t    };\n\t    instance_i++;\n\t    var dir;\n\t    var input = getDom(input_arg);\n\t    var self = this;\n\n\t    if (input.tomselect) {\n\t      throw new Error('Tom Select already initialized on this element');\n\t    }\n\n\t    input.tomselect = this; // detect rtl environment\n\n\t    var computedStyle = window.getComputedStyle && window.getComputedStyle(input, null);\n\t    dir = computedStyle.getPropertyValue('direction'); // setup default state\n\n\t    this.settings = getSettings(input, settings);\n\t    this.input = input;\n\t    this.tabIndex = input.tabIndex || 0;\n\t    this.is_select_tag = input.tagName.toLowerCase() === 'select';\n\t    this.rtl = /rtl/i.test(dir);\n\t    this.inputId = getId(input, 'tomselect-' + instance_i);\n\t    this.isRequired = input.required; // search system\n\n\t    this.sifter = new Sifter(this.options, {\n\t      diacritics: this.settings.diacritics\n\t    });\n\t    this.setupOptions(this.settings.options, this.settings.optgroups);\n\t    delete this.settings.optgroups;\n\t    delete this.settings.options; // option-dependent defaults\n\n\t    this.settings.mode = this.settings.mode || (this.settings.maxItems === 1 ? 'single' : 'multi');\n\n\t    if (typeof this.settings.hideSelected !== 'boolean') {\n\t      this.settings.hideSelected = this.settings.mode === 'multi';\n\t    }\n\n\t    if (typeof this.settings.hidePlaceholder !== 'boolean') {\n\t      this.settings.hidePlaceholder = this.settings.mode !== 'multi';\n\t    } // set up createFilter callback\n\n\n\t    var filter = this.settings.createFilter;\n\n\t    if (typeof filter !== 'function') {\n\t      if (typeof filter === 'string') {\n\t        filter = new RegExp(filter);\n\t      }\n\n\t      if (filter instanceof RegExp) {\n\t        this.settings.createFilter = input => filter.test(input);\n\t      } else {\n\t        this.settings.createFilter = () => true;\n\t      }\n\t    }\n\n\t    this.initializePlugins(this.settings.plugins);\n\t    this.setupCallbacks();\n\t    this.setupTemplates();\n\t    /**\n\t     * Create all elements and set up event bindings.\n\t     *\n\t     */\n\n\t    var settings = self.settings;\n\t    var wrapper;\n\t    var control;\n\t    var control_input;\n\t    var dropdown;\n\t    var dropdown_content;\n\t    var inputMode;\n\t    var classes;\n\t    var classes_plugins;\n\t    var input = self.input;\n\t    var control_id;\n\t    const passive_event = {\n\t      passive: true\n\t    };\n\t    const listboxId = self.inputId + '-ts-dropdown';\n\t    inputMode = self.settings.mode;\n\t    classes = input.getAttribute('class') || '';\n\t    wrapper = getDom('<div>');\n\t    addClasses(wrapper, settings.wrapperClass, classes, inputMode);\n\t    control = getDom('<div class=\"items\">');\n\t    addClasses(control, settings.inputClass);\n\t    append(wrapper, control);\n\t    dropdown = self._render('dropdown');\n\t    addClasses(dropdown, settings.dropdownClass, inputMode);\n\t    dropdown_content = getDom(`<div role=\"listbox\" id=\"${listboxId}\" tabindex=\"-1\">`);\n\t    addClasses(dropdown_content, settings.dropdownContentClass);\n\t    append(dropdown, dropdown_content);\n\t    getDom(settings.dropdownParent || wrapper).appendChild(dropdown);\n\n\t    if (settings.controlInput) {\n\t      control_input = getDom(settings.controlInput);\n\t    } else {\n\t      control_input = getDom('<input type=\"text\" autocomplete=\"off\" size=\"1\" />'); // set attributes\n\n\t      var attrs = ['autocorrect', 'autocapitalize', 'autocomplete'];\n\n\t      for (const attr of attrs) {\n\t        if (input.getAttribute(attr)) {\n\t          setAttr(control_input, {\n\t            [attr]: input.getAttribute(attr)\n\t          });\n\t        }\n\t      }\n\t    }\n\n\t    if (!settings.controlInput) {\n\t      control_input.tabIndex = input.disabled ? -1 : self.tabIndex;\n\t      control.appendChild(control_input);\n\t    }\n\n\t    setAttr(control_input, {\n\t      role: 'combobox',\n\t      haspopup: 'listbox',\n\t      'aria-expanded': 'false',\n\t      'aria-controls': listboxId\n\t    });\n\t    control_id = getId(control_input, self.inputId + '-tomselected');\n\t    let query = \"label[for='\" + escapeQuery(self.inputId) + \"']\";\n\t    let label = document.querySelector(query);\n\n\t    if (label) {\n\t      setAttr(label, {\n\t        for: control_id\n\t      });\n\t      let label_id = getId(label, self.inputId + '-ts-label');\n\t      setAttr(dropdown_content, {\n\t        'aria-labelledby': label_id\n\t      });\n\t    }\n\n\t    if (self.settings.copyClassesToDropdown) {\n\t      addClasses(dropdown, classes);\n\t    }\n\n\t    wrapper.style.width = input.style.width;\n\n\t    if (self.plugins.names.length) {\n\t      classes_plugins = 'plugin-' + self.plugins.names.join(' plugin-');\n\t      addClasses([wrapper, dropdown], classes_plugins);\n\t    }\n\n\t    if ((settings.maxItems === null || settings.maxItems > 1) && self.is_select_tag) {\n\t      setAttr(input, {\n\t        multiple: 'multiple'\n\t      });\n\t    }\n\n\t    if (self.settings.placeholder) {\n\t      setAttr(control_input, {\n\t        placeholder: settings.placeholder\n\t      });\n\t    } // if splitOn was not passed in, construct it from the delimiter to allow pasting universally\n\n\n\t    if (!self.settings.splitOn && self.settings.delimiter) {\n\t      self.settings.splitOn = new RegExp('\\\\s*' + escape_regex(self.settings.delimiter) + '+\\\\s*');\n\t    } // debounce user defined load() if loadThrottle > 0\n\t    // after initializePlugins() so plugins can create/modify user defined loaders\n\n\n\t    if (this.settings.load && this.settings.loadThrottle) {\n\t      this.settings.load = loadDebounce(this.settings.load, this.settings.loadThrottle);\n\t    }\n\n\t    this.control = control;\n\t    this.control_input = control_input;\n\t    this.wrapper = wrapper;\n\t    this.dropdown = dropdown;\n\t    this.dropdown_content = dropdown_content;\n\t    self.control_input.type = input.type; // clicking on an option should select it\n\n\t    addEvent(dropdown, 'click', evt => {\n\t      const option = parentMatch(evt.target, '[data-selectable]');\n\n\t      if (option) {\n\t        self.onOptionSelect(evt, option);\n\t        preventDefault(evt, true);\n\t      }\n\t    });\n\t    addEvent(control, 'click', evt => {\n\t      var target_match = parentMatch(evt.target, '.' + self.settings.itemClass, control);\n\n\t      if (target_match && self.onItemSelect(evt, target_match)) {\n\t        preventDefault(evt, true);\n\t        return;\n\t      } // retain focus (see control_input mousedown)\n\n\n\t      if (control_input.value != '') {\n\t        return;\n\t      }\n\n\t      self.onClick();\n\t      preventDefault(evt, true);\n\t    }); // retain focus by preventing native handling. if the\n\t    // event target is the input it should not be modified.\n\t    // otherwise, text selection within the input won't work.\n\n\t    addEvent(control_input, 'mousedown', e => {\n\t      if (control_input.value !== '') {\n\t        e.stopPropagation();\n\t      }\n\t    });\n\t    addEvent(control_input, 'keydown', e => self.onKeyDown(e));\n\t    addEvent(control_input, 'keyup', e => self.onKeyUp(e));\n\t    addEvent(control_input, 'keypress', e => self.onKeyPress(e));\n\t    addEvent(control_input, 'resize', () => self.positionDropdown(), passive_event);\n\t    addEvent(control_input, 'blur', () => self.onBlur());\n\t    addEvent(control_input, 'focus', e => self.onFocus(e));\n\t    addEvent(control_input, 'paste', e => self.onPaste(e));\n\n\t    const doc_mousedown = evt => {\n\t      // blur if target is outside of this instance\n\t      // dropdown is not always inside wrapper\n\t      const target = evt.composedPath()[0];\n\n\t      if (!wrapper.contains(target) && !dropdown.contains(target)) {\n\t        if (self.isFocused) {\n\t          self.blur();\n\t        }\n\n\t        self.inputState();\n\t        return;\n\t      } // clicking anywhere in the control should not blur the control_input & close the dropdown\n\n\n\t      preventDefault(evt, true);\n\t    };\n\n\t    var win_scroll = () => {\n\t      if (self.isOpen) {\n\t        self.positionDropdown();\n\t      }\n\t    };\n\n\t    addEvent(document, 'mousedown', doc_mousedown);\n\t    addEvent(window, 'sroll', win_scroll, passive_event);\n\t    addEvent(window, 'resize', win_scroll, passive_event);\n\n\t    this._destroy = () => {\n\t      document.removeEventListener('mousedown', doc_mousedown);\n\t      window.removeEventListener('sroll', win_scroll);\n\t      window.removeEventListener('resize', win_scroll);\n\t    }; // store original html and tab index so that they can be\n\t    // restored when the destroy() method is called.\n\n\n\t    this.revertSettings = {\n\t      innerHTML: input.innerHTML,\n\t      tabIndex: input.tabIndex\n\t    };\n\t    input.tabIndex = -1;\n\t    setAttr(input, {\n\t      hidden: 'hidden'\n\t    });\n\t    input.insertAdjacentElement('afterend', self.wrapper);\n\t    self.setValue(settings.items);\n\t    settings.items = [];\n\t    addEvent(input, 'invalid', e => {\n\t      preventDefault(e);\n\n\t      if (!self.isInvalid) {\n\t        self.isInvalid = true;\n\t        self.refreshState();\n\t      }\n\t    });\n\t    self.updateOriginalInput();\n\t    self.refreshItems();\n\t    self.close(false);\n\t    self.inputState();\n\t    self.isSetup = true;\n\n\t    if (input.disabled) {\n\t      self.disable();\n\t    }\n\n\t    self.on('change', this.onChange);\n\t    addClasses(input, 'tomselected');\n\t    self.trigger('initialize'); // preload options\n\n\t    if (settings.preload === true) {\n\t      self.load('');\n\t    }\n\n\t    self.setup();\n\t  }\n\t  /**\n\t   * @deprecated v1.7.6\n\t   *\n\t   */\n\n\n\t  setup() {}\n\t  /**\n\t   * Register options and optgroups\n\t   *\n\t   */\n\n\n\t  setupOptions(options = [], optgroups = []) {\n\t    // build options table\n\t    for (const option of options) {\n\t      this.registerOption(option);\n\t    } // build optgroup table\n\n\n\t    for (const optgroup of optgroups) {\n\t      this.registerOptionGroup(optgroup);\n\t    }\n\t  }\n\t  /**\n\t   * Sets up default rendering functions.\n\t   */\n\n\n\t  setupTemplates() {\n\t    var self = this;\n\t    var field_label = self.settings.labelField;\n\t    var field_optgroup = self.settings.optgroupLabelField;\n\t    var templates = {\n\t      'optgroup': data => {\n\t        let optgroup = document.createElement('div');\n\t        optgroup.className = 'optgroup';\n\t        optgroup.appendChild(data.options);\n\t        return optgroup;\n\t      },\n\t      'optgroup_header': (data, escape) => {\n\t        return '<div class=\"optgroup-header\">' + escape(data[field_optgroup]) + '</div>';\n\t      },\n\t      'option': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'item': (data, escape) => {\n\t        return '<div>' + escape(data[field_label]) + '</div>';\n\t      },\n\t      'option_create': (data, escape) => {\n\t        return '<div class=\"create\">Add <strong>' + escape(data.input) + '</strong>&hellip;</div>';\n\t      },\n\t      'no_results': () => {\n\t        return '<div class=\"no-results\">No results found</div>';\n\t      },\n\t      'loading': () => {\n\t        return '<div class=\"spinner\"></div>';\n\t      },\n\t      'not_loading': () => {},\n\t      'dropdown': () => {\n\t        return '<div></div>';\n\t      }\n\t    };\n\t    self.settings.render = Object.assign({}, templates, self.settings.render);\n\t  }\n\t  /**\n\t   * Maps fired events to callbacks provided\n\t   * in the settings used when creating the control.\n\t   */\n\n\n\t  setupCallbacks() {\n\t    var key, fn;\n\t    var callbacks = {\n\t      'initialize': 'onInitialize',\n\t      'change': 'onChange',\n\t      'item_add': 'onItemAdd',\n\t      'item_remove': 'onItemRemove',\n\t      'item_select': 'onItemSelect',\n\t      'clear': 'onClear',\n\t      'option_add': 'onOptionAdd',\n\t      'option_remove': 'onOptionRemove',\n\t      'option_clear': 'onOptionClear',\n\t      'optgroup_add': 'onOptionGroupAdd',\n\t      'optgroup_remove': 'onOptionGroupRemove',\n\t      'optgroup_clear': 'onOptionGroupClear',\n\t      'dropdown_open': 'onDropdownOpen',\n\t      'dropdown_close': 'onDropdownClose',\n\t      'type': 'onType',\n\t      'load': 'onLoad',\n\t      'focus': 'onFocus',\n\t      'blur': 'onBlur'\n\t    };\n\n\t    for (key in callbacks) {\n\t      fn = this.settings[callbacks[key]];\n\t      if (fn) this.on(key, fn);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered when the main control element\n\t   * has a click event.\n\t   *\n\t   */\n\n\n\t  onClick() {\n\t    var self = this;\n\n\t    if (self.activeItems.length > 0) {\n\t      self.clearActiveItems();\n\t      self.focus();\n\t      return;\n\t    }\n\n\t    if (self.isFocused && self.isOpen) {\n\t      self.blur();\n\t    } else {\n\t      self.focus();\n\t    }\n\t  }\n\t  /**\n\t   * @deprecated v1.7\n\t   *\n\t   */\n\n\n\t  onMouseDown() {}\n\t  /**\n\t   * Triggered when the value of the control has been changed.\n\t   * This should propagate the event to the original DOM\n\t   * input / select element.\n\t   */\n\n\n\t  onChange() {\n\t    triggerEvent(this.input, 'input');\n\t    triggerEvent(this.input, 'change');\n\t  }\n\t  /**\n\t   * Triggered on <input> paste.\n\t   *\n\t   */\n\n\n\t  onPaste(e) {\n\t    var self = this;\n\n\t    if (self.isFull() || self.isInputHidden || self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    } // If a regex or string is included, this will split the pasted\n\t    // input and create Items for each separate value\n\n\n\t    if (self.settings.splitOn) {\n\t      // Wait for pasted text to be recognized in value\n\t      setTimeout(() => {\n\t        var pastedText = self.inputValue();\n\n\t        if (!pastedText.match(self.settings.splitOn)) {\n\t          return;\n\t        }\n\n\t        var splitInput = pastedText.trim().split(self.settings.splitOn);\n\n\t        for (const piece of splitInput) {\n\t          self.createItem(piece);\n\t        }\n\t      }, 0);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> keypress.\n\t   *\n\t   */\n\n\n\t  onKeyPress(e) {\n\t    var self = this;\n\n\t    if (self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    var character = String.fromCharCode(e.keyCode || e.which);\n\n\t    if (self.settings.create && self.settings.mode === 'multi' && character === self.settings.delimiter) {\n\t      self.createItem();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> keydown.\n\t   *\n\t   */\n\n\n\t  onKeyDown(e) {\n\t    var self = this;\n\n\t    if (self.isLocked) {\n\t      if (e.keyCode !== KEY_TAB) {\n\t        preventDefault(e);\n\t      }\n\n\t      return;\n\t    }\n\n\t    switch (e.keyCode) {\n\t      // ctrl+A: select all\n\t      case KEY_A:\n\t        if (isKeyDown(KEY_SHORTCUT, e)) {\n\t          self.selectAll();\n\t          return;\n\t        }\n\n\t        break;\n\t      // esc: close dropdown\n\n\t      case KEY_ESC:\n\t        if (self.isOpen) {\n\t          preventDefault(e, true);\n\t          self.close();\n\t        }\n\n\t        self.clearActiveItems();\n\t        return;\n\t      // down: open dropdown or move selection down\n\n\t      case KEY_DOWN:\n\t        if (!self.isOpen && self.hasOptions) {\n\t          self.open();\n\t        } else if (self.activeOption) {\n\t          let next = self.getAdjacent(self.activeOption, 1);\n\t          if (next) self.setActiveOption(next);\n\t        }\n\n\t        preventDefault(e);\n\t        return;\n\t      // up: move selection up\n\n\t      case KEY_UP:\n\t        if (self.activeOption) {\n\t          let prev = self.getAdjacent(self.activeOption, -1);\n\t          if (prev) self.setActiveOption(prev);\n\t        }\n\n\t        preventDefault(e);\n\t        return;\n\t      // return: select active option\n\n\t      case KEY_RETURN:\n\t        if (self.isOpen && self.activeOption) {\n\t          self.onOptionSelect(e, self.activeOption);\n\t          preventDefault(e); // if the option_create=null, the dropdown might be closed\n\t        } else if (self.settings.create && self.createItem()) {\n\t          preventDefault(e);\n\t        }\n\n\t        return;\n\t      // left: modifiy item selection to the left\n\n\t      case KEY_LEFT:\n\t        self.advanceSelection(-1, e);\n\t        return;\n\t      // right: modifiy item selection to the right\n\n\t      case KEY_RIGHT:\n\t        self.advanceSelection(1, e);\n\t        return;\n\t      // tab: select active option and/or create item\n\n\t      case KEY_TAB:\n\t        if (self.settings.selectOnTab) {\n\t          if (self.isOpen && self.activeOption) {\n\t            self.tab_key = true;\n\t            self.onOptionSelect(e, self.activeOption); // prevent default [tab] behaviour of jump to the next field\n\t            // if select isFull, then the dropdown won't be open and [tab] will work normally\n\n\t            preventDefault(e);\n\t            self.tab_key = false;\n\t          }\n\n\t          if (self.settings.create && self.createItem()) {\n\t            preventDefault(e);\n\t          }\n\t        }\n\n\t        return;\n\t      // delete|backspace: delete items\n\n\t      case KEY_BACKSPACE:\n\t      case KEY_DELETE:\n\t        self.deleteSelection(e);\n\t        return;\n\t    } // don't enter text in the control_input when active items are selected\n\n\n\t    if (self.isInputHidden && !isKeyDown(KEY_SHORTCUT, e)) {\n\t      preventDefault(e);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> keyup.\n\t   *\n\t   */\n\n\n\t  onKeyUp(e) {\n\t    var self = this;\n\n\t    if (self.isLocked) {\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    var value = self.inputValue();\n\n\t    if (self.lastValue !== value) {\n\t      self.lastValue = value;\n\n\t      if (self.settings.shouldLoad.call(self, value)) {\n\t        self.load(value);\n\t      }\n\n\t      self.refreshOptions();\n\t      self.trigger('type', value);\n\t    }\n\t  }\n\t  /**\n\t   * Triggered on <input> focus.\n\t   *\n\t   */\n\n\n\t  onFocus(e) {\n\t    var self = this;\n\t    var wasFocused = self.isFocused;\n\n\t    if (self.isDisabled) {\n\t      self.blur();\n\t      preventDefault(e);\n\t      return;\n\t    }\n\n\t    if (self.ignoreFocus) return;\n\t    self.isFocused = true;\n\t    if (self.settings.preload === 'focus') self.load('');\n\t    if (!wasFocused) self.trigger('focus');\n\n\t    if (!self.activeItems.length) {\n\t      self.showInput();\n\t      self.refreshOptions(!!self.settings.openOnFocus);\n\t    }\n\n\t    self.refreshState();\n\t  }\n\t  /**\n\t   * Triggered on <input> blur.\n\t   *\n\t   */\n\n\n\t  onBlur() {\n\t    var self = this;\n\t    if (!self.isFocused) return;\n\t    self.isFocused = false;\n\t    self.ignoreFocus = false;\n\n\t    var deactivate = () => {\n\t      self.close();\n\t      self.setActiveItem();\n\t      self.setCaret(self.items.length);\n\t      self.trigger('blur');\n\t    };\n\n\t    if (self.settings.create && self.settings.createOnBlur) {\n\t      self.createItem(null, false, deactivate);\n\t    } else {\n\t      deactivate();\n\t    }\n\t  }\n\t  /**\n\t   * Triggered when the user clicks on an option\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\n\n\t  onOptionSelect(evt, option) {\n\t    var value,\n\t        self = this;\n\n\t    if (!option) {\n\t      return;\n\t    } // should not be possible to trigger a option under a disabled optgroup\n\n\n\t    if (option.parentElement && option.parentElement.matches('[data-disabled]')) {\n\t      return;\n\t    }\n\n\t    if (option.classList.contains('create')) {\n\t      self.createItem(null, true, () => {\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\t      });\n\t    } else {\n\t      value = option.dataset.value;\n\n\t      if (typeof value !== 'undefined') {\n\t        self.lastQuery = null;\n\t        self.addItem(value);\n\n\t        if (self.settings.closeAfterSelect) {\n\t          self.close();\n\t        }\n\n\t        if (!self.settings.hideSelected && evt.type && /click/.test(evt.type)) {\n\t          self.setActiveOption(option);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Triggered when the user clicks on an item\n\t   * that has been selected.\n\t   *\n\t   */\n\n\n\t  onItemSelect(evt, item) {\n\t    var self = this;\n\n\t    if (!self.isLocked && self.settings.mode === 'multi') {\n\t      preventDefault(evt);\n\t      self.setActiveItem(item, evt);\n\t      return true;\n\t    }\n\n\t    return false;\n\t  }\n\t  /**\n\t   * Determines whether or not to invoke\n\t   * the user-provided option provider / loader\n\t   *\n\t   * Note, there is a subtle difference between\n\t   * this.canLoad() and this.settings.shouldLoad();\n\t   *\n\t   *\t- settings.shouldLoad() is a user-input validator.\n\t   *\tWhen false is returned, the not_loading template\n\t   *\twill be added to the dropdown\n\t   *\n\t   *\t- canLoad() is lower level validator that checks\n\t   * \tthe Tom Select instance. There is no inherent user\n\t   *\tfeedback when canLoad returns false\n\t   *\n\t   */\n\n\n\t  canLoad(value) {\n\t    if (!this.settings.load) return false;\n\t    if (this.loadedSearches.hasOwnProperty(value)) return false;\n\t    return true;\n\t  }\n\t  /**\n\t   * Invokes the user-provided option provider / loader.\n\t   *\n\t   */\n\n\n\t  load(value) {\n\t    const self = this;\n\t    if (!self.canLoad(value)) return;\n\t    addClasses(self.wrapper, self.settings.loadingClass);\n\t    self.loading++;\n\t    const callback = self.loadCallback.bind(self);\n\t    self.settings.load.call(self, value, callback);\n\t  }\n\t  /**\n\t   * Invoked by the user-provided option provider\n\t   *\n\t   */\n\n\n\t  loadCallback(options, optgroups) {\n\t    const self = this;\n\t    self.loading = Math.max(self.loading - 1, 0);\n\t    self.lastQuery = null;\n\t    self.clearActiveOption(); // when new results load, focus should be on first option\n\n\t    self.setupOptions(options, optgroups);\n\t    self.refreshOptions(self.isFocused && !self.isInputHidden);\n\n\t    if (!self.loading) {\n\t      removeClasses(self.wrapper, self.settings.loadingClass);\n\t    }\n\n\t    self.trigger('load', options, optgroups);\n\t  }\n\t  /**\n\t   * Sets the input field of the control to the specified value.\n\t   *\n\t   */\n\n\n\t  setTextboxValue(value = '') {\n\t    var input = this.control_input;\n\t    var changed = input.value !== value;\n\n\t    if (changed) {\n\t      input.value = value;\n\t      triggerEvent(input, 'update');\n\t      this.lastValue = value;\n\t    }\n\t  }\n\t  /**\n\t   * Returns the value of the control. If multiple items\n\t   * can be selected (e.g. <select multiple>), this returns\n\t   * an array. If only one item can be selected, this\n\t   * returns a string.\n\t   *\n\t   */\n\n\n\t  getValue() {\n\t    if (this.is_select_tag && this.input.hasAttribute('multiple')) {\n\t      return this.items;\n\t    }\n\n\t    return this.items.join(this.settings.delimiter);\n\t  }\n\t  /**\n\t   * Resets the selected items to the given value.\n\t   *\n\t   */\n\n\n\t  setValue(value, silent) {\n\t    var events = silent ? [] : ['change'];\n\t    debounce_events(this, events, () => {\n\t      this.clear(silent);\n\t      this.addItems(value, silent);\n\t    });\n\t  }\n\t  /**\n\t   * Resets the number of max items to the given value\n\t   *\n\t   */\n\n\n\t  setMaxItems(value) {\n\t    if (value === 0) value = null; //reset to unlimited items.\n\n\t    this.settings.maxItems = value;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Sets the selected item.\n\t   *\n\t   */\n\n\n\t  setActiveItem(item, e) {\n\t    var self = this;\n\t    var eventName;\n\t    var i, begin, end, swap;\n\t    var last;\n\t    if (self.settings.mode === 'single') return; // clear the active selection\n\n\t    if (!item) {\n\t      self.clearActiveItems();\n\n\t      if (self.isFocused) {\n\t        self.showInput();\n\t      }\n\n\t      return;\n\t    } // modify selection\n\n\n\t    eventName = e && e.type.toLowerCase();\n\n\t    if (eventName === 'click' && isKeyDown('shiftKey', e) && self.activeItems.length) {\n\t      last = self.getLastActive();\n\t      begin = Array.prototype.indexOf.call(self.control.children, last);\n\t      end = Array.prototype.indexOf.call(self.control.children, item);\n\n\t      if (begin > end) {\n\t        swap = begin;\n\t        begin = end;\n\t        end = swap;\n\t      }\n\n\t      for (i = begin; i <= end; i++) {\n\t        item = self.control.children[i];\n\n\t        if (self.activeItems.indexOf(item) === -1) {\n\t          self.setActiveItemClass(item);\n\t        }\n\t      }\n\n\t      preventDefault(e);\n\t    } else if (eventName === 'click' && isKeyDown(KEY_SHORTCUT, e) || eventName === 'keydown' && isKeyDown('shiftKey', e)) {\n\t      if (item.classList.contains('active')) {\n\t        self.removeActiveItem(item);\n\t      } else {\n\t        self.setActiveItemClass(item);\n\t      }\n\t    } else {\n\t      self.clearActiveItems();\n\t      self.setActiveItemClass(item);\n\t    } // ensure control has focus\n\n\n\t    self.hideInput();\n\n\t    if (!self.isFocused) {\n\t      self.focus();\n\t    }\n\t  }\n\t  /**\n\t   * Set the active and last-active classes\n\t   *\n\t   */\n\n\n\t  setActiveItemClass(item) {\n\t    const self = this;\n\t    const last_active = self.control.querySelector('.last-active');\n\t    if (last_active) removeClasses(last_active, 'last-active');\n\t    addClasses(item, 'active last-active');\n\t    self.trigger('item_select', item);\n\n\t    if (self.activeItems.indexOf(item) == -1) {\n\t      self.activeItems.push(item);\n\t    }\n\t  }\n\t  /**\n\t   * Remove active item\n\t   *\n\t   */\n\n\n\t  removeActiveItem(item) {\n\t    var idx = this.activeItems.indexOf(item);\n\t    this.activeItems.splice(idx, 1);\n\t    removeClasses(item, 'active');\n\t  }\n\t  /**\n\t   * Clears all the active items\n\t   *\n\t   */\n\n\n\t  clearActiveItems() {\n\t    removeClasses(this.activeItems, 'active');\n\t    this.activeItems = [];\n\t  }\n\t  /**\n\t   * Sets the selected item in the dropdown menu\n\t   * of available options.\n\t   *\n\t   */\n\n\n\t  setActiveOption(option) {\n\t    if (option === this.activeOption) {\n\t      return;\n\t    }\n\n\t    this.clearActiveOption();\n\t    if (!option) return;\n\t    this.activeOption = option;\n\t    setAttr(this.control_input, {\n\t      'aria-activedescendant': option.getAttribute('id')\n\t    });\n\t    setAttr(option, {\n\t      'aria-selected': 'true'\n\t    });\n\t    addClasses(option, 'active');\n\t    this.scrollToOption(option);\n\t  }\n\t  /**\n\t   * Sets the dropdown_content scrollTop to display the option\n\t   *\n\t   */\n\n\n\t  scrollToOption(option, behavior) {\n\t    if (!option) return;\n\t    const content = this.dropdown_content;\n\t    const height_menu = content.clientHeight;\n\t    const scrollTop = content.scrollTop || 0;\n\t    const height_item = option.offsetHeight;\n\t    const y = option.getBoundingClientRect().top - content.getBoundingClientRect().top + scrollTop;\n\n\t    if (y + height_item > height_menu + scrollTop) {\n\t      this.scroll(y - height_menu + height_item, behavior);\n\t    } else if (y < scrollTop) {\n\t      this.scroll(y, behavior);\n\t    }\n\t  }\n\t  /**\n\t   * Scroll the dropdown to the given position\n\t   *\n\t   */\n\n\n\t  scroll(scrollTop, behavior) {\n\t    const content = this.dropdown_content;\n\n\t    if (behavior) {\n\t      content.style.scrollBehavior = behavior;\n\t    }\n\n\t    content.scrollTop = scrollTop;\n\t    content.style.scrollBehavior = '';\n\t  }\n\t  /**\n\t   * Clears the active option\n\t   *\n\t   */\n\n\n\t  clearActiveOption() {\n\t    if (this.activeOption) {\n\t      removeClasses(this.activeOption, 'active');\n\t      setAttr(this.activeOption, {\n\t        'aria-selected': null\n\t      });\n\t    }\n\n\t    this.activeOption = null;\n\t    setAttr(this.control_input, {\n\t      'aria-activedescendant': null\n\t    });\n\t  }\n\t  /**\n\t   * Selects all items (CTRL + A).\n\t   */\n\n\n\t  selectAll() {\n\t    if (this.settings.mode === 'single') return;\n\t    this.activeItems = this.controlChildren();\n\n\t    if (this.activeItems.length) {\n\t      addClasses(this.activeItems, 'active');\n\t      this.hideInput();\n\t      this.close();\n\t    }\n\n\t    this.focus();\n\t  }\n\t  /**\n\t   * Determines if the control_input should be in a hidden or visible state\n\t   *\n\t   */\n\n\n\t  inputState() {\n\t    var self = this;\n\t    if (self.settings.controlInput) return;\n\n\t    if (self.activeItems.length > 0 || !self.isFocused && this.settings.hidePlaceholder && self.items.length > 0) {\n\t      self.setTextboxValue();\n\t      self.isInputHidden = true;\n\t      addClasses(self.wrapper, 'input-hidden');\n\t    } else {\n\t      self.isInputHidden = false;\n\t      removeClasses(self.wrapper, 'input-hidden');\n\t    }\n\t  }\n\t  /**\n\t   * Hides the input element out of view, while\n\t   * retaining its focus.\n\t   * @deprecated 1.3\n\t   */\n\n\n\t  hideInput() {\n\t    this.inputState();\n\t  }\n\t  /**\n\t   * Restores input visibility.\n\t   * @deprecated 1.3\n\t   */\n\n\n\t  showInput() {\n\t    this.inputState();\n\t  }\n\t  /**\n\t   * Get the input value\n\t   */\n\n\n\t  inputValue() {\n\t    return this.control_input.value.trim();\n\t  }\n\t  /**\n\t   * Gives the control focus.\n\t   */\n\n\n\t  focus() {\n\t    var self = this;\n\t    if (self.isDisabled) return;\n\t    self.ignoreFocus = true;\n\t    self.control_input.focus();\n\t    setTimeout(() => {\n\t      self.ignoreFocus = false;\n\t      self.onFocus();\n\t    }, 0);\n\t  }\n\t  /**\n\t   * Forces the control out of focus.\n\t   *\n\t   */\n\n\n\t  blur() {\n\t    this.control_input.blur();\n\t    this.onBlur();\n\t  }\n\t  /**\n\t   * Returns a function that scores an object\n\t   * to show how good of a match it is to the\n\t   * provided query.\n\t   *\n\t   * @return {function}\n\t   */\n\n\n\t  getScoreFunction(query) {\n\t    return this.sifter.getScoreFunction(query, this.getSearchOptions());\n\t  }\n\t  /**\n\t   * Returns search options for sifter (the system\n\t   * for scoring and sorting results).\n\t   *\n\t   * @see https://github.com/orchidjs/sifter.js\n\t   * @return {object}\n\t   */\n\n\n\t  getSearchOptions() {\n\t    var settings = this.settings;\n\t    var sort = settings.sortField;\n\n\t    if (typeof settings.sortField === 'string') {\n\t      sort = [{\n\t        field: settings.sortField\n\t      }];\n\t    }\n\n\t    return {\n\t      fields: settings.searchField,\n\t      conjunction: settings.searchConjunction,\n\t      sort: sort,\n\t      nesting: settings.nesting\n\t    };\n\t  }\n\t  /**\n\t   * Searches through available options and returns\n\t   * a sorted array of matches.\n\t   *\n\t   */\n\n\n\t  search(query) {\n\t    var i, result, calculateScore;\n\t    var self = this;\n\t    var options = this.getSearchOptions(); // validate user-provided result scoring function\n\n\t    if (self.settings.score) {\n\t      calculateScore = self.settings.score.call(self, query);\n\n\t      if (typeof calculateScore !== 'function') {\n\t        throw new Error('Tom Select \"score\" setting must be a function that returns a function');\n\t      }\n\t    } // perform search\n\n\n\t    if (query !== self.lastQuery) {\n\t      self.lastQuery = query;\n\t      result = self.sifter.search(query, Object.assign(options, {\n\t        score: calculateScore\n\t      }));\n\t      self.currentResults = result;\n\t    } else {\n\t      result = Object.assign({}, self.currentResults);\n\t    } // filter out selected items\n\n\n\t    if (self.settings.hideSelected) {\n\t      for (i = result.items.length - 1; i >= 0; i--) {\n\t        let hashed = hash_key(result.items[i].id);\n\n\t        if (hashed && self.items.indexOf(hashed) !== -1) {\n\t          result.items.splice(i, 1);\n\t        }\n\t      }\n\t    }\n\n\t    return result;\n\t  }\n\t  /**\n\t   * Refreshes the list of available options shown\n\t   * in the autocomplete dropdown menu.\n\t   *\n\t   */\n\n\n\t  refreshOptions(triggerDropdown = true) {\n\t    var i, j, k, n, optgroup, optgroups, html, has_create_option, active_value, active_group;\n\t    var create;\n\t    const groups = {};\n\t    const groups_order = [];\n\t    var self = this;\n\t    var query = self.inputValue();\n\t    var results = self.search(query);\n\t    var active_option = self.activeOption;\n\t    var show_dropdown = self.settings.shouldOpen || false;\n\t    var dropdown_content = self.dropdown_content;\n\n\t    if (active_option) {\n\t      active_value = active_option.dataset.value;\n\t      active_group = active_option.closest('[data-group]');\n\t    } // build markup\n\n\n\t    n = results.items.length;\n\n\t    if (typeof self.settings.maxOptions === 'number') {\n\t      n = Math.min(n, self.settings.maxOptions);\n\t    }\n\n\t    if (n > 0) {\n\t      show_dropdown = true;\n\t    } // render and group available options individually\n\n\n\t    for (i = 0; i < n; i++) {\n\t      // get option dom element\n\t      let opt_value = results.items[i].id;\n\t      let option = self.options[opt_value];\n\t      let option_el = self.getOption(opt_value, true); // toggle 'selected' class\n\n\t      if (!self.settings.hideSelected) {\n\t        option_el.classList.toggle('selected', self.items.includes(opt_value));\n\t      }\n\n\t      optgroup = option[self.settings.optgroupField] || '';\n\t      optgroups = Array.isArray(optgroup) ? optgroup : [optgroup];\n\n\t      for (j = 0, k = optgroups && optgroups.length; j < k; j++) {\n\t        optgroup = optgroups[j];\n\n\t        if (!self.optgroups.hasOwnProperty(optgroup)) {\n\t          optgroup = '';\n\t        }\n\n\t        if (!groups.hasOwnProperty(optgroup)) {\n\t          groups[optgroup] = document.createDocumentFragment();\n\t          groups_order.push(optgroup);\n\t        } // nodes can only have one parent, so if the option is in mutple groups, we need a clone\n\n\n\t        if (j > 0) {\n\t          option_el = option_el.cloneNode(true);\n\t          setAttr(option_el, {\n\t            id: option.$id + '-clone-' + j,\n\t            'aria-selected': null\n\t          });\n\t          option_el.classList.add('ts-cloned');\n\t          removeClasses(option_el, 'active');\n\t        } // make sure we keep the activeOption in the same group\n\n\n\t        if (active_value == opt_value && active_group && active_group.dataset.group === optgroup) {\n\t          active_option = option_el;\n\t        }\n\n\t        groups[optgroup].appendChild(option_el);\n\t      }\n\t    } // sort optgroups\n\n\n\t    if (this.settings.lockOptgroupOrder) {\n\t      groups_order.sort((a, b) => {\n\t        var a_order = self.optgroups[a] && self.optgroups[a].$order || 0;\n\t        var b_order = self.optgroups[b] && self.optgroups[b].$order || 0;\n\t        return a_order - b_order;\n\t      });\n\t    } // render optgroup headers & join groups\n\n\n\t    html = document.createDocumentFragment();\n\n\t    for (optgroup of groups_order) {\n\t      if (self.optgroups.hasOwnProperty(optgroup) && groups[optgroup].children.length) {\n\t        let group_options = document.createDocumentFragment();\n\t        let header = self.render('optgroup_header', self.optgroups[optgroup]);\n\t        append(group_options, header);\n\t        append(group_options, groups[optgroup]);\n\t        let group_html = self.render('optgroup', {\n\t          group: self.optgroups[optgroup],\n\t          options: group_options\n\t        });\n\t        append(html, group_html);\n\t      } else {\n\t        append(html, groups[optgroup]);\n\t      }\n\t    }\n\n\t    dropdown_content.innerHTML = '';\n\t    append(dropdown_content, html); // highlight matching terms inline\n\n\t    if (self.settings.highlight) {\n\t      removeHighlight(dropdown_content);\n\n\t      if (results.query.length && results.tokens.length) {\n\t        for (const tok of results.tokens) {\n\t          highlight(dropdown_content, tok.regex);\n\t        }\n\t      }\n\t    } // helper method for adding templates to dropdown\n\n\n\t    var add_template = template => {\n\t      let content = self.render(template, {\n\t        input: query\n\t      });\n\n\t      if (content) {\n\t        show_dropdown = true;\n\t        dropdown_content.insertBefore(content, dropdown_content.firstChild);\n\t      }\n\n\t      return content;\n\t    }; // invalid query\n\n\n\t    if (!self.settings.shouldLoad.call(self, query)) {\n\t      add_template('not_loading'); // add loading message\n\t    } else if (self.loading) {\n\t      add_template('loading'); // add no_results message\n\t    } else if (results.items.length === 0) {\n\t      add_template('no_results');\n\t    } // add create option\n\n\n\t    has_create_option = self.canCreate(query);\n\n\t    if (has_create_option) {\n\t      create = add_template('option_create');\n\t    } // activate\n\n\n\t    self.hasOptions = results.items.length > 0 || has_create_option;\n\n\t    if (show_dropdown) {\n\t      if (results.items.length > 0) {\n\t        if (!dropdown_content.contains(active_option) && self.settings.mode === 'single' && self.items.length) {\n\t          active_option = self.getOption(self.items[0]);\n\t        }\n\n\t        if (!dropdown_content.contains(active_option)) {\n\t          let active_index = 0;\n\n\t          if (create && !self.settings.addPrecedence) {\n\t            active_index = 1;\n\t          }\n\n\t          active_option = self.selectable()[active_index];\n\t        }\n\t      } else if (create) {\n\t        active_option = create;\n\t      }\n\n\t      if (triggerDropdown && !self.isOpen) {\n\t        self.open();\n\t        self.scrollToOption(active_option, 'auto');\n\t      }\n\n\t      self.setActiveOption(active_option);\n\t    } else {\n\t      self.clearActiveOption();\n\n\t      if (triggerDropdown && self.isOpen) {\n\t        self.close(false); // if create_option=null, we want the dropdown to close but not reset the textbox value\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Return list of selectable options\n\t   *\n\t   */\n\n\n\t  selectable() {\n\t    return this.dropdown_content.querySelectorAll('[data-selectable]');\n\t  }\n\t  /**\n\t   * Adds an available option. If it already exists,\n\t   * nothing will happen. Note: this does not refresh\n\t   * the options list dropdown (use `refreshOptions`\n\t   * for that).\n\t   *\n\t   * Usage:\n\t   *\n\t   *   this.addOption(data)\n\t   *\n\t   */\n\n\n\t  addOption(data) {\n\t    var value,\n\t        self = this;\n\n\t    if (Array.isArray(data)) {\n\t      for (const dat of data) {\n\t        self.addOption(dat);\n\t      }\n\n\t      return;\n\t    }\n\n\t    if (value = self.registerOption(data)) {\n\t      self.userOptions[value] = true;\n\t      self.lastQuery = null;\n\t      self.trigger('option_add', value, data);\n\t    }\n\t  }\n\t  /**\n\t   * Registers an option to the pool of options.\n\t   *\n\t   */\n\n\n\t  registerOption(data) {\n\t    var key = hash_key(data[this.settings.valueField]);\n\t    if (key === null || this.options.hasOwnProperty(key)) return false;\n\t    data.$order = data.$order || ++this.order;\n\t    data.$id = this.inputId + '-opt-' + data.$order;\n\t    this.options[key] = data;\n\t    return key;\n\t  }\n\t  /**\n\t   * Registers an option group to the pool of option groups.\n\t   *\n\t   * @return {boolean|string}\n\t   */\n\n\n\t  registerOptionGroup(data) {\n\t    var key = hash_key(data[this.settings.optgroupValueField]);\n\t    if (key === null) return false;\n\t    data.$order = data.$order || ++this.order;\n\t    this.optgroups[key] = data;\n\t    return key;\n\t  }\n\t  /**\n\t   * Registers a new optgroup for options\n\t   * to be bucketed into.\n\t   *\n\t   */\n\n\n\t  addOptionGroup(id, data) {\n\t    var hashed_id;\n\t    data[this.settings.optgroupValueField] = id;\n\n\t    if (hashed_id = this.registerOptionGroup(data)) {\n\t      this.trigger('optgroup_add', hashed_id, data);\n\t    }\n\t  }\n\t  /**\n\t   * Removes an existing option group.\n\t   *\n\t   */\n\n\n\t  removeOptionGroup(id) {\n\t    if (this.optgroups.hasOwnProperty(id)) {\n\t      delete this.optgroups[id];\n\t      this.clearCache();\n\t      this.trigger('optgroup_remove', id);\n\t    }\n\t  }\n\t  /**\n\t   * Clears all existing option groups.\n\t   */\n\n\n\t  clearOptionGroups() {\n\t    this.optgroups = {};\n\t    this.clearCache();\n\t    this.trigger('optgroup_clear');\n\t  }\n\t  /**\n\t   * Updates an option available for selection. If\n\t   * it is visible in the selected items or options\n\t   * dropdown, it will be re-rendered automatically.\n\t   *\n\t   */\n\n\n\t  updateOption(value, data) {\n\t    const self = this;\n\t    var item_new;\n\t    var index_item;\n\t    const hashed = hash_key(value);\n\t    if (hashed === null) return;\n\t    const value_new = hash_key(data[self.settings.valueField]);\n\t    const option = self.getOption(hashed);\n\t    const item = self.getItem(hashed); // sanity checks\n\n\t    if (!self.options.hasOwnProperty(hashed)) return;\n\t    if (typeof value_new !== 'string') throw new Error('Value must be set in option data');\n\t    data.$order = data.$order || self.options[hashed].$order;\n\t    delete self.options[hashed]; // invalidate render cache\n\t    // don't remove existing node yet, we'll remove it after replacing it\n\n\t    self.uncacheValue(value_new);\n\t    self.uncacheValue(hashed, false);\n\t    self.options[value_new] = data; // update the option if it's in the dropdown\n\n\t    if (option) {\n\t      if (self.dropdown_content.contains(option)) {\n\t        const option_new = self._render('option', data);\n\n\t        replaceNode(option, option_new);\n\n\t        if (self.activeOption === option) {\n\t          self.setActiveOption(option_new);\n\t        }\n\t      }\n\n\t      option.remove();\n\t    } // update the item if we have one\n\n\n\t    if (item) {\n\t      index_item = self.items.indexOf(hashed);\n\n\t      if (index_item !== -1) {\n\t        self.items.splice(index_item, 1, value_new);\n\t      }\n\n\t      item_new = self._render('item', data);\n\t      if (item.classList.contains('active')) addClasses(item_new, 'active');\n\t      replaceNode(item, item_new);\n\t    } // invalidate last query because we might have updated the sortField\n\n\n\t    self.lastQuery = null;\n\t  }\n\t  /**\n\t   * Removes a single option.\n\t   *\n\t   */\n\n\n\t  removeOption(value, silent) {\n\t    const self = this;\n\t    value = get_hash(value);\n\t    self.uncacheValue(value);\n\t    delete self.userOptions[value];\n\t    delete self.options[value];\n\t    self.lastQuery = null;\n\t    self.trigger('option_remove', value);\n\t    self.removeItem(value, silent);\n\t  }\n\t  /**\n\t   * Clears all options.\n\t   */\n\n\n\t  clearOptions() {\n\t    this.loadedSearches = {};\n\t    this.userOptions = {};\n\t    this.clearCache();\n\t    var selected = {};\n\n\t    for (let key in this.options) {\n\t      if (this.options.hasOwnProperty(key) && this.items.indexOf(key) >= 0) {\n\t        selected[key] = this.options[key];\n\t      }\n\t    }\n\n\t    this.options = this.sifter.items = selected;\n\t    this.lastQuery = null;\n\t    this.trigger('option_clear');\n\t  }\n\t  /**\n\t   * Removes a value from item and option caches\n\t   *\n\t   */\n\n\n\t  uncacheValue(value, remove_node = true) {\n\t    const self = this;\n\t    const cache_items = self.renderCache['item'];\n\t    const cache_options = self.renderCache['option'];\n\t    if (cache_items) delete cache_items[value];\n\t    if (cache_options) delete cache_options[value];\n\n\t    if (remove_node) {\n\t      const option_el = self.getOption(value);\n\t      if (option_el) option_el.remove();\n\t    }\n\t  }\n\t  /**\n\t   * Returns the dom element of the option\n\t   * matching the given value.\n\t   *\n\t   */\n\n\n\t  getOption(value, create = false) {\n\t    var hashed = hash_key(value);\n\t    var option_el = this.rendered('option', hashed);\n\n\t    if (!option_el && create && hashed !== null) {\n\t      option_el = this._render('option', this.options[hashed]);\n\t    }\n\n\t    return option_el;\n\t  }\n\t  /**\n\t   * Returns the dom element of the next or previous dom element of the same type\n\t   * Note: adjacent options may not be adjacent DOM elements (optgroups)\n\t   *\n\t   */\n\n\n\t  getAdjacent(option, direction, type = 'option') {\n\t    var self = this,\n\t        all;\n\n\t    if (!option) {\n\t      return null;\n\t    }\n\n\t    if (type == 'item') {\n\t      all = self.controlChildren();\n\t    } else {\n\t      all = self.dropdown_content.querySelectorAll('[data-selectable]');\n\t    }\n\n\t    for (let i = 0; i < all.length; i++) {\n\t      if (all[i] != option) {\n\t        continue;\n\t      }\n\n\t      if (direction > 0) {\n\t        return all[i + 1];\n\t      }\n\n\t      return all[i - 1];\n\t    }\n\n\t    return null;\n\t  }\n\t  /**\n\t   * Returns the dom element of the item\n\t   * matching the given value.\n\t   *\n\t   */\n\n\n\t  getItem(item) {\n\t    if (typeof item == 'object') {\n\t      return item;\n\t    }\n\n\t    var value = hash_key(item);\n\t    return value !== null ? this.control.querySelector(`[data-value=\"${addSlashes(value)}\"]`) : null;\n\t  }\n\t  /**\n\t   * \"Selects\" multiple items at once. Adds them to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  addItems(values, silent) {\n\t    var self = this;\n\t    var items = Array.isArray(values) ? values : [values];\n\t    items = items.filter(x => self.items.indexOf(x) === -1);\n\n\t    for (let i = 0, n = items.length; i < n; i++) {\n\t      self.isPending = i < n - 1;\n\t      self.addItem(items[i], silent);\n\t    }\n\t  }\n\t  /**\n\t   * \"Selects\" an item. Adds it to the list\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  addItem(value, silent) {\n\t    var events = silent ? [] : ['change'];\n\t    debounce_events(this, events, () => {\n\t      var item, wasFull;\n\t      const self = this;\n\t      const inputMode = self.settings.mode;\n\t      const hashed = hash_key(value);\n\n\t      if (hashed && self.items.indexOf(hashed) !== -1) {\n\t        if (inputMode === 'single') {\n\t          self.close();\n\t        }\n\n\t        if (inputMode === 'single' || !self.settings.duplicates) {\n\t          return;\n\t        }\n\t      }\n\n\t      if (hashed === null || !self.options.hasOwnProperty(hashed)) return;\n\t      if (inputMode === 'single') self.clear(silent);\n\t      if (inputMode === 'multi' && self.isFull()) return;\n\t      item = self._render('item', self.options[hashed]);\n\n\t      if (self.control.contains(item)) {\n\t        // duplicates\n\t        item = item.cloneNode(true);\n\t      }\n\n\t      wasFull = self.isFull();\n\t      self.items.splice(self.caretPos, 0, hashed);\n\t      self.insertAtCaret(item);\n\n\t      if (self.isSetup) {\n\t        let options = self.selectable(); // update menu / remove the option (if this is not one item being added as part of series)\n\n\t        if (!self.isPending && self.settings.hideSelected) {\n\t          let option = self.getOption(hashed);\n\t          let next = self.getAdjacent(option, 1);\n\n\t          if (next) {\n\t            self.setActiveOption(next);\n\t          }\n\t        } // refreshOptions after setActiveOption(),\n\t        // otherwise setActiveOption() will be called by refreshOptions() with the wrong value\n\n\n\t        if (!self.isPending) {\n\t          self.refreshOptions(self.isFocused && inputMode !== 'single');\n\t        } // hide the menu if the maximum number of items have been selected or no options are left\n\n\n\t        if (!options.length || self.isFull()) {\n\t          self.close();\n\t        } else if (!self.isPending) {\n\t          self.positionDropdown();\n\t        }\n\n\t        self.trigger('item_add', hashed, item);\n\n\t        if (!self.isPending) {\n\t          self.updateOriginalInput({\n\t            silent: silent\n\t          });\n\t        }\n\t      }\n\n\t      if (!self.isPending || !wasFull && self.isFull()) {\n\t        self.refreshState();\n\t      }\n\t    });\n\t  }\n\t  /**\n\t   * Removes the selected item matching\n\t   * the provided value.\n\t   *\n\t   */\n\n\n\t  removeItem(item = null, silent) {\n\t    const self = this;\n\t    item = self.getItem(item);\n\t    if (!item) return;\n\t    var i, idx;\n\t    const value = item.dataset.value;\n\t    i = nodeIndex(item);\n\t    item.remove();\n\n\t    if (item.classList.contains('active')) {\n\t      idx = self.activeItems.indexOf(item);\n\t      self.activeItems.splice(idx, 1);\n\t      removeClasses(item, 'active');\n\t    }\n\n\t    self.items.splice(i, 1);\n\t    self.lastQuery = null;\n\n\t    if (!self.settings.persist && self.userOptions.hasOwnProperty(value)) {\n\t      self.removeOption(value, silent);\n\t    }\n\n\t    if (i < self.caretPos) {\n\t      self.setCaret(self.caretPos - 1);\n\t    }\n\n\t    self.updateOriginalInput({\n\t      silent: silent\n\t    });\n\t    self.refreshState();\n\t    self.positionDropdown();\n\t    self.trigger('item_remove', value, item);\n\t  }\n\t  /**\n\t   * Invokes the `create` method provided in the\n\t   * TomSelect options that should provide the data\n\t   * for the new item, given the user input.\n\t   *\n\t   * Once this completes, it will be added\n\t   * to the item list.\n\t   *\n\t   */\n\n\n\t  createItem(input = null, triggerDropdown = true, callback = () => {}) {\n\t    var self = this;\n\t    var caret = self.caretPos;\n\t    var output;\n\t    input = input || self.inputValue();\n\n\t    if (!self.canCreate(input)) {\n\t      callback();\n\t      return false;\n\t    }\n\n\t    self.lock();\n\t    var created = false;\n\n\t    var create = data => {\n\t      self.unlock();\n\t      if (!data || typeof data !== 'object') return callback();\n\t      var value = hash_key(data[self.settings.valueField]);\n\n\t      if (typeof value !== 'string') {\n\t        return callback();\n\t      }\n\n\t      self.setTextboxValue();\n\t      self.addOption(data);\n\t      self.setCaret(caret);\n\t      self.addItem(value);\n\t      self.refreshOptions(triggerDropdown && self.settings.mode !== 'single');\n\t      callback(data);\n\t      created = true;\n\t    };\n\n\t    if (typeof self.settings.create === 'function') {\n\t      output = self.settings.create.call(this, input, create);\n\t    } else {\n\t      output = {\n\t        [self.settings.labelField]: input,\n\t        [self.settings.valueField]: input\n\t      };\n\t    }\n\n\t    if (!created) {\n\t      create(output);\n\t    }\n\n\t    return true;\n\t  }\n\t  /**\n\t   * Re-renders the selected item lists.\n\t   */\n\n\n\t  refreshItems() {\n\t    var self = this;\n\t    self.lastQuery = null;\n\n\t    if (self.isSetup) {\n\t      self.addItems(self.items);\n\t    }\n\n\t    self.updateOriginalInput();\n\t    self.refreshState();\n\t  }\n\t  /**\n\t   * Updates all state-dependent attributes\n\t   * and CSS classes.\n\t   */\n\n\n\t  refreshState() {\n\t    var self = this;\n\t    self.refreshValidityState();\n\t    var isFull = self.isFull();\n\t    var isLocked = self.isLocked;\n\t    self.wrapper.classList.toggle('rtl', self.rtl);\n\t    var classList = self.control.classList;\n\t    classList.toggle('focus', self.isFocused);\n\t    classList.toggle('disabled', self.isDisabled);\n\t    classList.toggle('required', self.isRequired);\n\t    classList.toggle('invalid', self.isInvalid);\n\t    classList.toggle('locked', isLocked);\n\t    classList.toggle('full', isFull);\n\t    classList.toggle('not-full', !isFull);\n\t    classList.toggle('input-active', self.isFocused && !self.isInputHidden);\n\t    classList.toggle('dropdown-active', self.isOpen);\n\t    classList.toggle('has-options', isEmptyObject(self.options));\n\t    classList.toggle('has-items', self.items.length > 0);\n\t  }\n\t  /**\n\t   * Update the `required` attribute of both input and control input.\n\t   *\n\t   * The `required` property needs to be activated on the control input\n\t   * for the error to be displayed at the right place. `required` also\n\t   * needs to be temporarily deactivated on the input since the input is\n\t   * hidden and can't show errors.\n\t   */\n\n\n\t  refreshValidityState() {\n\t    var self = this;\n\n\t    if (!self.input.checkValidity) {\n\t      return;\n\t    } // if required, make sure the input required attribute = true so checkValidity() will work\n\n\n\t    if (this.isRequired) {\n\t      self.input.required = true;\n\t    }\n\n\t    var invalid = !self.input.checkValidity();\n\t    self.isInvalid = invalid;\n\t    self.control_input.required = invalid;\n\n\t    if (this.isRequired) {\n\t      self.input.required = !invalid;\n\t    }\n\t  }\n\t  /**\n\t   * Determines whether or not more items can be added\n\t   * to the control without exceeding the user-defined maximum.\n\t   *\n\t   * @returns {boolean}\n\t   */\n\n\n\t  isFull() {\n\t    return this.settings.maxItems !== null && this.items.length >= this.settings.maxItems;\n\t  }\n\t  /**\n\t   * Refreshes the original <select> or <input>\n\t   * element to reflect the current state.\n\t   *\n\t   */\n\n\n\t  updateOriginalInput(opts = {}) {\n\t    const self = this;\n\t    var i, value, option, option_el, label;\n\n\t    if (self.is_select_tag) {\n\t      const selected = [];\n\n\t      function AddSelected(option_el, value, label) {\n\t        if (!option_el) {\n\t          option_el = getDom('<option value=\"' + escape_html(value) + '\">' + escape_html(label) + '</option>');\n\t        }\n\n\t        self.input.prepend(option_el);\n\t        selected.push(option_el);\n\t        setAttr(option_el, {\n\t          selected: 'true'\n\t        });\n\t        option_el.selected = true;\n\t        return option_el;\n\t      } // unselect all selected options\n\n\n\t      self.input.querySelectorAll('option[selected]').forEach(option_el => {\n\t        setAttr(option_el, {\n\t          selected: null\n\t        });\n\t        option_el.selected = false;\n\t      }); // nothing selected?\n\n\t      if (self.items.length == 0 && self.settings.mode == 'single' && !self.isRequired) {\n\t        option_el = self.input.querySelector('option[value=\"\"]');\n\t        AddSelected(option_el, \"\", \"\"); // order selected <option> tags for values in self.items\n\t      } else {\n\t        for (i = self.items.length - 1; i >= 0; i--) {\n\t          value = self.items[i];\n\t          option = self.options[value];\n\t          label = option[self.settings.labelField] || '';\n\n\t          if (selected.includes(option.$option)) {\n\t            const reuse_opt = self.input.querySelector(`option[value=\"${addSlashes(value)}\"]:not([selected])`);\n\t            AddSelected(reuse_opt, value, label);\n\t          } else {\n\t            option.$option = AddSelected(option.$option, value, label);\n\t          }\n\t        }\n\t      }\n\t    } else {\n\t      self.input.value = self.getValue();\n\t    }\n\n\t    if (self.isSetup) {\n\t      if (!opts.silent) {\n\t        self.trigger('change', self.getValue());\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Shows the autocomplete dropdown containing\n\t   * the available options.\n\t   */\n\n\n\t  open() {\n\t    var self = this;\n\t    if (self.isLocked || self.isOpen || self.settings.mode === 'multi' && self.isFull()) return;\n\t    self.isOpen = true;\n\t    setAttr(self.control_input, {\n\t      'aria-expanded': 'true'\n\t    });\n\t    self.refreshState();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'hidden',\n\t      display: 'block'\n\t    });\n\t    self.positionDropdown();\n\t    applyCSS(self.dropdown, {\n\t      visibility: 'visible',\n\t      display: 'block'\n\t    });\n\t    self.focus();\n\t    self.trigger('dropdown_open', self.dropdown);\n\t  }\n\t  /**\n\t   * Closes the autocomplete dropdown menu.\n\t   */\n\n\n\t  close(setTextboxValue = true) {\n\t    var self = this;\n\t    var trigger = self.isOpen;\n\n\t    if (setTextboxValue) {\n\t      // before blur() to prevent form onchange event\n\t      self.setTextboxValue();\n\n\t      if (self.settings.mode === 'single' && self.items.length) {\n\t        self.hideInput(); // Do not trigger blur while inside a blur event,\n\t        // this fixes some weird tabbing behavior in FF and IE.\n\t        // See #selectize.js#1164\n\n\t        if (!self.tab_key) {\n\t          self.blur(); // close keyboard on iOS\n\t        }\n\t      }\n\t    }\n\n\t    self.isOpen = false;\n\t    setAttr(self.control_input, {\n\t      'aria-expanded': 'false'\n\t    });\n\t    applyCSS(self.dropdown, {\n\t      display: 'none'\n\t    });\n\n\t    if (self.settings.hideSelected) {\n\t      self.clearActiveOption();\n\t    }\n\n\t    self.refreshState();\n\t    if (trigger) self.trigger('dropdown_close', self.dropdown);\n\t  }\n\t  /**\n\t   * Calculates and applies the appropriate\n\t   * position of the dropdown if dropdownParent = 'body'.\n\t   * Otherwise, position is determined by css\n\t   */\n\n\n\t  positionDropdown() {\n\t    if (this.settings.dropdownParent !== 'body') {\n\t      return;\n\t    }\n\n\t    var context = this.control;\n\t    var rect = context.getBoundingClientRect();\n\t    var top = context.offsetHeight + rect.top + window.scrollY;\n\t    var left = rect.left + window.scrollX;\n\t    applyCSS(this.dropdown, {\n\t      width: rect.width + 'px',\n\t      top: top + 'px',\n\t      left: left + 'px'\n\t    });\n\t  }\n\t  /**\n\t   * Resets / clears all selected items\n\t   * from the control.\n\t   *\n\t   */\n\n\n\t  clear(silent) {\n\t    var self = this;\n\t    if (!self.items.length) return;\n\t    var items = self.controlChildren();\n\n\t    for (const item of items) {\n\t      self.removeItem(item, true);\n\t    }\n\n\t    self.showInput();\n\t    if (!silent) self.updateOriginalInput();\n\t    self.trigger('clear');\n\t  }\n\t  /**\n\t   * A helper method for inserting an element\n\t   * at the current caret position.\n\t   *\n\t   */\n\n\n\t  insertAtCaret(el) {\n\t    var self = this;\n\t    var caret = Math.min(self.caretPos, self.items.length);\n\t    var target = self.control;\n\n\t    if (caret === 0) {\n\t      target.insertBefore(el, target.firstChild);\n\t    } else {\n\t      target.insertBefore(el, target.children[caret]);\n\t    }\n\n\t    self.setCaret(caret + 1);\n\t  }\n\t  /**\n\t   * Removes the current selected item(s).\n\t   *\n\t   */\n\n\n\t  deleteSelection(e) {\n\t    var direction, selection, caret, tail;\n\t    var self = this;\n\t    direction = e && e.keyCode === KEY_BACKSPACE ? -1 : 1;\n\t    selection = getSelection(self.control_input); // determine items that will be removed\n\n\t    const rm_items = [];\n\n\t    if (self.activeItems.length) {\n\t      tail = getTail(self.activeItems, direction);\n\t      caret = nodeIndex(tail);\n\n\t      if (direction > 0) {\n\t        caret++;\n\t      }\n\n\t      for (const item of self.activeItems) {\n\t        rm_items.push(item);\n\t      }\n\t    } else if ((self.isFocused || self.settings.mode === 'single') && self.items.length) {\n\t      const items = self.controlChildren();\n\n\t      if (direction < 0 && selection.start === 0 && selection.length === 0) {\n\t        rm_items.push(items[self.caretPos - 1]);\n\t      } else if (direction > 0 && selection.start === self.inputValue().length) {\n\t        rm_items.push(items[self.caretPos]);\n\t      }\n\t    }\n\n\t    const values = rm_items.map(item => item.dataset.value); // allow the callback to abort\n\n\t    if (!values.length || typeof self.settings.onDelete === 'function' && self.settings.onDelete.call(self, values, e) === false) {\n\t      return false;\n\t    }\n\n\t    preventDefault(e, true); // perform removal\n\n\t    if (typeof caret !== 'undefined') {\n\t      self.setCaret(caret);\n\t    }\n\n\t    while (rm_items.length) {\n\t      self.removeItem(rm_items.pop());\n\t    }\n\n\t    self.showInput();\n\t    self.positionDropdown();\n\t    self.refreshOptions(false);\n\t    return true;\n\t  }\n\t  /**\n\t   * Selects the previous / next item (depending on the `direction` argument).\n\t   *\n\t   * > 0 - right\n\t   * < 0 - left\n\t   *\n\t   */\n\n\n\t  advanceSelection(direction, e) {\n\t    var idx,\n\t        last_active,\n\t        adjacent,\n\t        self = this;\n\t    if (self.rtl) direction *= -1;\n\t    if (self.inputValue().length) return; // add or remove to active items\n\n\t    if (isKeyDown(KEY_SHORTCUT, e) || isKeyDown('shiftKey', e)) {\n\t      last_active = self.getLastActive(direction);\n\n\t      if (last_active) {\n\t        if (!last_active.classList.contains('active')) {\n\t          adjacent = last_active;\n\t        } else {\n\t          adjacent = self.getAdjacent(last_active, direction, 'item');\n\t        } // if no active item, get items adjacent to the control input\n\n\t      } else if (direction > 0) {\n\t        adjacent = self.control_input.nextElementSibling;\n\t      } else {\n\t        adjacent = self.control_input.previousElementSibling;\n\t      }\n\n\t      if (adjacent) {\n\t        if (adjacent.classList.contains('active')) {\n\t          self.removeActiveItem(last_active);\n\t        }\n\n\t        self.setActiveItemClass(adjacent); // mark as last_active !! after removeActiveItem() on last_active\n\t      } // move caret to the left or right\n\n\t    } else if (self.isFocused && !self.activeItems.length) {\n\t      self.setCaret(self.caretPos + direction); // move caret before or after selected items\n\t    } else {\n\t      last_active = self.getLastActive(direction);\n\n\t      if (last_active) {\n\t        idx = nodeIndex(last_active);\n\t        self.setCaret(direction > 0 ? idx + 1 : idx);\n\t        self.setActiveItem();\n\t      }\n\t    }\n\t  }\n\t  /**\n\t   * Get the last active item\n\t   *\n\t   */\n\n\n\t  getLastActive(direction) {\n\t    let last_active = this.control.querySelector('.last-active');\n\n\t    if (last_active) {\n\t      return last_active;\n\t    }\n\n\t    var result = this.control.querySelectorAll('.active');\n\n\t    if (result) {\n\t      return getTail(result, direction);\n\t    }\n\t  }\n\t  /**\n\t   * Moves the caret to the specified index.\n\t   *\n\t   * The input must be moved by leaving it in place and moving the\n\t   * siblings, due to the fact that focus cannot be restored once lost\n\t   * on mobile webkit devices\n\t   *\n\t   */\n\n\n\t  setCaret(new_pos) {\n\t    var self = this;\n\n\t    if (self.settings.mode === 'single' || self.settings.controlInput) {\n\t      new_pos = self.items.length;\n\t    } else {\n\t      new_pos = Math.max(0, Math.min(self.items.length, new_pos));\n\n\t      if (new_pos != self.caretPos && !self.isPending) {\n\t        self.controlChildren().forEach((child, j) => {\n\t          if (j < new_pos) {\n\t            self.control_input.insertAdjacentElement('beforebegin', child);\n\t          } else {\n\t            self.control.appendChild(child);\n\t          }\n\t        });\n\t      }\n\t    }\n\n\t    self.caretPos = new_pos;\n\t  }\n\t  /**\n\t   * Return list of item dom elements\n\t   *\n\t   */\n\n\n\t  controlChildren() {\n\t    return Array.from(this.control.getElementsByClassName(this.settings.itemClass));\n\t  }\n\t  /**\n\t   * Disables user input on the control. Used while\n\t   * items are being asynchronously created.\n\t   */\n\n\n\t  lock() {\n\t    this.close();\n\t    this.isLocked = true;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Re-enables user input on the control.\n\t   */\n\n\n\t  unlock() {\n\t    this.isLocked = false;\n\t    this.refreshState();\n\t  }\n\t  /**\n\t   * Disables user input on the control completely.\n\t   * While disabled, it cannot receive focus.\n\t   */\n\n\n\t  disable() {\n\t    var self = this;\n\t    self.input.disabled = true;\n\t    self.control_input.disabled = true;\n\t    self.control_input.tabIndex = -1;\n\t    self.isDisabled = true;\n\t    self.lock();\n\t  }\n\t  /**\n\t   * Enables the control so that it can respond\n\t   * to focus and user input.\n\t   */\n\n\n\t  enable() {\n\t    var self = this;\n\t    self.input.disabled = false;\n\t    self.control_input.disabled = false;\n\t    self.control_input.tabIndex = self.tabIndex;\n\t    self.isDisabled = false;\n\t    self.unlock();\n\t  }\n\t  /**\n\t   * Completely destroys the control and\n\t   * unbinds all event listeners so that it can\n\t   * be garbage collected.\n\t   */\n\n\n\t  destroy() {\n\t    var self = this;\n\t    var revertSettings = self.revertSettings;\n\t    self.trigger('destroy');\n\t    self.off();\n\t    self.wrapper.remove();\n\t    self.dropdown.remove();\n\t    self.input.innerHTML = revertSettings.innerHTML;\n\t    self.input.tabIndex = revertSettings.tabIndex;\n\t    removeClasses(self.input, 'tomselected');\n\t    setAttr(self.input, {\n\t      hidden: null\n\t    });\n\t    self.input.required = this.isRequired;\n\n\t    self._destroy();\n\n\t    delete self.input.tomselect;\n\t  }\n\t  /**\n\t   * A helper method for rendering \"item\" and\n\t   * \"option\" templates, given the data.\n\t   *\n\t   */\n\n\n\t  render(templateName, data) {\n\t    if (typeof this.settings.render[templateName] !== 'function') {\n\t      return null;\n\t    }\n\n\t    return this._render(templateName, data);\n\t  }\n\t  /**\n\t   * _render() can be called directly when we know we don't want to hit the cache\n\t   * return type could be null for some templates, we need https://github.com/microsoft/TypeScript/issues/33014\n\t   */\n\n\n\t  _render(templateName, data) {\n\t    var value = '',\n\t        id,\n\t        html;\n\t    const self = this;\n\n\t    if (templateName === 'option' || templateName === 'item') {\n\t      value = get_hash(data[self.settings.valueField]);\n\t      html = self.rendered(templateName, value);\n\n\t      if (html) {\n\t        return html;\n\t      }\n\t    } // render markup\n\n\n\t    html = self.settings.render[templateName].call(this, data, escape_html);\n\n\t    if (html == null) {\n\t      return html;\n\t    }\n\n\t    html = getDom(html); // add mandatory attributes\n\n\t    if (templateName === 'option' || templateName === 'option_create') {\n\t      if (data[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'aria-disabled': 'true'\n\t        });\n\t      } else {\n\t        setAttr(html, {\n\t          'data-selectable': ''\n\t        });\n\t      }\n\t    } else if (templateName === 'optgroup') {\n\t      id = data.group[self.settings.optgroupValueField];\n\t      setAttr(html, {\n\t        'data-group': id\n\t      });\n\n\t      if (data.group[self.settings.disabledField]) {\n\t        setAttr(html, {\n\t          'data-disabled': ''\n\t        });\n\t      }\n\t    }\n\n\t    if (templateName === 'option' || templateName === 'item') {\n\t      setAttr(html, {\n\t        'data-value': value\n\t      }); // make sure we have some classes if a template is overwritten\n\n\t      if (templateName === 'item') {\n\t        addClasses(html, self.settings.itemClass);\n\t      } else {\n\t        addClasses(html, self.settings.optionClass);\n\t        setAttr(html, {\n\t          role: 'option',\n\t          id: data.$id\n\t        });\n\t      } // update cache\n\n\n\t      self.renderCache[templateName][value] = html;\n\t    }\n\n\t    return html;\n\t  }\n\t  /**\n\t   * Return the previously rendered item or option\n\t   *\n\t   */\n\n\n\t  rendered(templateName, value) {\n\t    return value !== null && this.renderCache[templateName].hasOwnProperty(value) ? this.renderCache[templateName][value] : null;\n\t  }\n\t  /**\n\t   * Clears the render cache for a template. If\n\t   * no template is given, clears all render\n\t   * caches.\n\t   *\n\t   */\n\n\n\t  clearCache(templateName) {\n\t    var self = this; // remove options from DOM\n\n\t    if (templateName === void 0 || 'option') {\n\t      for (let key in self.options) {\n\t        const el = self.getOption(key);\n\t        if (el) el.remove();\n\t      }\n\t    }\n\n\t    if (templateName === void 0) {\n\t      self.renderCache = {\n\t        'item': {},\n\t        'option': {}\n\t      };\n\t    } else {\n\t      self.renderCache[templateName] = {};\n\t    }\n\t  }\n\t  /**\n\t   * Determines whether or not to display the\n\t   * create item prompt, given a user input.\n\t   *\n\t   */\n\n\n\t  canCreate(input) {\n\t    return this.settings.create && input.length > 0 && this.settings.createFilter.call(this, input);\n\t  }\n\t  /**\n\t   * Wraps this.`method` so that `new_fn` can be invoked 'before', 'after', or 'instead' of the original method\n\t   *\n\t   * this.hook('instead','onKeyDown',function( arg1, arg2 ...){\n\t   *\n\t   * });\n\t   */\n\n\n\t  hook(when, method, new_fn) {\n\t    var self = this;\n\t    var orig_method = self[method];\n\n\t    self[method] = function () {\n\t      var result, result_new;\n\n\t      if (when === 'after') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\n\t      result_new = new_fn.apply(self, arguments);\n\n\t      if (when === 'instead') {\n\t        return result_new;\n\t      }\n\n\t      if (when === 'before') {\n\t        result = orig_method.apply(self, arguments);\n\t      }\n\n\t      return result;\n\t    };\n\t  }\n\n\t}\n\n\t/**\n\t * Plugin: \"change_listener\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('change_listener', function () {\n\t  const self = this;\n\n\t  const joined = arr => arr.join(self.settings.delimiter);\n\n\t  addEvent(self.input, 'change', () => {\n\t    var settings = getSettings(self.input, {\n\t      delimiter: self.settings.delimiter\n\t    }); // prevent infinite loops\n\n\t    if (joined(self.items) == joined(settings.items)) {\n\t      return;\n\t    }\n\n\t    self.setupOptions(settings.options, settings.optgroups);\n\t    self.setValue(settings.items);\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('checkbox_options', function () {\n\t  var self = this;\n\t  var orig_onOptionSelect = self.onOptionSelect;\n\t  self.settings.hideSelected = false; // update the checkbox for an option\n\n\t  var UpdateCheckbox = function UpdateCheckbox(option) {\n\t    setTimeout(() => {\n\t      var checkbox = option.querySelector('input');\n\n\t      if (option.classList.contains('selected')) {\n\t        checkbox.checked = true;\n\t      } else {\n\t        checkbox.checked = false;\n\t      }\n\t    }, 1);\n\t  }; // add checkbox to option template\n\n\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_option = self.settings.render.option;\n\n\t    self.settings.render.option = (data, escape_html) => {\n\t      var rendered = getDom(orig_render_option.call(self, data, escape_html));\n\t      var checkbox = document.createElement('input');\n\t      checkbox.addEventListener('click', function (evt) {\n\t        preventDefault(evt);\n\t      });\n\t      checkbox.type = 'checkbox';\n\t      const hashed = hash_key(data[self.settings.valueField]);\n\n\t      if (hashed && self.items.indexOf(hashed) > -1) {\n\t        checkbox.checked = true;\n\t      }\n\n\t      rendered.prepend(checkbox);\n\t      return rendered;\n\t    };\n\t  }); // uncheck when item removed\n\n\t  self.on('item_remove', value => {\n\t    var option = self.getOption(value);\n\n\t    if (option) {\n\t      // if dropdown hasn't been opened yet, the option won't exist\n\t      option.classList.remove('selected'); // selected class won't be removed yet\n\n\t      UpdateCheckbox(option);\n\t    }\n\t  }); // remove items when selected option is clicked\n\n\t  self.hook('instead', 'onOptionSelect', (evt, option) => {\n\t    if (option.classList.contains('selected')) {\n\t      option.classList.remove('selected');\n\t      self.removeItem(option.dataset.value);\n\t      self.refreshOptions();\n\t      preventDefault(evt, true);\n\t      return;\n\t    }\n\n\t    orig_onOptionSelect.call(self, evt, option);\n\t    UpdateCheckbox(option);\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('clear_button', function (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    className: 'clear-button',\n\t    title: 'Clear All',\n\t    html: data => {\n\t      return `<div class=\"${data.className}\" title=\"${data.title}\">&times;</div>`;\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var button = getDom(options.html(options));\n\t    button.addEventListener('click', evt => {\n\t      self.clear();\n\t      evt.preventDefault();\n\t      evt.stopPropagation();\n\t    });\n\t    self.control.appendChild(button);\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"drag_drop\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('drag_drop', function () {\n\t  var self = this;\n\t  if (!$.fn.sortable) throw new Error('The \"drag_drop\" plugin requires jQuery UI \"sortable\".');\n\t  if (self.settings.mode !== 'multi') return;\n\t  var orig_lock = self.lock;\n\t  var orig_unlock = self.unlock;\n\t  self.hook('instead', 'lock', () => {\n\t    var sortable = $(self.control).data('sortable');\n\t    if (sortable) sortable.disable();\n\t    return orig_lock.call(self);\n\t  });\n\t  self.hook('instead', 'unlock', () => {\n\t    var sortable = $(self.control).data('sortable');\n\t    if (sortable) sortable.enable();\n\t    return orig_unlock.call(self);\n\t  });\n\t  self.on('initialize', () => {\n\t    var $control = $(self.control).sortable({\n\t      items: '[data-value]',\n\t      forcePlaceholderSize: true,\n\t      disabled: self.isLocked,\n\t      start: (e, ui) => {\n\t        ui.placeholder.css('width', ui.helper.css('width'));\n\t        $control.css({\n\t          overflow: 'visible'\n\t        });\n\t      },\n\t      stop: () => {\n\t        $control.css({\n\t          overflow: 'hidden'\n\t        });\n\t        var values = [];\n\t        $control.children('[data-value]').each(function () {\n\t          if (this.dataset.value) values.push(this.dataset.value);\n\t        });\n\t        self.setValue(values);\n\t      }\n\t    });\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"dropdown_header\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('dropdown_header', function (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    title: 'Untitled',\n\t    headerClass: 'dropdown-header',\n\t    titleRowClass: 'dropdown-header-title',\n\t    labelClass: 'dropdown-header-label',\n\t    closeClass: 'dropdown-header-close',\n\t    html: data => {\n\t      return '<div class=\"' + data.headerClass + '\">' + '<div class=\"' + data.titleRowClass + '\">' + '<span class=\"' + data.labelClass + '\">' + data.title + '</span>' + '<a class=\"' + data.closeClass + '\">&times;</a>' + '</div>' + '</div>';\n\t    }\n\t  }, userOptions);\n\t  self.on('initialize', () => {\n\t    var header = getDom(options.html(options));\n\t    var close_link = header.querySelector('.' + options.closeClass);\n\n\t    if (close_link) {\n\t      close_link.addEventListener('click', evt => {\n\t        preventDefault(evt, true);\n\t        self.close();\n\t      });\n\t    }\n\n\t    self.dropdown.insertBefore(header, self.dropdown.firstChild);\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"dropdown_input\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('dropdown_input', function () {\n\t  var self = this;\n\t  var input = self.settings.controlInput || '<input type=\"text\" autocomplete=\"off\" class=\"dropdown-input\" />';\n\t  input = getDom(input);\n\n\t  if (self.settings.placeholder) {\n\t    setAttr(input, {\n\t      placeholder: self.settings.placeholder\n\t    });\n\t  }\n\n\t  self.settings.controlInput = input;\n\t  self.settings.shouldOpen = true; // make sure the input is shown even if there are no options to display in the dropdown\n\n\t  self.on('initialize', () => {\n\t    // open/close dropdown when tabbing focus on wrapper\n\t    addEvent(self.wrapper, 'focus', evt => {\n\t      self.onFocus(evt);\n\t    });\n\n\t    const setTabIndex = () => {\n\t      setAttr(self.wrapper, {\n\t        tabindex: self.input.disabled ? '-1' : self.tabIndex\n\t      });\n\t    };\n\n\t    self.on('dropdown_close', setTabIndex);\n\t    self.on('dropdown_open', () => setAttr(self.wrapper, {\n\t      tabindex: '-1'\n\t    }));\n\t    setTabIndex(); // keyboard navigation\n\n\t    addEvent(self.wrapper, 'keypress', evt => {\n\t      if (self.control.contains(evt.target)) {\n\t        return;\n\t      }\n\n\t      if (self.dropdown.contains(evt.target)) {\n\t        return;\n\t      } // open dropdown on enter when wrapper is tab-focused\n\n\n\t      switch (evt.keyCode) {\n\t        case KEY_RETURN:\n\t          self.onClick();\n\t          return;\n\t      }\n\t    });\n\t    let div = getDom('<div class=\"dropdown-input-wrap\">');\n\t    div.appendChild(input);\n\t    self.dropdown.insertBefore(div, self.dropdown.firstChild);\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('input_autogrow', function () {\n\t  var self = this;\n\t  self.on('initialize', () => {\n\t    var test_input = document.createElement('span');\n\t    var control = self.control_input;\n\t    test_input.style.cssText = 'position:absolute; top:-99999px; left:-99999px; width:auto; padding:0; white-space:pre; ';\n\t    self.wrapper.appendChild(test_input);\n\t    var transfer_styles = ['letterSpacing', 'fontSize', 'fontFamily', 'fontWeight', 'textTransform'];\n\n\t    for (const style_name of transfer_styles) {\n\t      // @ts-ignore TS7015 https://stackoverflow.com/a/50506154/697576\n\t      test_input.style[style_name] = control.style[style_name];\n\t    }\n\t    /**\n\t     * Set the control width\n\t     *\n\t     */\n\n\n\t    var resize = () => {\n\t      if (self.items.length > 0) {\n\t        test_input.textContent = control.value;\n\t        control.style.width = test_input.clientWidth + 'px';\n\t      } else {\n\t        control.style.width = '';\n\t      }\n\t    };\n\n\t    resize();\n\t    self.on('update item_add item_remove', resize);\n\t    addEvent(control, 'input', resize);\n\t    addEvent(control, 'keyup', resize);\n\t    addEvent(control, 'blur', resize);\n\t    addEvent(control, 'update', resize);\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('no_backspace_delete', function () {\n\t  var self = this;\n\t  var orig_deleteSelection = self.deleteSelection;\n\t  this.hook('instead', 'deleteSelection', evt => {\n\t    if (self.activeItems.length) {\n\t      return orig_deleteSelection.call(self, evt);\n\t    }\n\n\t    return false;\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"input_autogrow\" (Tom Select)\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('no_active_items', function () {\n\t  this.hook('instead', 'setActiveItem', () => {});\n\t  this.hook('instead', 'selectAll', () => {});\n\t});\n\n\t/**\n\t * Plugin: \"optgroup_columns\" (Tom Select.js)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('optgroup_columns', function () {\n\t  var self = this;\n\t  var orig_keydown = self.onKeyDown;\n\t  self.hook('instead', 'onKeyDown', evt => {\n\t    var index, option, options, optgroup;\n\n\t    if (!self.isOpen || !(evt.keyCode === KEY_LEFT || evt.keyCode === KEY_RIGHT)) {\n\t      return orig_keydown.call(self, evt);\n\t    }\n\n\t    optgroup = parentMatch(self.activeOption, '[data-group]');\n\t    index = nodeIndex(self.activeOption, '[data-selectable]');\n\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\n\t    if (evt.keyCode === KEY_LEFT) {\n\t      optgroup = optgroup.previousSibling;\n\t    } else {\n\t      optgroup = optgroup.nextSibling;\n\t    }\n\n\t    if (!optgroup) {\n\t      return;\n\t    }\n\n\t    options = optgroup.querySelectorAll('[data-selectable]');\n\t    option = options[Math.min(options.length - 1, index)];\n\n\t    if (option) {\n\t      self.setActiveOption(option);\n\t    }\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"remove_button\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('remove_button', function (userOptions) {\n\t  const options = Object.assign({\n\t    label: '&times;',\n\t    title: 'Remove',\n\t    className: 'remove',\n\t    append: true\n\t  }, userOptions); //options.className = 'remove-single';\n\n\t  var self = this; // override the render method to add remove button to each item\n\n\t  if (!options.append) {\n\t    return;\n\t  }\n\n\t  var html = '<a href=\"javascript:void(0)\" class=\"' + options.className + '\" tabindex=\"-1\" title=\"' + escape_html(options.title) + '\">' + options.label + '</a>';\n\t  self.hook('after', 'setupTemplates', () => {\n\t    var orig_render_item = self.settings.render.item;\n\n\t    self.settings.render.item = (data, escape) => {\n\t      var rendered = getDom(orig_render_item.call(self, data, escape));\n\t      var close_button = getDom(html);\n\t      rendered.appendChild(close_button);\n\t      addEvent(close_button, 'mousedown', evt => {\n\t        preventDefault(evt, true);\n\t      });\n\t      addEvent(close_button, 'click', evt => {\n\t        // propagating will trigger the dropdown to show for single mode\n\t        preventDefault(evt, true);\n\t        if (self.isLocked) return;\n\t        var value = rendered.dataset.value;\n\t        self.removeItem(value);\n\t        self.refreshOptions(false);\n\t      });\n\t      return rendered;\n\t    };\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('restore_on_backspace', function (userOptions) {\n\t  const self = this;\n\t  const options = Object.assign({\n\t    text: option => {\n\t      return option[self.settings.labelField];\n\t    }\n\t  }, userOptions);\n\t  self.on('item_remove', function (value) {\n\t    if (self.control_input.value.trim() === '') {\n\t      var option = self.options[value];\n\n\t      if (option) {\n\t        self.setTextboxValue(options.text.call(self, option));\n\t      }\n\t    }\n\t  });\n\t});\n\n\t/**\n\t * Plugin: \"restore_on_backspace\" (Tom Select)\n\t * Copyright (c) contributors\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this\n\t * file except in compliance with the License. You may obtain a copy of the License at:\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software distributed under\n\t * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n\t * ANY KIND, either express or implied. See the License for the specific language\n\t * governing permissions and limitations under the License.\n\t *\n\t */\n\tTomSelect.define('virtual_scroll', function () {\n\t  const self = this;\n\t  const orig_canLoad = self.canLoad;\n\t  const orig_clearActiveOption = self.clearActiveOption;\n\t  const orig_loadCallback = self.loadCallback;\n\t  var pagination = {};\n\t  var dropdown_content;\n\t  var loading_more = false;\n\n\t  if (!self.settings.firstUrl) {\n\t    throw 'virtual_scroll plugin requires a firstUrl() method';\n\t  } // in order for virtual scrolling to work,\n\t  // options need to be ordered the same way they're returned from the remote data source\n\n\n\t  self.settings.sortField = [{\n\t    field: '$order'\n\t  }, {\n\t    field: '$score'\n\t  }]; // can we load more results for given query?\n\n\t  function canLoadMore(query) {\n\t    if (typeof self.settings.maxOptions === 'number' && dropdown_content.children.length >= self.settings.maxOptions) {\n\t      return false;\n\t    }\n\n\t    if (query in pagination && pagination[query]) {\n\t      return true;\n\t    }\n\n\t    return false;\n\t  } // set the next url that will be\n\n\n\t  self.setNextUrl = function (value, next_url) {\n\t    pagination[value] = next_url;\n\t  }; // getUrl() to be used in settings.load()\n\n\n\t  self.getUrl = function (query) {\n\t    if (query in pagination) {\n\t      const next_url = pagination[query];\n\t      pagination[query] = false;\n\t      return next_url;\n\t    } // if the user goes back to a previous query\n\t    // we need to load the first page again\n\n\n\t    pagination = {};\n\t    return self.settings.firstUrl(query);\n\t  }; // don't clear the active option (and cause unwanted dropdown scroll)\n\t  // while loading more results\n\n\n\t  self.hook('instead', 'clearActiveOption', () => {\n\t    if (loading_more) {\n\t      return;\n\t    }\n\n\t    return orig_clearActiveOption.call(self);\n\t  }); // override the canLoad method\n\n\t  self.hook('instead', 'canLoad', query => {\n\t    // first time the query has been seen\n\t    if (!(query in pagination)) {\n\t      return orig_canLoad.call(self, query);\n\t    }\n\n\t    return canLoadMore(query);\n\t  }); // wrap the load\n\n\t  self.hook('instead', 'loadCallback', (options, optgroups) => {\n\t    if (!loading_more) {\n\t      self.clearOptions();\n\t    }\n\n\t    orig_loadCallback.call(self, options, optgroups);\n\t    loading_more = false;\n\t  }); // add templates to dropdown\n\t  //\tloading_more if we have another url in the queue\n\t  //\tno_more_results if we don't have another url in the queue\n\n\t  self.hook('after', 'refreshOptions', () => {\n\t    const query = self.lastValue;\n\t    var option;\n\n\t    if (canLoadMore(query)) {\n\t      option = self.render('loading_more', {\n\t        query: query\n\t      });\n\t      if (option) option.setAttribute('data-selectable', ''); // so that navigating dropdown with [down] keypresses can navigate to this node\n\t    } else if (query in pagination && !dropdown_content.querySelector('.no-results')) {\n\t      option = self.render('no_more_results', {\n\t        query: query\n\t      });\n\t    }\n\n\t    if (option) {\n\t      addClasses(option, self.settings.optionClass);\n\t      dropdown_content.append(option);\n\t    }\n\t  }); // add scroll listener and default templates\n\n\t  self.on('initialize', () => {\n\t    dropdown_content = self.dropdown_content; // default templates\n\n\t    self.settings.render = Object.assign({}, {\n\t      loading_more: function () {\n\t        return `<div class=\"loading-more-results\">Loading more results ... </div>`;\n\t      },\n\t      no_more_results: function () {\n\t        return `<div class=\"no-more-results\">No more results</div>`;\n\t      }\n\t    }, self.settings.render); // watch dropdown content scroll position\n\n\t    dropdown_content.addEventListener('scroll', function () {\n\t      const scroll_percent = dropdown_content.clientHeight / (dropdown_content.scrollHeight - dropdown_content.scrollTop);\n\n\t      if (scroll_percent < 0.95) {\n\t        return;\n\t      } // !important: this will get checked again in load() but we still need to check here otherwise loading_more will be set to true\n\n\n\t      if (!canLoadMore(self.lastValue)) {\n\t        return;\n\t      } // don't call load() too much\n\n\n\t      if (loading_more) return;\n\t      loading_more = true;\n\t      self.load.call(self, self.lastValue);\n\t    });\n\t  });\n\t});\n\n\treturn TomSelect;\n\n})));\nvar tomSelect=function(el,opts){return new TomSelect(el,opts);} \n//# sourceMappingURL=tom-select.complete.js.map\n"],"names":["module","exports","forEvents","events","callback","split","forEach","event","MicroEvent","constructor","this","_events","on","fct","push","off","n","arguments","length","splice","indexOf","trigger","args","self","apply","MicroPlugin","Interface","plugins","super","names","settings","requested","loaded","static","name","fn","initializePlugins","key","queue","Array","isArray","plugin","options","hasOwnProperty","shift","require","loadPlugin","Error","latin_pat","accent_pat","accent_reg","RegExp","diacritic_patterns","latin_convert","convert_pat","Object","keys","join","code_points","asciifold","str","normalize","replace","toLowerCase","foreignletter","arrayToPattern","chars","glue","allSubstrings","input","result","substring","subresult","tmp","slice","charAt","unshift","generateDiacritics","diacritics","code_range","i","diacritic","String","fromCharCode","latin","latin_chars","sort","a","b","pattern","map","sub_pat","l","diacriticRegexPoints","regex","undefined","part","no_accent","composed_part","getAttr","obj","getAttrNesting","scoreValue","value","token","weight","score","pos","search","string","escape_regex","propToArray","iterate","object","cmp","Sifter","items","tokenize","query","respect_word_boundaries","weights","tokens","words","field_regex","word","field_match","field","match","getScoreFunction","prepareSearch","_getScoreFunction","token_count","fields","field_count","getAttrFn","scoreObject","data","sum","conjunction","getSortFunction","_getSortFunction","implicit_score","sort_empty","sort_flds","multipliers","get_field","id","direction","sort_flds_count","sort_fld","multiplier","optsUser","assign","trim","total","nesting","fn_score","item","filter","fn_sort","limit","getDom","jquery","HTMLElement","div","document","createElement","innerHTML","firstChild","querySelector","escapeQuery","triggerEvent","dom_el","event_name","createEvent","initEvent","dispatchEvent","applyCSS","css","style","addClasses","elmts","classes","norm_classes","classesArray","castAsArray","el","cls","classList","add","removeClasses","remove","_classes","concat","Boolean","arg","parentMatch","target","selector","wrapper","contains","matches","parentNode","getTail","list","isEmptyObject","nodeIndex","amongst","nodeName","previousElementSibling","setAttr","attrs","attr","val","removeAttribute","setAttribute","replaceNode","existing","replacement","replaceChild","highlight","element","highlightText","node","spannode","className","middlebit","splitText","index","middleclone","cloneNode","appendChild","highlightChildren","nodeType","childNodes","test","tagName","highlightRecursive","removeHighlight","elements","querySelectorAll","prototype","call","parent","KEY_A","KEY_RETURN","KEY_ESC","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","KEY_BACKSPACE","KEY_DELETE","KEY_TAB","KEY_SHORTCUT","navigator","userAgent","defaults","optgroups","delimiter","splitOn","persist","create","createOnBlur","createFilter","openOnFocus","shouldOpen","maxOptions","maxItems","hideSelected","duplicates","addPrecedence","selectOnTab","preload","allowEmptyOption","closeAfterSelect","loadThrottle","loadingClass","dataAttr","optgroupField","valueField","labelField","disabledField","optgroupLabelField","optgroupValueField","lockOptgroupOrder","sortField","searchField","searchConjunction","mode","wrapperClass","inputClass","dropdownClass","dropdownContentClass","itemClass","optionClass","dropdownParent","controlInput","copyClassesToDropdown","placeholder","hidePlaceholder","shouldLoad","render","hash_key","get_hash","escape_html","loadDebounce","delay","timeout","loading","Math","max","clearTimeout","setTimeout","loadedSearches","debounce_events","types","type","event_args","getSelection","start","selectionStart","selectionEnd","preventDefault","evt","stop","stopPropagation","addEvent","addEventListener","isKeyDown","key_name","altKey","ctrlKey","shiftKey","metaKey","getId","existing_id","getAttribute","addSlashes","append","getSettings","settings_user","attr_data","field_label","field_value","field_disabled","field_optgroup","field_optgroup_label","field_optgroup_value","tag_name","option","textContent","settings_element","init_textbox","data_raw","JSON","parse","opt","values","_value","optionsMap","group_count","readData","dataset","json","addOption","group","arr","option_data","disabled","$option","selected","addGroup","optgroup","optgroup_data","children","hasAttribute","child","init_select","instance_i","TomSelect","input_arg","dir","order","tab_key","isOpen","isDisabled","isInvalid","isLocked","isFocused","isInputHidden","isSetup","ignoreFocus","hasOptions","lastValue","caretPos","activeOption","activeItems","userOptions","renderCache","tomselect","window","getComputedStyle","getPropertyValue","tabIndex","is_select_tag","rtl","inputId","isRequired","required","sifter","setupOptions","control","control_input","dropdown","dropdown_content","inputMode","classes_plugins","control_id","setupCallbacks","setupTemplates","passive_event","passive","listboxId","_render","role","haspopup","label","for","label_id","width","multiple","load","onOptionSelect","target_match","onItemSelect","onClick","e","onKeyDown","onKeyUp","onKeyPress","positionDropdown","onBlur","onFocus","onPaste","doc_mousedown","composedPath","blur","inputState","win_scroll","_destroy","removeEventListener","revertSettings","hidden","insertAdjacentElement","setValue","refreshState","updateOriginalInput","refreshItems","close","disable","onChange","setup","registerOption","registerOptionGroup","templates","escape","callbacks","clearActiveItems","focus","onMouseDown","isFull","pastedText","inputValue","splitInput","piece","createItem","character","keyCode","which","selectAll","open","next","getAdjacent","setActiveOption","prev","advanceSelection","deleteSelection","refreshOptions","wasFocused","showInput","deactivate","setActiveItem","setCaret","parentElement","lastQuery","addItem","canLoad","loadCallback","bind","clearActiveOption","setTextboxValue","getValue","silent","clear","addItems","setMaxItems","eventName","begin","end","swap","last","getLastActive","setActiveItemClass","removeActiveItem","hideInput","last_active","idx","scrollToOption","behavior","content","height_menu","clientHeight","scrollTop","height_item","offsetHeight","y","getBoundingClientRect","top","scroll","scrollBehavior","controlChildren","getSearchOptions","calculateScore","currentResults","hashed","triggerDropdown","j","k","html","has_create_option","active_value","active_group","groups","groups_order","results","active_option","show_dropdown","closest","min","opt_value","option_el","getOption","toggle","includes","createDocumentFragment","$id","$order","group_options","header","group_html","tok","add_template","template","insertBefore","canCreate","active_index","selectable","dat","addOptionGroup","hashed_id","removeOptionGroup","clearCache","clearOptionGroups","updateOption","item_new","index_item","value_new","getItem","uncacheValue","option_new","removeOption","removeItem","clearOptions","remove_node","cache_items","cache_options","rendered","all","x","isPending","wasFull","insertAtCaret","output","caret","lock","created","unlock","refreshValidityState","checkValidity","invalid","opts","AddSelected","prepend","visibility","display","context","rect","scrollY","left","scrollX","selection","tail","rm_items","onDelete","pop","adjacent","nextElementSibling","new_pos","from","getElementsByClassName","enable","destroy","templateName","hook","when","method","new_fn","orig_method","result_new","define","joined","orig_onOptionSelect","UpdateCheckbox","checkbox","checked","orig_render_option","title","button","$","sortable","orig_lock","orig_unlock","$control","forcePlaceholderSize","ui","helper","overflow","each","headerClass","titleRowClass","labelClass","closeClass","close_link","setTabIndex","tabindex","test_input","cssText","transfer_styles","style_name","resize","clientWidth","orig_deleteSelection","orig_keydown","previousSibling","nextSibling","orig_render_item","close_button","text","orig_canLoad","orig_clearActiveOption","orig_loadCallback","pagination","loading_more","firstUrl","canLoadMore","setNextUrl","next_url","getUrl","no_more_results","scrollHeight","factory"],"sourceRoot":""}