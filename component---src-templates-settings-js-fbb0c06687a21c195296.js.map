{"version":3,"sources":["webpack:///./src/components/ThemePicker/index.js","webpack:///./src/templates/settings.js"],"names":["ThemePicker","useTheme","font","darkMode","setFont","onThemeChange","toggleDarkMode","className","htmlFor","id","value","onChange","e","target","label","type","checked","Template","data","markdownRemark","site","allMarkdownRemark","frontmatter","html","content","useRef","useCopyExample","BaseTemplate","title","topMenuItems","siteMetadata","menuItems","edges","menuCategories","ref","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"mPA8DeA,EA3DK,WAAO,IAAD,EAC6BC,cAA5CC,EADe,EACfA,KAAMC,EADS,EACTA,SAAUC,EADD,EACCA,QAIlBC,EALiB,EACUC,eAMjC,OACG,yBAAKC,UAAU,gBACZ,yBAAKA,UAAU,gBACZ,yBAAKA,UAAU,2CACZ,yBAAKA,UAAU,oBACZ,2BACGC,QAAQ,aACRD,UAAU,2BAFb,eAMA,yBAAKA,UAAU,6BACZ,4BACGA,UAAU,iBACVE,GAAG,aACHC,MAAOR,EACPS,SArBA,SAACC,GACnBR,EAAQQ,EAAEC,OAAOH,SAsBC,8BAAUI,MAAM,YACb,4BAAQJ,MAAM,IAAd,aACA,4BAAQA,MAAM,WAAd,YAEH,8BAAUI,MAAM,oBACb,4BAAQJ,MAAM,cAAd,qBAEH,8BAAUI,MAAM,yBACb,4BAAQJ,MAAM,UAAd,UACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,eAAd,mBAKZ,yBAAKH,UAAU,oBACZ,yBAAKA,UAAU,cACZ,2BAAOA,UAAU,qBACd,2BACGQ,KAAK,WACLC,QAASb,EACTQ,SAAUN,IAEb,0BAAME,UAAU,oBAAhB,aACA,0BAAMA,UAAU,8BC7CzB,SAASU,EAAT,GAEX,IADDC,EACA,EADAA,KAEQC,EAA4CD,EAA5CC,eAAgBC,EAA4BF,EAA5BE,KAAMC,EAAsBH,EAAtBG,kBACtBC,EAAsBH,EAAtBG,YAAaC,EAASJ,EAATI,KACfC,EAAUC,iBAAO,MAGvB,OAFAC,YAAeF,GAGZ,kBAACG,EAAA,EAAD,CACGC,MAAON,EAAYM,MACnBC,aAAcT,EAAKU,aAAaD,aAChCE,UAAWV,EAAkBW,MAC7BC,eAAgBb,EAAKU,aAAaG,gBAElC,yBAAKC,IAAKV,EAASW,wBAAyB,CAAEC,OAAQb,KACtD,kBAAC,EAAD,OAKF,IAAMc,EAAS","file":"component---src-templates-settings-js-fbb0c06687a21c195296.js","sourcesContent":["import React from 'react';\nimport { useTheme } from '../Theme';\n\nconst ThemePicker = () => {\n   const { font, darkMode, setFont, toggleDarkMode } = useTheme();\n   const onFontChange = (e) => {\n      setFont(e.target.value);\n   };\n   const onThemeChange = toggleDarkMode;\n\n   return (\n      <div className=\"theme-picker\">\n         <div className=\"example-grid\">\n            <div className=\"example-grid__col example-grid__col--50\">\n               <div className=\"env-form-element\">\n                  <label\n                     htmlFor=\"selectFont\"\n                     className=\"env-form-element__label\"\n                  >\n                     Font family\n                  </label>\n                  <div className=\"env-form-element__control\">\n                     <select\n                        className=\"env-form-input\"\n                        id=\"selectFont\"\n                        value={font}\n                        onChange={onFontChange}\n                     >\n                        <optgroup label=\"Web Safe\">\n                           <option value=\"\">Helvetica</option>\n                           <option value=\"georgia\">Georgia</option>\n                        </optgroup>\n                        <optgroup label=\"Web Font - Serif\">\n                           <option value=\"frank-ruhl\">Frank Ruhl Libre</option>\n                        </optgroup>\n                        <optgroup label=\"Web Font - Sans Serif\">\n                           <option value=\"roboto\">Roboto</option>\n                           <option value=\"open-sans\">Open Sans</option>\n                           <option value=\"source-sans\">Source Sans</option>\n                        </optgroup>\n                     </select>\n                  </div>\n               </div>\n               <div className=\"env-form-element\">\n                  <div className=\"env-switch\">\n                     <label className=\"env-switch__label\">\n                        <input\n                           type=\"checkbox\"\n                           checked={darkMode}\n                           onChange={onThemeChange}\n                        />\n                        <span className=\"env-switch__text\">Dark Mode</span>\n                        <span className=\"env-switch__slider\"></span>\n                     </label>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n\nexport default ThemePicker;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport { useCopyExample } from '../hooks/copyExample';\nimport BaseTemplate from './BaseTemplate';\nimport ThemePicker from '../components/ThemePicker';\n\nexport default function Template({\n   data, // this prop will be injected by the GraphQL query below.\n}) {\n   const { markdownRemark, site, allMarkdownRemark } = data;\n   const { frontmatter, html } = markdownRemark;\n   const content = useRef(null);\n   useCopyExample(content);\n\n   return (\n      <BaseTemplate\n         title={frontmatter.title}\n         topMenuItems={site.siteMetadata.topMenuItems}\n         menuItems={allMarkdownRemark.edges}\n         menuCategories={site.siteMetadata.menuCategories}\n      >\n         <div ref={content} dangerouslySetInnerHTML={{ __html: html }} />\n         <ThemePicker></ThemePicker>\n      </BaseTemplate>\n   );\n}\n\nexport const pageQuery = graphql`\n   query($slug: String!) {\n      site {\n         siteMetadata {\n            topMenuItems {\n               label\n               to\n            }\n            menuCategories {\n               title\n               slug\n            }\n         }\n      }\n      markdownRemark(fields: { slug: { eq: $slug } }) {\n         html\n         frontmatter {\n            title\n         }\n      }\n      allMarkdownRemark {\n         edges {\n            node {\n               id\n               frontmatter {\n                  title\n               }\n               fields {\n                  slug\n               }\n            }\n         }\n      }\n   }\n`;\n\nTemplate.propTypes = {\n   data: PropTypes.object,\n};\n"],"sourceRoot":""}